{"version":3,"file":"static/js/5313.ea95146e.chunk.js","mappings":"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","sources":["assets/images/arrowDown.svg","data/specData.js","views/widgets/WidgetsDropdown3.js","views/widgets/WidgetsDropdown4.js","views/widgets/WidgetsDropdown5.js","views/widgets/WidgetsDropdown6.js","components/Chart2.js","pages/Admin.js","views/widgets/WidgetsDropdown.js","views/widgets/WidgetsDropdown2.js"],"sourcesContent":["var _metadata, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowDown(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 256 256\",\n    enableBackground: \"new 0 0 256 256\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _metadata || (_metadata = /*#__PURE__*/React.createElement(\"metadata\", null, \" Svg Vector Icons : http://www.onlinewebfonts.com/icon \")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"M128,10C62.9,10,10,62.9,10,128c0,65.1,52.9,118,118,118c65.1,0,118-52.9,118-118C246,62.9,193.1,10,128,10z M173.8,148.4l-37,31.4c-2.5,2.1-5.6,3.2-8.7,3.2s-6.2-1.1-8.7-3.2l-37-31.4c-5.7-4.8-6.4-13.3-1.5-19c4.8-5.7,13.3-6.4,19-1.5l14.9,12.6V86.4c0-7.4,6-13.5,13.5-13.5s13.5,6,13.5,13.5v54.2l14.9-12.6c5.7-4.8,14.2-4.1,19,1.5C180.1,135.1,179.4,143.6,173.8,148.4z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowDown);\nexport default __webpack_public_path__ + \"static/media/arrowDown.de82dd32eecdb5b4cb2e3b8d4d1e1b89.svg\";\nexport { ForwardRef as ReactComponent };","\nconst specData = [\n    {\n        id: 1,\n        name: 'Звук',\n        icon: 'Sound',\n        models: [\n            {id: 1, name: 'Звукорежиссер',},\n            {id: 2, name: 'Системный инженер',},\n            {id: 3, name: 'RF-Менеджер',},\n            {id: 4, name: 'Backline',},\n            {id: 5, name: 'Roadie',},\n            {id: 6, name: 'Техник по звуку',},\n        ]\n    },\n    {\n        id: 2,\n        name: 'Свет',\n        icon: 'Light',\n        models: [\n            {id: 1, name: 'Художник по свету',},\n            {id: 2, name: 'Оператор световой пушки',},\n            {id: 3, name: 'Гафер',},\n            {id: 4, name: 'Техник по свету',},\n        ]\n    },\n    {\n        id: 3,\n        name: 'Видео',\n        icon: 'Video',\n        models: [\n            {id: 1, name: 'Инженер VMix',},\n            {id: 2, name: 'Инженер Resolume',},\n            {id: 3, name: 'Оператор Zoom',},\n            {id: 4, name: 'Оператор [cameraman]',},\n            {id: 5, name: 'Оператор-постановщик',},\n            {id: 6, name: 'Режиссер эфиров',},\n            {id: 7, name: 'Техник монтажа',},\n            {id: 8, name: 'IT-специалист',},   \n        ]\n    },\n    {\n        id: 4,\n        name: 'Фото',\n        icon: 'Photo',\n        models: [\n            {id: 1, name: 'Свадебная съемка',},\n            {id: 2, name: 'Репортажная съемка',},\n            {id: 3, name: 'Портретная съемка',},\n            {id: 4, name: 'Предметная съемка',},\n            {id: 5, name: 'Документальная съемка',},\n        ]\n    },\n    {\n        id: 5,\n        name: 'Промо \\/ Кастинг',\n        icon: 'Promo',\n        models: [\n            {id: 1, name: 'Модель',},\n            {id: 2, name: 'Актер',},\n            {id: 3, name: 'Промоутер',},\n            {id: 4, name: 'Гример',},\n        ]\n    },\n    {\n        id: 6,\n        name: 'Кейтеринг',\n        icon: 'Catering',\n        models: [\n            {id: 1, name: 'Официант',},\n            {id: 2, name: 'Бармен',},\n            {id: 3, name: 'Повар',}, \n            {id: 4, name: 'Хостес',},\n            {id: 5, name: 'Банкетный менеджер',},    \n        ]\n    },  \n    {\n        id: 7,\n        name: 'Помощники \\/ Грузчики',\n        icon: 'Stagehands',\n        models: [\n            {id: 1, name: 'Помощник \\/ Грузчик',},\n        ]\n    },\n    {\n        id: 8,\n        name: 'Риггер \\/ Граунд',\n        icon: 'Riggers \\/ Ground',\n        models: [\n            {id: 1, name: 'Верхний Риггер',},\n            {id: 2, name: 'Нижний Риггер',},\n            {id: 3, name: 'Монтажник [Ground]',},\n            {id: 4, name: 'Декоратор',},\n        ]\n    }, \n    {\n        id: 9,\n        name: 'Водители',\n        icon: 'Trucks',\n        models: [\n            {id: 1, name: 'C личным ТС [B\\/C]',},\n            {id: 2, name: 'Без личного ТС [B\\/C]',},\n            {id: 3, name: 'С гидролифтом',},\n            {id: 4, name: 'Без гидролифта',},\n        ]\n    },\n    {\n        id: 10,\n        name: 'Артисты',\n        icon: 'Party',\n        models: [\n            {id: 1, name: 'Кавер-бенд',},\n            {id: 2, name: 'Танцевальный коллектив',},\n            {id: 3, name: 'Диджей',},\n            {id: 4, name: 'Ведущий',},\n            {id: 5, name: 'Певец \\/ певица',},\n            {id: 6, name: 'Артист оригинального жанра',},\n            {id: 7, name: 'Go-Go',},\n        ]\n    },\n    {\n        id: 11,\n        name: 'Игры',\n        icon: 'Games',\n        models: [\n            {id: 1, name: 'Квесты',},\n            {id: 2, name: 'Квизы',},\n            {id: 3, name: 'Аниматоры',},\n            {id: 4, name: 'Настольные игры \\/ игровые автоматы',},\n            {id: 5, name: 'Пневмокостюмы \\/ ростовые куклы',},\n            {id: 6, name: 'Активности \\/ аттракционы',},\n        ]\n    },\n    {\n        id: 12,\n        name: 'Технический продакшн',\n        icon: 'Production',\n        models: [\n            {id: 1, name: 'Мероприятие под ключ',},\n            {id: 2, name: 'Отдельные технические задачи',},\n        ]\n    },\n];\n\nexport default specData;","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nimport Sound from \"./../../assets/images/spec/1_sound.png\";\nimport Light from \"./../../assets/images/spec/2_light.png\";\nimport Video from \"./../../assets/images/spec/3_video.png\";\nimport Photo from \"./../../assets/images/spec/4_photo.png\";\n\n\nconst WidgetsDropdown3 = ({\n  soundUsers, \n  lightUsers, \n  videoUsers, \n  photoUsers,\n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"primary\"\n          value={\n            <>\n              {soundUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Звук\"}\n          action={<img src={Sound} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      Math.floor((soundUsers+2)*100/soundUsers), \n                      Math.floor((soundUsers+3)*100/soundUsers), \n                      Math.floor((soundUsers+1)*100/soundUsers), \n                      Math.floor((soundUsers+3)*100/soundUsers), \n                      0, 0, 0], //min: -5, max: 89,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"info\"\n          value={\n            <>\n              {lightUsers} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Свет\"}\n          action={<img src={Light} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      Math.floor((lightUsers-30)*100/lightUsers), \n                      Math.floor((lightUsers-20)*100/lightUsers), \n                      Math.floor((lightUsers-10)*100/lightUsers), \n                      Math.floor((lightUsers-10)*100/lightUsers), \n                      0, 0, 0], //min: -5 max: 39\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"warning\"\n          value={\n            <>\n              {videoUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Видео\"}\n          action={<img src={Video} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      Math.floor((videoUsers-30)*100/videoUsers), \n                      Math.floor((videoUsers-30)*100/videoUsers), \n                      Math.floor((videoUsers-30)*100/videoUsers), \n                      Math.floor((videoUsers-30)*100/videoUsers), \n                      0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"danger\"\n          value={\n            <>\n              {photoUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Фото\"}\n          action={<img src={Photo} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      Math.floor((photoUsers-10)*100/photoUsers), \n                      Math.floor((photoUsers-5)*100/photoUsers), \n                      Math.floor((photoUsers-10)*100/photoUsers), \n                      Math.floor((photoUsers-10)*100/photoUsers), \n                      0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown3\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nimport Promo from \"./../../assets/images/spec/6_catering.png\";\nimport Catering from \"./../../assets/images/spec/6_catering.png\";\nimport Stagehands from \"./../../assets/images/spec/7_stagehands.png\";\nimport Riggers from \"./../../assets/images/spec/8_riggers.png\";\n\nconst WidgetsDropdown4 = ({\n  promoUsers,\n  cateringUsers,\n  stagehandsUsers, \n  riggerUsers,\n  \n}) => {\n\n  return (\n    <CRow>\n      {/* Promo */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"primary\"\n          value={\n            <>\n              {promoUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Промо / Кастинг\"}\n          action={<img src={Promo} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      (promoUsers-10)*100/promoUsers, \n                      (promoUsers-10)*100/promoUsers, \n                      (promoUsers-10)*100/promoUsers, \n                      (promoUsers-10)*100/promoUsers, \n                      0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Catering */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"info\"\n          value={\n            <>\n              {cateringUsers} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Кейтеринг\"}\n          action={<img src={Catering} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      Math.floor((cateringUsers-10)*100/cateringUsers), \n                      Math.floor((cateringUsers-10)*100/cateringUsers), \n                      Math.floor((cateringUsers-10)*100/cateringUsers), \n                      Math.floor((cateringUsers-10)*100/cateringUsers), \n                      0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Stagehands */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"warning\"\n          value={\n            <>\n              {stagehandsUsers}\n            </>\n          }\n          title={\"Помощники / Грузчики\"}\n          action={<img src={Stagehands} alt='' width={35}/>}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', \n                  'Февраль', \n                  'Март', \n                  'Апрель', \n                  'Май', \n                  'Июнь', \n                  'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      Math.floor((stagehandsUsers-30)*100/stagehandsUsers), \n                      Math.floor((stagehandsUsers-30)*100/stagehandsUsers), \n                      Math.floor((stagehandsUsers-30)*100/stagehandsUsers), \n                      Math.floor((stagehandsUsers-30)*100/stagehandsUsers), \n                      0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Rigger */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"danger\"\n          value={\n            <>\n              {riggerUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Риггер / Граунд\"}\n          action={<img src={Riggers} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      (riggerUsers-10)*100/riggerUsers, \n                      (riggerUsers-10)*100/riggerUsers, \n                      (riggerUsers-10)*100/riggerUsers, \n                      (riggerUsers-10)*100/riggerUsers, \n                      0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown4\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nimport Trucks from \"./../../assets/images/spec/9_trucks.png\";          //9\nimport Party from \"./../../assets/images/spec/10_party.png\";           //10\nimport Games from \"./../../assets/images/spec/11_stage_ground.png\";           //11\nimport Production from \"./../../assets/images/spec/12_production.png\"; //12\n\n\nconst WidgetsDropdown5 = ({\n  trucksUsers,\n  partyUsers,\n  gamesUsers,\n  productionUsers,\n  \n}) => {\n\n  return (\n    <CRow>\n      {/* Trucks */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"primary\"\n          value={\n            <>\n              {trucksUsers}\n            </>\n          }\n          title={\"Водители\"}\n          action={<img src={Trucks} alt='' width={35}/>}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Кол-во специалистов',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      (trucksUsers-10)*100/trucksUsers, \n                      (trucksUsers-10)*100/trucksUsers, \n                      (trucksUsers-10)*100/trucksUsers, \n                      (trucksUsers-10)*100/trucksUsers, \n                      0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Party */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"info\"\n          value={\n            <>\n              {partyUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Артисты\"}\n          action={<img src={Party} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      Math.floor((partyUsers-10)*100/partyUsers), \n                      Math.floor((partyUsers-10)*100/partyUsers), \n                      Math.floor((partyUsers-10)*100/partyUsers), \n                      Math.floor((partyUsers-10)*100/partyUsers), \n                      0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Games */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"warning\"\n          value={\n            <>\n              {gamesUsers}\n            </>\n          }\n          title={\"Игры\"}\n          action={<img src={Games} alt='' width={35}/>}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      Math.floor((gamesUsers-10)*100/gamesUsers), \n                      Math.floor((gamesUsers-10)*100/gamesUsers), \n                      Math.floor((gamesUsers-10)*100/gamesUsers), \n                      Math.floor((gamesUsers-10)*100/gamesUsers), \n                      0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Production */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"danger\"\n          value={\n            <>\n              {productionUsers} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Продакшн\"}\n          action={<img src={Production} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      Math.floor((productionUsers-10)*100/productionUsers), \n                      Math.floor((productionUsers-10)*100/productionUsers), \n                      Math.floor((productionUsers-10)*100/productionUsers), \n                      Math.floor((productionUsers-10)*100/productionUsers), \n                      0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol> \n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown5\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nconst WidgetsDropdown6 = ({\n  users, \n  newUsers, \n  activeUsers, \n  delUsers, \n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              {users.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Всего\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      (users.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/users.length-5, \n                     0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {newUsers.length} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Новые\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/newUsers.length-5, \n                      0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {activeUsers.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Активные\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [activeUsers, 0, 0, 0, 0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              {delUsers.length}\n            </>\n          }\n          title={\"Удаленные\"}\n          action={\"\"}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', \n                  'Февраль', \n                  'Март', \n                  'Апрель', \n                  'Май', \n                  'Июнь', \n                  'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [delUsers, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown6\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nconst Chart2 = ({ data, data2, width, height, range }) => {\n  const [activeIndex, setActiveIndex] = React.useState(null);\n\n  const scaleColor = d3.scaleSequential(d3.interpolateViridis);\n  const scaleHeight = d3.scaleLinear();\n  const scaleWidth = d3.scaleBand().padding(0.1);\n  \n  const getX = d3.scaleBand()\n    .domain(data.map(item => item.name))\n    .range([0, width]);\n\n  const getY = d3.scaleLinear()\n    .domain([0, range])\n    .range([height, 0]);\n  \n  const getYAxis = ref => {\n    const yAxis = d3.axisLeft(getY)\n      .tickSize(-width)\n      .tickPadding(7);\n    d3.select(ref).call(yAxis);\n  };\n\n  const getXAxis = ref => {\n    const xAxis = d3.axisBottom(getX);\n    d3.select(ref).call(xAxis);\n  };\n\n  // const linePath = d3.line()\n  //   .x(d => getX(d.name) + getX.bandwidth() / 2)\n  //   .y(d => getY(d.value))\n  //   .curve(d3.curveMonotoneX)(data)\n\n  // const linePath2 = d3.line()\n  //   .x(d => getX(d.name) + getX.bandwidth() / 2)\n  //   .y(d => getY(d.value))\n  //   .curve(d3.curveMonotoneX)(data2)\n\n  const areaPath = d3.area()\n    .x(d => getX(d.name) + getX.bandwidth() / 2)\n    .y0(d => getY(d.value))\n    .y1(() => getY(0))\n    .curve(d3.curveMonotoneX)(data);\n\n  const handleMouseMove = (e) => {\n    const x = e.nativeEvent.offsetX;\n    const index = Math.floor(x / getX.step());\n    setActiveIndex(index);\n  };\n\n  const handleMouseLeave = () => {\n    setActiveIndex(null);\n  };\n  \n  return (\n    <div className=\"wrapper-chart\">\n      <svg\n        className=\"svg\"\n        width={width}\n        height={height}\n        onMouseMove={handleMouseMove}\n        onMouseLeave={handleMouseLeave}\n      >\n        {/* ось y */}\n        {/* <g className=\"axis\" ref={getYAxis} /> */}\n\n        {/* ось x */}\n        <g\n          className=\"axis xAxis\"\n          ref={getXAxis}\n          transform={`translate(0,${getY(0)})`}\n        />\n        <path\n          fill=\"#4b0082\"\n          d={areaPath}\n          opacity={0}\n        />\n\n        {/* {data.map((item, index) => {\n          return (\n            <g key={index}>\n              <circle\n                cx={getX(item.name) + getX.bandwidth() / 2}\n                cy={getY(item.value)}\n                r={index === activeIndex ? 6 : 4}\n                fill=\"#7cb5ec\"\n                strokeWidth={index === activeIndex ? 2 : 0}\n                stroke=\"#fff\"\n                style={{ transition: `ease-out .1s` }}\n              />\n              <text\n                fill=\"#fff\"\n                x={getX(item.name) + getX.bandwidth() / 2}\n                y={getY(item.value) - 10}\n                textAnchor=\"middle\"\n              >\n                {item.value}\n              </text>\n            </g>\n          );\n        })}\n        {data2.map((item, index) => {\n          return (\n            <g key={index}>\n              <circle\n                cx={getX(item.name) + getX.bandwidth() / 2}\n                cy={getY(item.value)}\n                r={index === activeIndex ? 6 : 4}\n                fill=\"#7cb5ec\"\n                strokeWidth={index === activeIndex ? 2 : 0}\n                stroke=\"#fff\"\n                style={{ transition: `ease-out .1s` }}\n              />\n              <text\n                fill=\"#fff\"\n                x={getX(item.name) + getX.bandwidth() / 2}\n                y={getY(item.value) - 10}\n                textAnchor=\"middle\"\n              >\n                {item.value}\n              </text>\n            </g>\n          );\n        })} */}\n        { data.map((item, index) => {\n          return (\n            <g key={index}>\n              <rect key={index}\n                width={40}\n                height={height - getY(item.value)}\n                x={getX(item.name) + getX.bandwidth() / 2 - 20}\n                y={getY(item.value)}\n                fill='#4b0082'\n                rx=\"2\" ry=\"2\"\n              />\n              <text\n                fill=\"#fff\"\n                x={getX(item.name) + getX.bandwidth() / 2}\n                y={getY(item.value) - 10}\n                textAnchor=\"middle\"\n              >\n                {item.value ? item.value : ''}\n              </text>\n            </g>\n          );\n        })}\n\n      </svg>\n    </div>\n  );\n};\n\n\nexport default Chart2","import React, { Suspense, useState, useEffect, useRef } from 'react'\nimport { CContainer, CSpinner } from '@coreui/react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport {\n  CAvatar,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CFormInput,\n  CButton,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CCollapse,\n  CToast,\n  CToastBody,\n  CToastClose,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilPeople, cilX,\n} from '@coreui/icons'\n\nimport {\n  CWidgetStatsA,\n} from '@coreui/react'\n\nimport avatar2 from 'src/assets/images/avatars/blank-avatar.png'\nimport arrowDown from 'src/assets/images/arrowDown.svg'\n\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\nimport { getAllMessages, getMessages } from './../http/chatAPI.js'\nimport { getAllWMessages, getWorkersCount } from './../http/workerAPI.js'\n\nimport WidgetsDropdown from '../views/widgets/WidgetsDropdown'\nimport WidgetsDropdown2 from '../views/widgets/WidgetsDropdown2'\nimport WidgetsDropdown3 from '../views/widgets/WidgetsDropdown3'\nimport WidgetsDropdown4 from '../views/widgets/WidgetsDropdown4'\nimport WidgetsDropdown5 from '../views/widgets/WidgetsDropdown5'\nimport WidgetsDropdown6 from '../views/widgets/WidgetsDropdown6'\n\nimport InputMask from 'react-input-mask';\n\nimport Chart from './../components/Chart'\nimport ChartBar from './../components/Chart2'\nimport specData from 'src/data/specData'\n\nconst Admin = () => {\n\n  const grafik = useRef(null);\n\n  const { users: clients } = useUsersContext();\n  const { managers: zakazchiki } = useUsersContext();\n  const { projects: projs } = useUsersContext();\n  const { companys: comps } = useUsersContext();\n  const { userWorkers: specusers } = useUsersContext();\n  const { workersAll, workers, setWorkers } = useUsersContext();\n\n  const [contacts, setContacts] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [newClients, setNewClients] = useState([]);\n  const [oldClients, setOldClients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  \n  const [sortWorkers, setSortWorkers] = useState([]);\n  const [newWorkers, setNewWorkers] = useState([]);\n  const [activWorkers, setActivWorkers] = useState([]);\n  const [delWorkers, setDelWorkers] = useState([]);\n\n  const [sortDelWorkers, setSortDelWorkers] = useState([]);\n\n  const [sortWorkers2, setSortWorkers2] = useState([]);\n  const [newWorkers2, setNewWorkers2] = useState([]);\n  const [activWorkers2, setActivWorkers2]= useState([]);\n  const [delWorkers2, setDelWorkers2]= useState([]);\n\n  const [catCount, setCatCount] = useState([])\n\n  const [dayWorkers, setDayWorkers]= useState([]);\n  const [weekWorkers, setWeekWorkers]= useState([]);\n  const [monthWorkers, setMonthWorkers]= useState([]);\n  const [yearWorkers, setYearWorkers]= useState([]);\n  const [periodWorkers, setPeriodWorkers]= useState([]);\n\n  const [showRenthub, setShowRenthub]= useState(false);\n  const [showWorkhub, setShowWorkhub]= useState(true);\n  const [showDeleted, setShowDeleted]= useState(false);\n\n  const [activeKey, setActiveKey] = useState(2)\n\n  const [showWidget, setShowWidget] = useState(false)\n  const [showWidget2, setShowWidget2] = useState(true)\n  const [showWidget3, setShowWidget3] = useState(false)\n  const [showWidget4, setShowWidget4] = useState(false)\n  const [showWidget5, setShowWidget5] = useState(false)\n  const [showWidget6, setShowWidget6] = useState(false)\n\n  const [showCharts, setShowCharts]= useState(false);\n  const [showCharts2, setShowCharts2]= useState(false);\n  const [showCharts3, setShowCharts3]= useState(false);\n  const [showCharts4, setShowCharts4]= useState(false);\n  const [showCharts5, setShowCharts5]= useState(false);\n\n  const [showCountAll, setShowCountAll] = useState(false);\n  const [showNick, setShowNick]= useState(false);\n\n  const [tabhub, setTabhub]= useState('');\n\n  const [periodDate1, setPeriodDate1] = useState(\"\")\n  const [periodDate2, setPeriodDate2] = useState(\"\")\n\n  const [startWeek, setStartWeek] = useState(\"\")\n  const [timerId, setTimerId] = useState()\n  const [widthGrafik, setWdthGrafik] = useState(0);\n  const [text, setText]= useState(\"\");\n  const [textDelete, setTextDelete]= useState(\"\");\n  const [showTable, setShowTable] = useState([])\n\n  const chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID\n  const host = process.env.REACT_APP_API_URL\n  \n  useEffect(() => {\n    //set tab\n    setTabhub('Workhub')\n\n    //console.log(\"specusers: \", specusers)\n\n    setTimeout(()=> {\n      setShowNick(!showNick)\n    }, 10000)\n  })\n\n  useEffect(() => {\n    //get width\n    setWdthGrafik(grafik.current ? grafik.current.offsetWidth - 100 : 0)\n  }, [grafik.current]);\n//--------------------------------------------------------------------------------------------------\n\n  //поиск\n  useEffect(() => {\n\t\tconst filteredData = workersAll.filter(user=> (user.userfamily + user.username + user.chatId)?.replace(/[её]/g, '(е|ё)').toLowerCase().includes(text.replace(/[её]/g, '(е|ё)').toLowerCase()));\n    setSortWorkers(text === '' ? workersAll : filteredData); \n    setWorkers(text === '' ? workers : filteredData);  \n  }, [text]);\n\n  //поиск удаленных специалистов\n  useEffect(() => {\n\t\tconst filteredData = delWorkers.filter(user=> (user.userfamily + user.username + user.chatId)?.replace(/[её]/g, '(е|ё)').toLowerCase().includes(textDelete.replace(/[её]/g, '(е|ё)').toLowerCase()));\n    setSortDelWorkers(textDelete === '' ? delWorkers : filteredData);  \n  }, [textDelete]);\n\n\n  //get filter workers\n  useEffect(() => {\n    //setSortWorkers(workers)\n\n    const currentDate = new Date()\n    const currentMonth = currentDate.getMonth()\n\n    //массив новых пользователей за текущий месяц\n    const arr1 = workersAll.filter(item => new Date(item.createDate).getMonth() === currentMonth)\n    setNewWorkers(arr1)\n\n    //массив удаленных пользователей\n    const arrDel = workersAll.filter(item => item.deleted === true)\n    setDelWorkers(arrDel)\n    setSortDelWorkers(arrDel)\n\n  }, [workersAll])\n//--------------------------------------------------------------------------------------------------\n\n//get workers active\nuseEffect(() => {\n  const arrClients = []\n\n  const fetchData = async() => {\n\n    let messages = await getAllWMessages()\n\n    workersAll.map((client, index) => {\n\n      const allMessages = messages ? messages.length : [] //всего сообщений\n      const currentMonth = new Date().getMonth()\n      const messagesUser = messages.find(el => el.senderId === client.chatId  && new Date(el.createdAt).getMonth() === currentMonth);\n      //массив активных пользователей за текущий месяц\n      if (messagesUser !== undefined) {\n        arrClients.push(messagesUser)\n      }  \n    })\n    setActivWorkers(arrClients)\n  }\n  \n  fetchData();\n  \n}, [workersAll]);\n//---------------------------------------------------------------------------------------------------------\n\n  //get Contacts\n  useEffect(() => {\n    const arrClients = []\n\n    const fetchData = async() => {\n\n      //console.log(\"workers (admin): \", workers.length)\n      setLoading2(false)\n\n      let messages = await getAllMessages()\n\n      const managers = [...zakazchiki];\n      //console.log(\"zakazchiki: \", zakazchiki)\n\n      clients.map((client, index) => {\n        \n        let userIndex = zakazchiki?.findIndex((manager) => manager.tgID === client.chatId);  \n        const userObject = managers[userIndex];\n\n        let userObject2 = comps.find((company) => company.managers.find(man => man.id ===  userObject?.id)) //company.managers.map((manager) => manager.id === userObject?.id));  \n\n        const companyName = userObject2?.title\n        const companyCity = userObject2?.city ? userObject2?.city : ''\n\n        const lastDate = client.date ? client.date.split('T') : ''\n        const d = new Date(lastDate[0]);\n\t\t\t\tconst year = d.getFullYear();\n\t\t\t\tconst month = String(d.getMonth()+1).padStart(2, \"0\");\n\t\t\t\tconst day = String(d.getDate()).padStart(2, \"0\");\n\t\t\t\tconst newDateActivity = `${day}.${month}.${year}`\n\n        const newClientName = client.name.includes(\"|\") ? client.name.split(\" | \")[1] : client.name\n         \n        const allMessages = messages ? messages.length : [] //всего сообщений\n        const fromAdmin = messages ? messages.filter(el => el.senderId === chatAdminId) : [];\n        const messagesUsers = messages ? messages.filter(el => el.senderId === client.chatId) : [];\n\n        const arr = clients.filter(el => el.message === '');\n        setNewClients(arr)\n\n        const arr2 = clients.filter(el => el.message !== '');\n        setOldClients(arr2)\n        \n        const newObj = {\n          avatar: client.avatar,\n          user: {\n            name: newClientName,\n            new: true,\n            registered: '01.01.2023',\n          },\n          TG_ID: client.chatId,\n          city: companyCity,\n          company: companyName ? companyName : '',\n          phone: userObject?.phone,\n          usage: {\n            value: Math.round(messagesUsers.length * 100 / (allMessages - fromAdmin.length)), \n            period: '01.04.2023 - ' + newDateActivity,\n            color: 'success',\n          },\n          activity: newDateActivity,\n        }\n\n        arrClients.push(newObj)\n      })\n\n      const filteredClients = [...arrClients].filter((el) => el.TG_ID !== chatAdminId); //без админского пользователя  \n      const clientSort = [...filteredClients].sort((a, b) => {       \n\t\t\t\treturn b.usage.value-a.usage.value  //сортировка по убывающей активности  \n\t\t\t}) \n \n      setContacts(clientSort)  \n      \n      setTimeout(() => {\n        setLoading(false)\n      }, \"6000\")\n    }\n    \n    fetchData();\n    \n  }, [clients, workersAll]);\n//---------------------------------------------------------------------------------------------\n\n//get Projects\n  useEffect(() => {\n    const arrProjects = []\n\n    const fetchData = async () => {\n\t\t\t\n      projs.map(async (project) => {\n        const newProject = {\n\t\t\t\t\tid: project.id,\n\t\t\t\t\tname: project.title,\n\t\t\t\t\tstart: project.time_start,\n          created: project.time_created,\n          teh: project.teh,\n          manager: project.manager,\n          company: project.company,\n\t\t\t\t}\n        arrProjects.push(newProject)\n      })\n\n      setProjects(arrProjects) \n    }\n\n    fetchData();\n    \n  },[projs])\n\n//-----------------------------------------------------------------------------------------------\n\n  const openHub = (hub) => {\n    if (hub === 'Workhub') { \n      setShowWorkhub(true)\n      setShowRenthub(false)\n      setShowDeleted(false)\n      setActiveKey(2)\n      setShowWidget(false)\n      setShowWidget2(true)\n      setTabhub('Workhub')\n    }\n    if (hub === 'Renthub') { \n      setShowWorkhub(false)\n      setShowRenthub(true)\n      setShowDeleted(false)\n      setActiveKey(1)\n      setShowWidget(true)\n      setShowWidget2(false)\n      setTabhub('Renthub')\n    }\n    if (hub === 'Удаленные') { \n      setShowWorkhub(false)\n      setShowRenthub(false)\n      setShowDeleted(true)\n      setActiveKey(3)\n      // setShowWidget(true)\n      // setShowWidget2(false)\n      setTabhub('Удаленные')\n    }\n  }\n\n  //нажатия на кнопки\n  const showBlock = (ind) => {\n    setShowCountAll(true)\n    switch (ind) {\n\n      //за сутки\n      case 1:{\n        console.log(\"Фильтр за сутки: \", ind)\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n        setShowWidget6(false)\n\n        //открыть стартовые плашки\n        setShowWidget6(true)\n\n        let i = 0\n        setTimerId(setInterval(() => {\n          if ((i) % 4 === 0) {\n            setShowWidget2(true) //2\n            setShowWidget3(false) \n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+1) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(true) //3\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false) \n          }\n          if ((i+2) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(true) //4\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+3) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true) //5\n            setShowWidget6(false)\n          }  \n          if ((i+4) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(true) //6\n          }\n          i++\n        }, 3000));\n\n        setShowCharts(true)\n        setShowCharts2(false)\n        setShowCharts3(false)\n        setShowCharts4(false)\n        setShowCharts5(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за сутки\n        const carrentDate = Date.now()\n\n        //кол-во часов\n        const currentChas = new Date().getHours()\n        console.log(\"currentChas: \", currentChas)\n        \n        //за несколько часов\n        const needDate = carrentDate - currentChas*3600000\n\n        let arr = workersAll.filter(item => new Date(item.createDate).getTime() > needDate);\n\n        let categories = []\n        let count_cat\n\n        //console.log(\"arr1: \", arr)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.icon)) { //category.name\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        //console.log(\"categories: \", categories)\n        setCatCount(categories)\n\n        //всего пользователей\n        setSortWorkers(arr)\n        setWorkers(arr)\n\n        //массив новых пользователей за сутки\n        const arrNew = workersAll.filter(item => new Date(item.createDate).getTime() > needDate)\n        setNewWorkers2(arrNew)\n\n        //массив активных пользователей\n        // const arrActiv = activWorkers2.filter(item => new Date(item.createDate).getTime() > needDate)\n        // setActivWorkers2(arrActiv)\n\n        //массив удаленных пользователей\n        const arrDel = delWorkers.filter(item => item.deleted === true && new Date(item.createDate).getTime() > needDate)\n        setDelWorkers2(arrDel)\n        \n        let days1 = []\n        let countSpec = 0\n\n        //arr.map(item => console.log(\"arr: \", new Date(item.createDate)));\n\n        for (let i=0; i<=23; i++) {\n\n          const arrSpec = arr.filter(item => i === new Date(item.createDate).getHours() && i <= new Date().getHours());\n          countSpec = arrSpec.length\n          \n          const newObj= {\n            name: i<10 ? '0'+ i + ':00' : ''+ i + ':00', \n            value: countSpec,\n          }\n\n          days1.push(newObj)\n        }       \n\n        setDayWorkers(days1)\n\n        break;\n      }\n\n      //за неделю\n      case 2:{\n        clearTimeout(timerId);\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n        setShowWidget6(false)\n\n         //открыть стартовые плашки\n         setShowWidget6(true)\n\n         let i = 0\n         setTimerId(setInterval(() => {\n            if ((i) % 4 === 0) {\n              setShowWidget2(true) //2\n              setShowWidget3(false) \n              setShowWidget4(false)\n              setShowWidget5(false)\n              setShowWidget6(false)\n            }\n            if ((i+1) % 4 === 0) {\n              setShowWidget2(false)\n              setShowWidget3(true) //3\n              setShowWidget4(false)\n              setShowWidget5(false)\n              setShowWidget6(false) \n            }\n            if ((i+2) % 4 === 0) {\n              setShowWidget2(false)\n              setShowWidget3(false)\n              setShowWidget4(true) //4\n              setShowWidget5(false)\n              setShowWidget6(false)\n            }\n            if ((i+3) % 4 === 0) {\n              setShowWidget2(false)\n              setShowWidget3(false)\n              setShowWidget4(false)\n              setShowWidget5(true) //5\n              setShowWidget6(false)\n            }  \n            if ((i+4) % 4 === 0) {\n              setShowWidget2(false)\n              setShowWidget3(false)\n              setShowWidget4(false)\n              setShowWidget5(false)\n              setShowWidget6(true) //6\n            }\n            i++\n          }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(true)\n        setShowCharts3(false)\n        setShowCharts4(false)\n        setShowCharts5(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за неделю\n        const carrentDate = Date.now()\n        //console.log(\"carrentDate: \", carrentDate)\n\n        const dayNumber = [7, 1, 2, 3, 4, 5, 6][new Date().getDay()] -1\n\n        const needDate = carrentDate - 86400000*dayNumber //604800000\n        setStartWeek(new Date(needDate).toLocaleDateString())\n        //console.log(\"needDate: \", needDate)\n        \n        \n        let arr = workersAll.filter(item => new Date(item.createDate).getTime() > needDate);\n        let categories = []\n        let count_cat\n\n        console.log(\"arr2: \", arr)\n        console.log(\"specData: \", specData)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.icon)) { //category.name\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n\n        setSortWorkers(arr)\n        setWorkers(arr)\n\n        //массив новых пользователей за неделю\n        const arrNew = workersAll.filter(item => new Date(item.createDate).getTime() > needDate)\n        setNewWorkers2(arrNew)\n\n        //массив активных пользователей\n        // const arrActiv = workersAll.filter(item => new Date(item.createDate).getTime() > needDate)\n        // setActivWorkers2(arrActiv)\n\n        //массив удаленных пользователей\n        const arrDel = delWorkers.filter(item => item.deleted === true && new Date(item.createDate).getTime() > needDate)\n        setDelWorkers2(arrDel)\n\n        let week2 = []\n        let nameDay = ''\n        let countSpec = 0\n        for (let i=1; i<=7; i++) {\n          if (i===1) {\n            nameDay = 'Пн'\n            //let date = new Date(item.createDate);\n            //let dayWeek = [7, 1, 2, 3, 4, 5, 6][date.getDay()];\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===2) {\n            nameDay = 'Вт'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===3) {\n            nameDay = 'Ср'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===4) {\n            nameDay = 'Чт'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===5) {\n            nameDay = 'Пт'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===6) {\n            nameDay = 'Сб'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===7) {\n            nameDay = 'Вс'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()] && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n\n          const newObj= {\n                name: nameDay, \n                value: countSpec,\n              }\n          week2.push(newObj)\n        }  \n        console.log(\"week: \", week2)     \n        setWeekWorkers(week2)\n        break;\n      }\n\n      //за месяц\n      case 3:{\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n        setShowWidget6(false)\n\n         //открыть стартовые плашки\n         setShowWidget6(true)\n\n         let i = 0\n         setTimerId(setInterval(() => {\n          if ((i) % 4 === 0) {\n            setShowWidget2(true) //2\n            setShowWidget3(false) \n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+1) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(true) //3\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false) \n          }\n          if ((i+2) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(true) //4\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+3) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true) //5\n            setShowWidget6(false)\n          }  \n          if ((i+4) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(true) //6\n          }\n           i++\n         }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(false)\n        setShowCharts3(true)\n        setShowCharts4(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за месяц\n        const carrentDate = Date.now()\n        //console.log(\"carrentDate: \", carrentDate)\n\n        const dayNumber = new Date().getDate() - 1\n        \n        const needDate = carrentDate - dayNumber*86400000 //2592000000\n        //console.log(\"needDate: \", new Date(needDate))\n        \n        //кол-во специалистов за период на начало месяца по текущее число\n        let arr = workersAll.filter(item => new Date(item.createDate).getTime() > needDate);\n        let categories = []\n        let count_cat\n\n        console.log(\"arr3: \", arr)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.icon)) { //category.name\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n\n        setSortWorkers(arr)\n        //setMonthWorkers(arr)\n        setWorkers(arr)\n\n        //массив новых пользователей за месяц\n        const arrNew = workersAll.filter(item => new Date(item.createDate).getTime() > needDate)\n        setNewWorkers2(arrNew)\n\n        //массив активных пользователей\n        // const arrActiv = activWorkers2.filter(item => new Date(item.createDate).getTime() > needDate)\n        // setActivWorkers2(arrActiv)\n\n        //массив удаленных пользователей\n        const arrDel = delWorkers.filter(item => item.deleted === true && new Date(item.createDate).getTime() > needDate)\n        setDelWorkers2(arrDel)\n\n        let countSpec = 0\n        let month3 = []\n\n        for (let i=1; i<=31; i++) {\n          const arrSpec = arr.filter(item => i === new Date(item.createDate).getDate() && new Date().getMonth() === new Date(item.createDate).getMonth());\n          countSpec = arrSpec.length\n          const newObj= {\n            name: i<10 ? '0'+ i : ''+ i, \n            value: countSpec > 0 ? countSpec : '',\n          }\n          month3.push(newObj)\n        }  \n        console.log(\"month3: \", month3)     \n        setMonthWorkers(month3)\n        break;\n      }\n\n      //за год\n      case 4:{\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n        setShowWidget6(false)\n\n         //открыть стартовые плашки\n         setShowWidget6(true)\n\n         let i = 0\n         setTimerId(setInterval(() => {\n          if ((i) % 4 === 0) {\n            setShowWidget2(true) //2\n            setShowWidget3(false) \n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+1) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(true) //3\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false) \n          }\n          if ((i+2) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(true) //4\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+3) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true) //5\n            setShowWidget6(false)\n          }  \n          if ((i+4) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(true) //6\n          }\n           i++\n         }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(false)\n        setShowCharts3(false)\n        setShowCharts4(true)\n        setShowCharts5(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за год\n        let arr = workersAll.filter(item => item.createDate.split('T')[0].split('-')[0] === '2024');\n        let categories = []\n        let count_cat\n\n        console.log(\"arr year: \", arr)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.icon)) { //category.name\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n\n        setSortWorkers(arr)\n        setWorkers(arr)\n\n        //массив новых пользователей\n\n         //массив новых пользователей за год\n         const arrNew = workersAll.filter(item => item.createDate.split('T')[0].split('-')[0] === '2024')\n         setNewWorkers2(arrNew)\n\n        //массив удаленных пользователей\n        const arrDel = delWorkers.filter(item => item.deleted === true && item.createDate.split('T')[0].split('-')[0] === '2024')\n        setDelWorkers2(arrDel)\n\n        arr.map((item)=>console.log(\"month: \", new Date(item.createDate).getMonth()+1))\n\n        //график\n        let year4 = []\n        let nameMonth = ''\n        let countSpec = 0\n        for (let i=1; i<=12; i++) {\n          if (i===1) {\n            nameMonth = 'Январь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===2) {\n            nameMonth = 'Февраль'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===3) {\n            nameMonth = 'Март'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===4) {\n            nameMonth = 'Апрель'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===5) {\n            nameMonth = 'Май'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===6) {\n            nameMonth = 'Июнь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===7) {\n            nameMonth = 'Июль'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===8) {\n            nameMonth = 'Август'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===9) {\n            nameMonth = 'Сентябрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===10) {\n            nameMonth = 'Октябрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===11) {\n            nameMonth = 'Ноябрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===12) {\n            nameMonth = 'Декабрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          \n          const newObj= {\n                name: nameMonth, \n                value: countSpec > 0 ? countSpec : '',\n              }\n              year4.push(newObj)\n        }  \n        console.log(\"year4: \", year4)     \n        setYearWorkers(year4)\n        break;\n      }\n\n      //за период\n      case 5:{\n        console.log(\"за период\", periodDate1, periodDate2)\n\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n        setShowWidget6(false)\n\n        //открыть стартовые плашки\n        setShowWidget6(true)\n\n         let i = 0\n        setTimerId(setInterval(() => {\n          if ((i) % 4 === 0) {\n            setShowWidget2(true) //2\n            setShowWidget3(false) \n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+1) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(true) //3\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false) \n          }\n          if ((i+2) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(true) //4\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+3) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true) //5\n            setShowWidget6(false)\n          }  \n          if ((i+4) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(true) //6\n          }\n           i++\n        }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(false)\n        setShowCharts3(false)\n        setShowCharts4(false)\n        setShowCharts5(true)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        let nextDay = new Date(periodDate1.split('.')[2], periodDate1.split('.')[1]-1, periodDate1.split('.')[0])\n        let endDay = new Date(periodDate2.split('.')[2], periodDate2.split('.')[1]-1, periodDate2.split('.')[0])\n\n        //фильтрация таблицы за период\n        let arr5 = workersAll.filter(item => new Date(item.createDate) > nextDay && new Date(item.createDate) < endDay);\n        setSortWorkers(arr5)\n\n\n        //массив новых пользователей за период\n        const arrNew = workersAll.filter(item => new Date(item.createDate) > nextDay && new Date(item.createDate) < endDay)\n        setNewWorkers2(arrNew)\n\n        //массив активных пользователей\n\n        //массив удаленных пользователей\n        const arrDel = delWorkers.filter(item => new Date(item.createDate) > nextDay && new Date(item.createDate) < endDay)\n        setDelWorkers2(arrDel)\n\n        let categories = []\n        let count_cat\n\n        console.log(\"arr5 period: \", arr5)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr5.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.icon)) { //category.name\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n        setSortWorkers(arr5)\n        setWorkers(arr5)\n\n        //arr5.map((item)=>console.log(\"period: \", item))\n\n        //график\n        let period5 = []\n        let countSpec = 0\n\n        while (nextDay.getTime() < endDay.getTime()) { // выводит 0, затем 1, затем 2\n          const arrSpec = arr5.filter(item => nextDay.toLocaleDateString() === new Date(item.createDate).toLocaleDateString());\n          countSpec = arrSpec.length\n          const newObj= {\n            name: nextDay.getDate().toString().length < 2 ? '0'+nextDay.getDate() : nextDay.getDate().toString(), \n            value: countSpec > 0 ? countSpec : '',\n          }\n          period5.push(newObj)\n          //nextDay = nextDay + j\n          nextDay.setDate(nextDay.getDate() + 1);\n        }\n        \n        console.log(\"period5: \", period5)     \n        setPeriodWorkers(period5)\n\n        break;\n      }\n    }\n  }\n\n  const changeDate1 = (e) => {\n    setPeriodDate1(e.target.value)\n  }\n\n  const changeDate2 = (e) => {\n    setPeriodDate2(e.target.value)\n  }\n\n\n  const hideCharts = () => {\n    setShowCharts(false)\n    setShowCharts2(false)\n    setShowCharts3(false)\n    setShowCharts4(false)\n    \n    clearTimeout(timerId);\n\n    setShowWidget2(true) //всего\n    setShowWidget3(false) //категория 1\n    setShowWidget4(false) //категория 2\n    setShowWidget5(false) //категория 3\n    setShowWidget6(false) //категория 3\n    \n  }\n\n  const handleClick = (ind) => {\n    console.log(ind, showTable[ind])\n\n    setShowTable(prevShownTable => ({\n        ...prevShownTable,\n        [ind]: !prevShownTable[ind]\n      }));\n  }\n\n  const clickNext = async() => {\n\n    //1 все специалисты\n\t\tlet response = await getWorkersCount(100, workers.length);\n    console.log(\"workers size: \", workers.length)\n\n    const arrayWorker = []\n\t\t\n\t\t\tresponse.reverse().map(async (user) => {\n\t\t\t\tconst newWorker = {\n\t\t\t\t  id: user.id,\n\t\t\t\t  userfamily: user.userfamily,\n\t\t\t\t  username: user.username,\n\t\t\t\t  phone: user.phone,\n\t\t\t\t  dateborn: user.dateborn,\n\t\t\t\t  city: user.city, \n\t\t\t\t  companys: user.companys,\n\t\t\t\t  stag: user.stag,\n\t\t\t\t  worklist:  user.worklist,\n\t\t\t\t  chatId: user.chatId,\n\t\t\t\t  createDate: user.createdAt,\n\t\t\t\t  avatar: user.avatar,\n\t\t\t\t  from: user.from,\n\t\t\t\t  promoId: user.promoId,\n\t\t\t\t  block: user.block,\n\t\t\t\t  deleted: user.deleted,\n\t\t\t\t}\n\t\t\n\t\t\t\tarrayWorker.push(newWorker)\n\t\t\t})    \n\n      console.log(\"Всего сейчас: \", arrayWorker.length)\n\t\t\t\n      setWorkers(arrayWorker)\t\n      console.log(\"Ещё: \", arrayWorker.length)\n  }\n  \n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader tabs={tabhub}/>\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n              <Suspense fallback={<CSpinner color=\"primary\" />}>\n\n                <>\n                {showWidget \n                ?<WidgetsDropdown\n                  users={clients.length-1} \n                  projects={projects.length} \n                  companys={comps.length} \n                />\n                :\"\"}\n\n                {showWidget2 \n                ?<WidgetsDropdown2\n                  users={workersAll}\n                  newUsers={newWorkers} \n                  activeUsers={activWorkers} \n                  delUsers={delWorkers}\n                />\n                :\"\"}\n\n                {showWidget3 \n                ?<WidgetsDropdown3\n                  soundUsers={catCount[0].count}\n                  lightUsers={catCount[1].count}\n                  videoUsers={catCount[2].count}\n                  photoUsers={catCount[3].count}\n                />\n                :\"\"}\n\n                {showWidget4 \n                ?<WidgetsDropdown4                \n                  promoUsers={catCount[4].count}\n                  cateringUsers={catCount[5].count}\n                  stagehandsUsers={catCount[6].count}\n                  riggerUsers={catCount[7].count}\n                />\n                : \"\"}\n\n                {showWidget5 \n                ?<WidgetsDropdown5\n                  trucksUsers={catCount[8].count}\n                  partyUsers={catCount[9].count}\n                  gamesUsers={catCount[10].count}\n                  productionUsers={catCount[11].count}\n                />\n                : \"\"}\n\n                {showWidget6 \n                ?<WidgetsDropdown6\n                  users={workersAll}\n                  newUsers={newWorkers2} \n                  activeUsers={activWorkers} \n                  delUsers={delWorkers2}\n                />\n                :\"\"}\n                \n\n{/* График Сутки */}\n {showCharts ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title={new Date().toLocaleDateString()}\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}} /></>}\n                  chart={            \n                    <ChartBar\n                      range={8}\n                      data={dayWorkers} \n                      data2={[]}\n                      // data2={\n                      //   [\n                      //     { name: '0:00', value: 1 },\n                      //     { name: '01:00', value: 0 },\n                      //     { name: '02:00', value: 0 },\n                      //     { name: '03:00', value: 0 },\n                      //     { name: '04:00', value: 0 },\n                      //     { name: '05:00', value: 0 },\n                      //     { name: '06:00', value: 0 },\n                      //     { name: '07:00', value: 1 },\n                      //     { name: '08:00', value: 0 },\n                      //     { name: '09:00', value: 0 },\n                      //     { name: '10:00', value: 0 },\n                      //     { name: '11:00', value: 0 },\n                      //     { name: '12:00', value: 0 },\n                      //     { name: '13:00', value: 0 },\n                      //     { name: '14:00', value: 0 },\n                      //     { name: '15:00', value: 0 },\n                      //     { name: '16:00', value: 0 },\n                      //     { name: '17:00', value: 2 },\n                      //     { name: '18:00', value: 1 },\n                      //     { name: '19:00', value: 0 },\n                      //     { name: '20:00', value: 0 },\n                      //     { name: '21:00', value: 0 },\n                      //     { name: '22:00', value: 0 },\n                      //     { name: '23:00', value: 0 },\n                      //   ]\n                      // }\n                      width={widthGrafik} height={350} \n                    />\n\n                  }\n                />\n: \"\"\n}\n\n{/* График Неделя */}\n{showCharts2 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title={startWeek + ' - ' + new Date(new Date(startWeek.split('.')[2], startWeek.split('.')[1]-1, startWeek.split('.')[0]).setDate(new Date(startWeek.split('.')[2], startWeek.split('.')[1]-1, startWeek.split('.')[0]).getDate() + 6)).toLocaleDateString()}\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}}/></>}\n                  chart={\n                    <ChartBar \n                      range={40}\n                      data={weekWorkers} \n                      data2={[]} //удаленные пользователи\n                      // data2={\n                      //   [\n                      //     { name: 'Пн', value: 0 },\n                      //     { name: 'Вт', value: 0 },\n                      //     { name: 'Ср', value: 0 },\n                      //     { name: 'Чт', value: 0 },\n                      //     { name: 'Пт', value: 0 },\n                      //     { name: 'Сб', value: 0 },\n                      //     { name: 'Вс', value: 0 },\n                      //   ]\n                      // }\n                      width={widthGrafik} height={350} \n                    />\n                  }\n                />\n: \"\"\n}\n\n{/* График Месяц */}\n{showCharts3 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title={new Date().toLocaleString('default', { month: 'long' })}\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}}/></>}\n                  chart={\n                    <Chart \n                      range={20}\n                      data={monthWorkers} \n                      // data={\n                      //   [\n                      //     { name: '01', value: 1 },\n                      //     { name: '02', value: 0 },\n                      //     { name: '03', value: 0 },\n                      //     { name: '04', value: 0 },\n                      //     { name: '05', value: 0 },\n                      //     { name: '06', value: 0 },\n                      //     { name: '07', value: 0 },\n                      //     { name: '08', value: 0 },\n                      //     { name: '09', value: 0 },\n                      //     { name: '10', value: 0 },\n                      //     { name: '11', value: 0 },\n                      //     { name: '12', value: 1 },\n                      //     { name: '13', value: 1 },\n                      //     { name: '14', value: 0 },\n                      //     { name: '15', value: 0 },\n                      //     { name: '16', value: 0 },\n                      //     { name: '17', value: 0 },\n                      //     { name: '18', value: 0 },\n                      //     { name: '19', value: 0 },\n                      //     { name: '20', value: 0 },\n                      //     { name: '21', value: 0 },\n                      //     { name: '22', value: 0 },\n                      //     { name: '23', value: 0 },\n                      //     { name: '24', value: 1 },\n                      //     { name: '25', value: 1 },\n                      //     { name: '26', value: 0 },\n                      //     { name: '27', value: 0 },\n                      //     { name: '28', value: 0 },\n                      //     { name: '29', value: 0 },\n                      //     { name: '30', value: 0 },\n                      //   ]\n                      // }\n                      data2={[]} //удаленные пользователи\n                      width={widthGrafik} height={350} />\n                  }\n                />\n: \"\"\n}\n\n{/* График Год */}\n{showCharts4 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title={new Date().getFullYear()}\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}} /></>}\n                  chart={\n                    <Chart \n                      range={800}\n                      data={yearWorkers}\n                      data2={[]} \n                      // data2={\n                      //   [\n                      //     { name: 'Январь', value: 0 },\n                      //     { name: 'Февраль', value: 0 },\n                      //     { name: 'Март', value: 0 },\n                      //     { name: 'Апрель', value: 0 },\n                      //     { name: 'Май', value: 1 },\n                      //     { name: 'Июнь', value: 0 },\n                      //     { name: 'Июль', value: 0 },\n                      //     { name: 'Август', value: 2 },\n                      //     { name: 'Сентябрь', value: 2 },\n                      //     { name: 'Октябрь', value: 0 },\n                      //     { name: 'Ноябрь', value: 0 },\n                      //     { name: 'Декабрь', value: 0 },\n                      //   ]\n                      // }\n                      width={widthGrafik} height={350} \n                    />             \n                  }\n                />\n: \"\"\n}\n\n{/* График Период */}\n{showCharts5 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title={periodDate1 + ' - ' + periodDate2}\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}} /></>}\n                  chart={\n                    <Chart \n                      range={800}\n                      data={periodWorkers} \n                      data2={[]}                  \n                      width={widthGrafik} \n                      height={350} \n                    />             \n                  }\n                />\n: \"\"\n}\n\n                <CRow className=\"mb-12\">\n                  {/* Вкладки */}\n                  <CCol sm={6}>\n                    {/* Renthub Workhub */} \n                    <CNav variant=\"tabs\" className='dark-theme'>\n                          <CNavItem>\n                            <CNavLink \n                              style={{background: activeKey !== 2 ? '#08080869' : '', cursor: 'pointer'}} \n                              onClick={() => openHub('Workhub')} \n                              active={activeKey === 2}>\n                                Workhub\n                            </CNavLink>\n                          </CNavItem>\n                          <CNavItem>\n                            <CNavLink \n                              style={{background: activeKey !== 1 ? '#08080869' : '', cursor: 'pointer'}} \n                              onClick={() => openHub('Renthub')} \n                              active={activeKey === 1}>\n                                Renthub\n                            </CNavLink>\n                          </CNavItem>\n                    </CNav>\n                  </CCol>\n\n                  <CCol sm={6}>\n                    {/* Удаленные */} \n                    <CNav variant=\"tabs\" className='dark-theme' style={{justifyContent: 'flex-end'}}>\n                          <CNavItem>\n                            <CNavLink \n                              style={{background: activeKey !== 3 ? '#08080869' : '', cursor: 'pointer'}} \n                              onClick={() => openHub('Удаленные')} \n                              active={activeKey === 3}>\n                                Удаленные\n                            </CNavLink>\n                          </CNavItem>\n                    </CNav>\n                  </CCol> \n                </CRow>\n                \n{/*---------------------------------------- Renthub ------------------------------------  */} \n                <CCard className='rounded-bottom' style={{borderRadius: '0px', borderColor: '#131c21', borderTopRightRadius: '0.375rem'}}>\n                  <CCardBody id=\"Renthub\" style={{display: showRenthub ? 'block' : 'none'}}>\n                    <CRow>\n                      <CCol xs>\n                        <CCard className=\"mb-4\">\n                          <CCardHeader style={{textAlign: 'left'}}>Пользователи бота ({clients.length - 1})</CCardHeader>\n                          <CCardBody>\n                            <CRow>\n                              <CCol xs={12} md={6} xl={6}>\n                                <CRow>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                                      <div className=\"text-medium-emphasis small\">Новые клиенты</div>\n                                      <div className=\"fs-5 fw-semibold\">{newClients.length}</div>\n                                    </div>\n                                  </CCol>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Постоянные клиенты</div>\n                                      <div className=\"fs-5 fw-semibold\">{oldClients.length-1}</div>\n                                    </div>\n                                  </CCol>\n                                </CRow>\n                              </CCol>\n\n                              <CCol xs={12} md={6} xl={6}>\n                                <CRow>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Просмотры</div>\n                                      <div className=\"fs-5 fw-semibold\">-</div>\n                                    </div>\n                                  </CCol>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Другое</div>\n                                      <div className=\"fs-5 fw-semibold\">-</div>\n                                    </div>\n                                  </CCol>\n                                </CRow>\n\n                                <div className=\"mb-5\"></div>\n\n                              </CCol>\n                            </CRow>\n\n                          {loading ? \n                                      \n                            <CSpinner/> :\n\n                            <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                              <CTableHead className='table-dark'>\n                                <CTableRow>\n                                  <CTableHeaderCell style={{width: '30px'}}>№</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>\n                                    <CIcon icon={cilPeople} />\n                                  </CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '160px'}}>Пользователь</CTableHeaderCell>                             \n                                  <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Организация</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Телефон</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '80px'}}>Город</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>TG ID</CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '100px'}}>Использование</CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '100px'}}>Активность</CTableHeaderCell>\n                                </CTableRow>\n                              </CTableHead>\n                              <CTableBody>\n                                {contacts.map((item, index) => (\n                                  <CTableRow v-for=\"item in tableItems\" key={index}>\n                                    <CTableDataCell className=\"text-center\">\n                                      {index+1}\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                        <CAvatar size=\"md\" src={item.avatar ? host + item.avatar : avatar2} alt='' />\n                                    </CTableDataCell>\n                                    <CTableDataCell>\n                                      <div>{item.user.name}</div>\n                                      <div className=\"small text-medium-emphasis\">\n                                      </div>\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      {item.company ? <div>{item.company}</div> : ''}\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      <div>{item.phone}</div>\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      <div>{item.city}</div>\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      <div>{item.TG_ID}</div>\n                                    </CTableDataCell>\n                                    <CTableDataCell>\n                                      <div className=\"clearfix\">\n                                        <div className=\"float-start\">\n                                          <strong>{item.usage.value}%</strong>\n                                        </div>\n                                        <div className=\"float-end\">\n                                          <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                                        </div>\n                                      </div>\n                                      <CProgress thin color={item.usage.color} value={item.usage.value} />\n                                    </CTableDataCell>\n                                    <CTableDataCell>\n                                      <div className=\"small text-medium-emphasis\">Последний вход</div>\n                                      <strong>{item.activity}</strong>\n                                    </CTableDataCell>\n                                  </CTableRow>\n                                ))}\n                              </CTableBody>\n                            </CTable>\n                          }\n                          </CCardBody>\n                        </CCard>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n\n{/*----------------------------------------- Workhub ----------------------------------------  */}\n     \n                  <CCardBody id=\"Workhub\" style={{display: showWorkhub ? 'block' : 'none'}}>\n                    <CRow>\n                      <CCol xs>\n                            <CRow>\n                              <CCol md={6} style={{textAlign: 'left'}}>\n                                <CButton color=\"dark\" onClick={()=>showBlock(1)} style={{marginRight: '20px', width: '100px'}}>Сутки</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(2)} style={{marginRight: '20px', width: '100px'}}>Неделя</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(3)} style={{marginRight: '20px', width: '100px'}}>Месяц</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(4)} style={{marginRight: '20px', width: '100px'}}>Год</CButton>\n                              </CCol>\n                              <CCol md={6} style={{textAlign: 'center', display: 'flex'}}>\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate1}\n                                  onChange={changeDate1}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"01.01.2024\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}}    \n                                                  />}\n                                </InputMask>\n\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate2}\n                                  onChange={changeDate2}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"31.12.2024\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}} \n                                                  />}\n                                </InputMask>                             \n                                            \n                                <CButton color=\"dark\" onClick={()=>showBlock(5)} style={{marginLeft: '10px'}}>Применить</CButton>\n                              </CCol>      \n                            </CRow>\n                            \n                            <br/>\n                            <CRow className=\"mb-3\">\n                              <CCol sm={3} >\n                                <CFormInput placeholder=\"Поиск специалиста...\" onChange={(e)=>setText(e.target.value)} aria-label=\"workers\"/>\n                              </CCol>\n                              <CCol sm={6}></CCol>\n\n                              <CCol sm={3} style={{textAlign: 'right', position: 'absolute', top: '-538px', right: '0', marginRight: '35px'}}>\n                                {/* {showCountAll ? sortWorkers.length : ''} */}\n                              </CCol>\n                            </CRow>\n                            \n                            <CRow>\n                              <CCol style={{textAlign: 'center'}}>\n                              {loading2 ? \n                                      \n                                <CSpinner/> :\n\n                                <CTable align=\"middle\" className=\"mb-0 border\" hover responsive style={{fontSize: '14px'}}>\n                                  <CTableHead className='table-light'>\n                                    <CTableRow>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '90px'}}>Дата</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '70px'}}>Время</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '240px'}}>ФИО</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '130px'}}>Город</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" >Специальность</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '90px'}}>Дата</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '160px'}}>Телефон</CTableHeaderCell>                         \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '200px'}}>{ showNick ? 'Ник' : 'Телеграм ID' }</CTableHeaderCell>\n                                    </CTableRow>\n                                  </CTableHead>\n                                  <CTableBody>                                  \n                                    {workers.map((item, index) => (\n                                      <CTableRow v-for=\"item in tableItems\" key={index}>\n                                        <CTableDataCell className=\"text-center\">\n                                          {String(new Date(item.createDate).getDate()).padStart(2, \"0\")+ \".\"+ String(new Date(item.createDate).getMonth()+1).padStart(2, \"0\") + \".\" +new Date(item.createDate).getFullYear()}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {new Date(item.createDate).getHours() + ' : '+ String(new Date(item.createDate).getMinutes()).padStart(2, \"0\")}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 || item.userfamily === 'Неизвестный' ? 'red' : ''}}>\n                                            {item.userfamily ? item.userfamily : ''} {item.username ? item.username : ''} {specusers.find((user) => user.chatId === item.chatId)?.block ? \"[U]\" : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {item.city ? item.city : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{textAlign: 'left'}}>\n                                          <div onClick={()=>handleClick(index)} style={{cursor: 'pointer', textAlign: 'center'}}>{!showTable[index] ? 'Посмотреть' : <br/>}</div>\n                                          <CCollapse visible={showTable[index]}>\n                                            <table>\n                                              <tbody>\n                                                {item.worklist !== '' ? (JSON.parse(item.worklist)).map((spec, index)=>( \n                                                    <tr key={index}>\n                                                      <td>{spec.spec !== '' ? \"- \" + spec.spec : ''}</td>\n                                                    </tr>          \n                                                )) : \"\"}\n                                              </tbody> \n                                            </table>\n                                          </CCollapse>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 ? 'red' : ''}}>\n                                          {item.dateborn ? item.dateborn : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div>{item.phone ? item.phone : ''}</div>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div style={{fontSize: showNick ? '12px' : '14px'}}>{showNick ? specusers.find((user) => user.chatId === item.chatId)?.username : item.chatId}</div>\n                                        </CTableDataCell> \n                                      </CTableRow>\n                                      ))\n                                    }\n                                    {/* <CTableRow>\n                                      <CTableDataCell className=\"text-center\">\n                                        <CButton color=\"dark\" onClick={()=>clickNext()} style={{width: '100px'}}>Ещё</CButton>\n                                      </CTableDataCell>\n                                    </CTableRow> */}\n                                </CTableBody>                   \n                              </CTable>\n                              \n                            }\n                            \n                              </CCol>\n                            </CRow>\n                            <div style={{display: 'flex', justifyContent: 'center' }}>\n                              <img src={arrowDown} alt='' onClick={()=>clickNext()} style={{width: '50px', marginTop: '15px', cursor: 'pointer'}}></img>\n                            </div>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n\n{/*----------------------------------------- Удаленные -----------------------------------------  */}\n     \n                  <CCardBody id=\"Deleted\" style={{display: showDeleted ? 'block' : 'none'}}>\n                    <CRow>\n                      <CCol xs>\n                            <CRow>\n                              <CCol md={6} style={{textAlign: 'left'}}>\n                                <CButton color=\"dark\" onClick={()=>showBlock(1)} style={{marginRight: '20px', width: '100px'}}>Сутки</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(2)} style={{marginRight: '20px', width: '100px'}}>Неделя</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(3)} style={{marginRight: '20px', width: '100px'}}>Месяц</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(4)} style={{marginRight: '20px', width: '100px'}}>Год</CButton>\n                              </CCol>\n                              <CCol md={6} style={{textAlign: 'center', display: 'flex'}}>\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate1}\n                                  onChange={changeDate1}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"01.01.2024\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}}    \n                                                  />}\n                                </InputMask>\n\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate2}\n                                  onChange={changeDate2}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"31.12.2024\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}} \n                                                  />}\n                                </InputMask>                             \n                                            \n                                <CButton color=\"dark\" onClick={()=>showBlock(5)} style={{marginLeft: '10px'}}>Применить</CButton>\n                              </CCol>      \n                            </CRow>\n                            \n                            <br/>\n                            <CRow className=\"mb-3\">\n                              <CCol sm={3} >\n                                <CFormInput placeholder=\"Поиск специалиста...\" onChange={(e)=>setTextDelete(e.target.value)} aria-label=\"workers\"/>\n                              </CCol>\n                              <CCol sm={6}></CCol>\n\n                              <CCol sm={3} style={{textAlign: 'right', position: 'absolute', top: '-538px', right: '0', marginRight: '35px'}}>\n                                {showCountAll ? sortWorkers.length : ''}\n                              </CCol>\n                            </CRow>\n                            \n                            <CRow>\n                              <CCol style={{textAlign: 'center'}}>\n                              {loading2 ? \n                                      \n                                <CSpinner/> :\n\n                                <CTable align=\"middle\" className=\"mb-0 border\" hover responsive style={{fontSize: '14px'}}>\n                                  <CTableHead className='table-light'>\n                                    <CTableRow>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '90px'}}>Дата</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '70px'}}>Время</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '240px'}}>ФИО</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '130px'}}>Город</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" >Специальность</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '90px'}}>Дата</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '160px'}}>Телефон</CTableHeaderCell>                         \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '200px'}}>{ showNick ? 'Ник' : 'Телеграм ID' }</CTableHeaderCell>\n                                    </CTableRow>\n                                  </CTableHead>\n                                  <CTableBody>                                  \n                                    {sortDelWorkers.map((item, index) => (\n                                      <CTableRow v-for=\"item in tableItems\" key={index}>\n                                        <CTableDataCell className=\"text-center\">\n                                          {String(new Date(item.createDate).getDate()).padStart(2, \"0\")+ \".\"+ String(new Date(item.createDate).getMonth()+1).padStart(2, \"0\") + \".\" +new Date(item.createDate).getFullYear()}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {new Date(item.createDate).getHours() + ' : '+ String(new Date(item.createDate).getMinutes()).padStart(2, \"0\")}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 || item.userfamily === 'Неизвестный' ? 'red' : ''}}>\n                                            {item.userfamily ? item.userfamily : ''} {item.username ? item.username : ''} {specusers.find((user) => user.chatId === item.chatId)?.block ? \"[U]\" : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {item.city ? item.city : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{textAlign: 'left'}}>\n                                          <div onClick={()=>handleClick(index)} style={{cursor: 'pointer', textAlign: 'center'}}>{!showTable[index] ? 'Посмотреть' : <br/>}</div>\n                                          <CCollapse visible={showTable[index]}>\n                                            <table>\n                                              <tbody>\n                                                {item.worklist !== '' ? (JSON.parse(item.worklist)).map((spec, index)=>( \n                                                    <tr key={index}>\n                                                      <td>{spec.spec !== '' ? \"- \" + spec.spec : ''}</td>\n                                                    </tr>          \n                                                )) : \"\"}\n                                              </tbody> \n                                            </table>\n                                          </CCollapse>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 ? 'red' : ''}}>\n                                          {item.dateborn ? item.dateborn : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div>{item.phone ? item.phone : ''}</div>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div style={{fontSize: showNick ? '12px' : '14px'}}>{showNick ? specusers.find((user) => user.chatId === item.chatId)?.username : item.chatId}</div>\n                                        </CTableDataCell> \n                                      </CTableRow>\n                                      ))\n                                    }\n                                </CTableBody>                   \n                              </CTable>\n                              \n                            }\n                            \n                              </CCol>\n                            </CRow>\n                            <CRow>\n                              {/* <CCol>\n                                Всего: {sortWorkers.length}\n                              </CCol> */}\n                            </CRow>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n\n                </CCard>\n\n                </>\n\n                </Suspense>\n            </CContainer>\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Admin\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = ({users, projects, companys}) => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              {users} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title=\"Заказчики\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {projects} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title=\"Проекты\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {companys}{' '}\n              {/* <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title=\"Компании\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              44{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Часы [за год]\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nconst WidgetsDropdown2 = ({\n  users, \n  newUsers, \n  activeUsers, \n  delUsers, \n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              {users.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Всего\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      (users.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/users.length-5, \n                     0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {newUsers.length} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Новые\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/newUsers.length-5, \n                      0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {activeUsers.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Активные\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [activeUsers, 0, 0, 0, 0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              {delUsers.length}\n            </>\n          }\n          title={\"Удаленные\"}\n          action={\"\"}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', \n                  'Февраль', \n                  'Март', \n                  'Апрель', \n                  'Май', \n                  'Июнь', \n                  'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [delUsers, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown2\n"],"names":["id","name","icon","models","_ref","soundUsers","lightUsers","videoUsers","photoUsers","_jsxs","CRow","children","_jsx","CCol","sm","lg","CWidgetStatsA","className","color","value","_Fragment","title","action","src","alt","width","chart","CChartLine","style","height","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","Math","floor","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","fill","Photo","promoUsers","cateringUsers","stagehandsUsers","riggerUsers","Promo","Catering","CChartBar","barPercentage","drawTicks","trucksUsers","partyUsers","gamesUsers","productionUsers","Party","users","newUsers","activeUsers","delUsers","length","filter","item","Date","createDate","getMonth","data2","range","_React$useState","React","_React$useState2","_slicedToArray","setActiveIndex","getX","d3","padding","domain","map","getY","areaPath","d","bandwidth","y0","y1","curve","onMouseMove","e","nativeEvent","offsetX","index","step","onMouseLeave","ref","xAxis","call","transform","concat","opacity","rx","ry","textAnchor","grafik","useRef","_useUsersContext","useUsersContext","clients","_useUsersContext2","zakazchiki","managers","projs","projects","comps","companys","specusers","userWorkers","_useUsersContext6","workersAll","workers","setWorkers","_useState","useState","_useState2","contacts","setContacts","_useState3","_useState4","setProjects","_useState5","_useState6","newClients","setNewClients","_useState7","_useState8","oldClients","setOldClients","_useState9","_useState10","loading","setLoading","_useState11","_useState12","loading2","setLoading2","_useState13","_useState14","sortWorkers","setSortWorkers","_useState15","_useState16","newWorkers","setNewWorkers","_useState17","_useState18","activWorkers","setActivWorkers","_useState19","_useState20","delWorkers","setDelWorkers","_useState21","_useState22","sortDelWorkers","setSortDelWorkers","_useState23","_useState24","_useState25","_useState26","newWorkers2","setNewWorkers2","_useState27","_useState28","_useState29","_useState30","delWorkers2","setDelWorkers2","_useState31","_useState32","catCount","setCatCount","_useState33","_useState34","dayWorkers","setDayWorkers","_useState35","_useState36","weekWorkers","setWeekWorkers","_useState37","_useState38","monthWorkers","setMonthWorkers","_useState39","_useState40","yearWorkers","setYearWorkers","_useState41","_useState42","periodWorkers","setPeriodWorkers","_useState43","_useState44","showRenthub","setShowRenthub","_useState45","_useState46","showWorkhub","setShowWorkhub","_useState47","_useState48","showDeleted","setShowDeleted","_useState49","_useState50","activeKey","setActiveKey","_useState51","_useState52","showWidget","setShowWidget","_useState53","_useState54","showWidget2","setShowWidget2","_useState55","_useState56","showWidget3","setShowWidget3","_useState57","_useState58","showWidget4","setShowWidget4","_useState59","_useState60","showWidget5","setShowWidget5","_useState61","_useState62","showWidget6","setShowWidget6","_useState63","_useState64","showCharts","setShowCharts","_useState65","_useState66","showCharts2","setShowCharts2","_useState67","_useState68","showCharts3","setShowCharts3","_useState69","_useState70","showCharts4","setShowCharts4","_useState71","_useState72","showCharts5","setShowCharts5","_useState73","_useState74","showCountAll","setShowCountAll","_useState75","_useState76","showNick","setShowNick","_useState77","_useState78","tabhub","setTabhub","_useState79","_useState80","periodDate1","setPeriodDate1","_useState81","_useState82","periodDate2","setPeriodDate2","_useState83","_useState84","startWeek","setStartWeek","_useState85","_useState86","timerId","setTimerId","_useState87","_useState88","widthGrafik","setWdthGrafik","_useState89","_useState90","text","setText","_useState91","_useState92","textDelete","setTextDelete","_useState93","_useState94","showTable","setShowTable","chatAdminId","process","useEffect","setTimeout","current","offsetWidth","filteredData","user","userfamily","username","chatId","replace","toLowerCase","includes","_ref2","currentMonth","arr1","arrDel","deleted","arrClients","fetchData","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","messages","wrap","_context","prev","next","getAllWMessages","sent","client","messagesUser","find","el","senderId","createdAt","undefined","push","stop","apply","arguments","_ref4","_callee2","filteredClients","clientSort","_context2","getAllMessages","_toConsumableArray","userIndex","findIndex","manager","tgID","userObject","userObject2","company","man","companyName","companyCity","city","lastDate","date","split","year","getFullYear","month","String","padStart","day","getDate","newDateActivity","newClientName","allMessages","fromAdmin","messagesUsers","arr","message","arr2","newObj","avatar","new","registered","TG_ID","phone","usage","round","period","activity","sort","a","b","arrProjects","_ref5","_callee4","_context4","_ref6","_callee3","project","newProject","_context3","start","time_start","created","time_created","teh","_x","openHub","hub","showBlock","ind","console","log","clearTimeout","i","setInterval","clientWidth","carrentDate","now","currentChas","getHours","count_cat","needDate","getTime","categories","specData","category","JSON","parse","worklist","work","cat","obj","count","arrNew","days1","countSpec","_loop","_i","arrSpec","getDay","toLocaleDateString","week2","nameDay","_loop2","_i3","month3","_loop3","_i5","year4","nameMonth","_loop4","_i7","nextDay","endDay","arr5","period5","toString","setDate","changeDate1","target","changeDate2","hideCharts","handleClick","prevShownTable","_objectSpread","_defineProperty","clickNext","_ref7","_callee6","response","arrayWorker","_context6","getWorkersCount","reverse","_ref8","_callee5","newWorker","_context5","dateborn","stag","from","promoId","block","_x2","AppSidebar","AppHeader","tabs","CContainer","Suspense","fallback","CSpinner","WidgetsDropdown","WidgetsDropdown2","WidgetsDropdown3","WidgetsDropdown4","WidgetsDropdown5","WidgetsDropdown6","CIcon","cilX","onClick","cursor","ChartBar","toLocaleString","Chart","CNav","variant","CNavItem","CNavLink","background","active","justifyContent","CCard","borderRadius","borderTopRightRadius","CCardBody","xs","CCardHeader","textAlign","md","xl","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","cilPeople","CTableBody","CTableDataCell","CAvatar","size","avatar2","CProgress","thin","CButton","marginRight","InputMask","mask","onChange","inputProps","CFormInput","placeholder","disableUnderline","marginLeft","position","top","right","fontSize","minWidth","_specusers$find","_specusers$find2","getMinutes","CCollapse","visible","spec","arrowDown","marginTop","_specusers$find3","_specusers$find4","AppFooter","CDropdown","alignment","CDropdownToggle","caret","cilOptions","CDropdownMenu","CDropdownItem","disabled","cilArrowBottom"],"sourceRoot":""}