{"version":3,"file":"static/js/604.9f38c862.chunk.js","mappings":"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","sources":["chat-app-worker/components/Sidebar/Contact.jsx","chat-app-worker/components/Sidebar/index.jsx","chat-app-worker/components/Icon/index.jsx","chat-app-worker/pages/Chat/components/EmojiTray.jsx","chat-app-worker/pages/Chat/components/useAutosizeTextArea.ts","chat-app-worker/pages/Chat/components/ChatInput.jsx","chat-app-worker/components/OptionsButton/index.jsx","chat-app-worker/pages/Chat/components/Header.jsx","chat-app-worker/pages/Chat/components/ChatSidebar.jsx","chat-app-worker/pages/Chat/components/Search.jsx","chat-app-worker/components/Checkbox/index.jsx","chat-app-worker/pages/Chat/components/Profile.jsx","chat-app-worker/pages/Chat/components/Convo.jsx","chat-app-worker/pages/Chat/index.jsx","pages/ChatWorker.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport Icon from \"src/chat-app-new/components/Icon\";\nimport { Link } from \"react-router-dom\";\nimport formatTime from \"./../../../chat-app-new/utils/formatTime\";\nimport { AccountContext } from './../../../chat-app-new/context/AccountProvider'\nimport avatarDefault from \"./../../../chat-app-new/assets/images/no-avatar.png\";\n\nimport { useUsersContext } from \"./../../../chat-app-new/context/usersContext\";\n\nconst Contact = ({ contact }) => {\n\t\n\tconst { setPerson } = useContext(AccountContext);\n\tconst host = process.env.REACT_APP_API_URL\n\t\n\t//сделать пользователя непрочитанным\n\tconst { setUserWorkerAsUnread, setCountMessageWork } = useUsersContext();\n\n\t//const status = usersOnline.find(item => item.userId == contact.chatId)\n\n\t//обработка нажатия на пользователя из списка\n    const getUser = async () => {\n        setPerson({\n            name: contact.name, \n            id: contact.chatId, \n\t\t\tavatar: contact.avatar\n        });\n\t\tsetUserWorkerAsUnread(contact.chatId)\n\t\tsetCountMessageWork(0)\n\n\t\t//console.log(\"click\")\n    }\n\t\n\tconst getLastMessage = () => {\n\t\t\tconst messageDates = Object.keys(contact.messages);\t\n\t\t\tlet recentMessageDate\n\t\t\t\n\t\t\tmessageDates.length !== 0 \t\n\t\t\t? recentMessageDate = messageDates[messageDates.length - 1]\n\t\t\t: recentMessageDate = '2000-01-01'\n\n\t\t\tlet messages = [];\n\t\t\tif (JSON.stringify(contact.messages) !== '{}') {\n\t\t\t\tmessages = [...contact.messages[recentMessageDate]];\n\t\t\t}\t\n\n\t\t\tif (messages.length) {\n\t\t\t\tconst lastMessage = messages.pop();\n\t\t\t\treturn lastMessage;\n\t\t\t} \n\t\t\tconst lastMessage = '';\n\t\t\treturn lastMessage;\n\t};\n\n\tconst lastMessage = getLastMessage(contact);\n\n\treturn (\n\t\t<Link\n\t\t\tclassName=\"sidebar-contact\"\n\t\t\tonClick={() => getUser()}\n\t\t>\n\t\t\t{/* <div className=\"sidebar-contact__status-wrapper\">\n\t\t\t\t{status \n\t\t\t\t? <img\n\t\t\t\t\tsrc={Status}\n\t\t\t\t\talt=\"status\" \n\t\t\t\t\tclassName=\"status-adm\"\n\t\t\t\t/> \n\t\t\t\t: ''}\n\t\t\t</div> */}\n\t\t\t<div className=\"sidebar-contact__avatar-wrapper\">\n\t\t\t\t{\n\t\t\t\t\tcontact.avatar\n\t\t\t\t\t? <img src={`${host}${contact.avatar}`} alt='' className=\"avatar-adm\" />\n\t\t\t\t\t: <img src={avatarDefault} alt='' className=\"avatar-adm\" />\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div className=\"sidebar-contact__content\">\n\t\t\t\t<div className=\"sidebar-contact__top-content\">\n\t\t\t\t\t<h2 className=\"sidebar-contact__name\"> {contact.name}</h2>\n\t\t\t\t\t<span className=\"sidebar-contact__time\">\n\t\t\t\t\t\t{lastMessage === ''  ? '' : formatTime(lastMessage.time)}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"sidebar-contact__bottom-content\">\n\t\t\t\t\t<p className=\"sidebar-contact__message-wrapper\">\n\t\t\t\t\t\t{lastMessage.status && (\n\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\tid={\n\t\t\t\t\t\t\t\t\tlastMessage?.status === \"sent\" ? \"singleTick\" : \"doubleTick\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taria-label={lastMessage?.status}\n\t\t\t\t\t\t\t\tclassName={`sidebar-contact__message-icon ${\n\t\t\t\t\t\t\t\t\tlastMessage?.status === \"read\"\n\t\t\t\t\t\t\t\t\t\t? \"sidebar-contact__message-icon--blue\"\n\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName={`sidebar-contact__message ${\n\t\t\t\t\t\t\t\t!!contact.unread ? \"sidebar-contact__message--unread\" : \"\"\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{contact.typing ? <i> печатает...</i> : lastMessage?.content}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"sidebar-contact__icons\">\n\t\t\t\t\t\t{contact.pinned && (\n\t\t\t\t\t\t\t<Icon id=\"pinned\" className=\"sidebar-contact__icon\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!!contact.unread && (\n\t\t\t\t\t\t\t<span className=\"sidebar-contact__unread\">{contact.unread}</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<button aria-label=\"sidebar-contact__btn\">\n\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\tid=\"downArrow\"\n\t\t\t\t\t\t\t\tclassName=\"sidebar-contact__icon sidebar-contact__icon--dropdown\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Link>\n\t);\n};\n\nexport default Contact;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles/main.css\";\nimport avatar from \"./../../../chat-app-new/assets/images/logo_chat_admin.png\";\nimport Icon from \"./../../../chat-app-new/components/Icon\";\nimport Contact from \"./Contact\";\nimport OptionsBtn from \"./../../../chat-app-new/components/OptionsButton\";\nimport { useUsersContext } from \"./../../../chat-app-new/context/usersContext\";\nimport { Link } from \"react-router-dom\";\n\nconst Sidebar = () => {\n\tconst { userWorkers } = useUsersContext();\n    const chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID \n\tconst [contacts, setContacts]= useState([]);\n\tconst [text, setText]= useState(\"\");\n\n\tconst navigate = useNavigate()\n\n\tuseEffect(() => {\n\t\tconsole.log(\"sidebar contacts: \", userWorkers)\n\t\t//сортировка\n\t\tconst userSort = [...userWorkers].sort((a, b) => {       \n\t\t\tvar dateA = new Date(a.date), dateB = new Date(b.date) \n\t\t\treturn dateB-dateA  //сортировка по убывающей дате  \n\t\t})\n\t\tsetContacts(userSort)\n\t},[userWorkers])\n\t\n\tuseEffect(() => {\n\t\tconst filteredData = userWorkers.filter(user=> (user.name).toLowerCase().includes(text.toLowerCase()));\n        setContacts(filteredData);      \n    }, [text]);\n\n\n\tconst onSelected = (index) => {\n\t\tswitch(index) {\n\t\t\tcase 0: //данные о контакте\n\t\t\t\tconsole.log('Профиль')\n\t\t\t\tbreak\n\t\t  \n\t\t\tcase 1: \n\t\t\t\tconsole.log('1')\n\t\t\t\tbreak\n\t\t\t\n\t\t\tcase 4: \n\t\t\t\tnavigate(\"/dashboard\");\n\t\t\t\tbreak\n\t\t  \n\t\t\tdefault:\n\t\t\t\tconsole.log(\"В разработке\")\n\t\t\t\tbreak\n\t\t  }\n\t};\n\n\treturn (\n\t\t<aside className=\"sidebarB\">\n\t\t\t{/* Header */}\n\t\t\t<header className=\"headerB\">\n\t\t\t\t<div className=\"sidebar__avatar-wrapper\">\n\t\t\t\t\t<img src={avatar} alt='U.L.E.Y' className=\"avatar-adm\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"sidebar__actions\">\n\t\t\t\t\t<OptionsBtn\n\t\t\t\t\t\tclassName=\"sidebar__action\"\n\t\t\t\t\t\tariaLabel=\"Menu\"\n\t\t\t\t\t\ticonId=\"menu\"\n\t\t\t\t\t\ticonClassName=\"sidebar__action-icon\"\n\t\t\t\t\t\tonSelected={onSelected}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\"Профиль\",\n\t\t\t\t\t\t\t// \"Архив\",\n\t\t\t\t\t\t\t// \"Избранные сообщения\",\n\t\t\t\t\t\t\t// \"Настройки\",\n\t\t\t\t\t\t\t// \"Вернуться в панель управления\",\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t\n\t\t\t{/* Search */}\n\t\t\t<div className=\"search-wrapper\">\n\t\t\t\t<div className=\"search-icons\">\n\t\t\t\t\t<Icon id=\"search\" className=\"search-icon\" />\n\t\t\t\t\t<button className=\"search__back-btn\">\n\t\t\t\t\t\t<Icon id=\"back\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<input \n\t\t\t\t\tclassName=\"search\" \n\t\t\t\t\tplaceholder=\"Поиск заказчика\" \n\t\t\t\t\tonChange={(e)=>setText(e.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t\n\t\t\t{/* Conversations */}\n\t\t\t<div className=\"sidebar__contacts\">\n\t\t\t\t{contacts.map((contact) => (\n\t\t\t\t\tcontact.chatId !== chatAdminId &&\n                    <>   \n\t\t\t\t\t\t<Contact contact={contact} />\n\t\t\t\t\t</>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</aside>\n\t);\n};\n\nexport default Sidebar;\n","import Icons from \"../../../chat-app-new/assets/icons\";\nimport React from \"react\";\n\nconst allIcons = Icons;\n\nconst Icon = ({ id, ...props }) => {\n\tconst selectedIcon = allIcons[id];\n\treturn selectedIcon ? selectedIcon(props) : null;\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Icon from \"./../../../components/Icon\";\n\nconst emojiTabs = [\n\t{ icon: \"recent\", label: \"Recent emojis\", active: true },\n\t{ icon: \"emojiPeople\", label: \"People emojis\", active: false },\n\t{ icon: \"emojiNature\", label: \"Nature emojis\", active: false },\n\t{ icon: \"emojiFood\", label: \"Food emojis\", active: false },\n\t{ icon: \"emojiActivity\", label: \"Activity emojis\", active: false },\n\t{ icon: \"emojiTravel\", label: \"Travel emojis\", active: false },\n\t{ icon: \"emojiObjects\", label: \"Object emojis\", active: false },\n\t{ icon: \"emojiSymbols\", label: \"Symbol emojis\", active: false },\n\t{ icon: \"emojiFlags\", label: \"Flag emojis\", active: false },\n];\n\nconst EmojiTray = ({ showEmojis, newMessage, setNewMessage }) => {\n\tconst addEmoji = (emoji) => {\n\t\tsetNewMessage(newMessage + emoji);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`emojis__wrapper ${\n\t\t\t\tshowEmojis ? \"emojis__wrapper--active\" : \"\"\n\t\t\t}`}\n\t\t>\n\t\t\t<div className=\"emojis__tabs\">\n\t\t\t\t{emojiTabs.map((tab) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`emojis__tab ${tab.active ? \"emojis__tab--active\" : \"\"}`}\n\t\t\t\t\t\tkey={tab.label}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button aria-label={tab.label} key={tab.icon}>\n\t\t\t\t\t\t\t<Icon id={tab.icon} className=\"emojis__tab-icon\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"emojis__content\">\n\t\t\t\t<input className=\"emojis__search\" placeholder=\"Search Emoji\" />\n\t\t\t\t<h4 className=\"emojis__label\"> Smileys {\"&\"} People </h4>\n\t\t\t\t<div className=\"emojis__grid\">\n\t\t\t\t\t{new Array(6).fill(null).map((_, rowIndex) =>\n\t\t\t\t\t\tnew Array(11).fill(null).map((_, colIndex) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\trole=\"img\"\n\t\t\t\t\t\t\t\taria-label=\"emoji\"\n\t\t\t\t\t\t\t\t// onClick={() => addEmoji(\"emoji\")}\n\t\t\t\t\t\t\t\tkey={`${rowIndex}-${colIndex}`}\n\t\t\t\t\t\t\t\tclassName=\"emoji emojis__emoji\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundPositionX: -3 - 44.2 * colIndex,\n\t\t\t\t\t\t\t\t\tbackgroundPositionY: -6 - 52 * rowIndex,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t))\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<h4 className=\"emojis__label\"> Animals {\"&\"} Nature </h4>\n\t\t\t\t<div className=\"emojis__grid\">\n\t\t\t\t\t{new Array(6).fill(null).map((_, rowIndex) =>\n\t\t\t\t\t\tnew Array(11).fill(null).map((_, colIndex) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\trole=\"img\"\n\t\t\t\t\t\t\t\taria-label=\"emoji\"\n\t\t\t\t\t\t\t\t// onClick={() => addEmoji(\"emoji\")}\n\t\t\t\t\t\t\t\tkey={`${rowIndex}-${colIndex}`}\n\t\t\t\t\t\t\t\tclassName=\"emoji emojis__emoji\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundPositionX: -3 - 44.2 * colIndex,\n\t\t\t\t\t\t\t\t\tbackgroundPositionY: -6 - 52 * rowIndex,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t))\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default EmojiTray;\n","import { useEffect } from \"react\";\n\n// Updates the height of a <textarea> when the value changes.\nconst useAutosizeTextArea = (\n  textAreaRef: HTMLTextAreaElement | null,\n  value: string\n) => {\n  useEffect(() => {\n    if (textAreaRef) {\n      \n        // Нам нужно на мгновение сбросить высоту, чтобы получить правильное значение scrollHeight для текстовой области.\n      textAreaRef.style.height = \"0px\";\n      const scrollHeight = textAreaRef.scrollHeight - 40;\n\n      // Затем мы устанавливаем высоту напрямую, вне цикла рендеринга.\n      // Попытка установить это с помощью состояния или ссылки приведет к неправильному значению.\n      textAreaRef.style.height = scrollHeight + \"px\";\n    }\n  }, [textAreaRef, value]);\n};\n\nexport default useAutosizeTextArea;","import React, {useRef} from \"react\";\nimport Icon from \"./../../../components/Icon\";\n\nimport useAutosizeTextArea from \"./useAutosizeTextArea.ts\";\n\nconst attachButtons = [\n\t// { icon: \"attachContacts\", label: \"Choose contact\", click: \"contact\" },\n\t{ icon: \"attachDocument\", label: \"Choose document\", click: \"doc\" },\n\t{ icon: \"attachImage\", label: \"Choose image\", click: \"image\" },\n];\n\nconst ChatInput = ({\n\tshowAttach,\n\tsetShowAttach,\n\tshowEmojis,\n\tsetShowEmojis,\n\tmess,\n\tsetMess,\n\tsubmitNewMessage,\n\tonFileChange,\n}) => {\n\n\tconst textAreaRef = useRef(null);\n\tuseAutosizeTextArea(textAreaRef.current, mess);\n\n\tconst handleChange = (e) => {\n\t\tconsole.log(e.target.value)\n\t\tsetMess(e.target.value)\n\t};\n\n\tconst detectEnterPress = (e) => {\n\t\tif ((e.key === \"Enter\" && !e.shiftKey) || (e.keyCode === 13 && !e.shiftKey) ) {\n\t\t\tsubmitNewMessage();\n\t\t} \n\t};\n\n\treturn (\n\t\t<div className=\"chat__input-wrapper\">\n\t\t\t{showEmojis && (\n\t\t\t\t<button aria-label=\"Close emojis\" onClick={() => setShowEmojis(false)}>\n\t\t\t\t\t<Icon id=\"cancel\" className=\"chat__input-icon\" />\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<button aria-label=\"Emojis\" onClick={() => setShowEmojis(true)}>\n\t\t\t\t<Icon\n\t\t\t\t\tid=\"smiley\"\n\t\t\t\t\tclassName={`chat__input-icon ${\n\t\t\t\t\t\tshowEmojis ? \"chat__input-icon--highlight\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t/>\n\t\t\t</button>\n\t\t\t{showEmojis && (\n\t\t\t\t<>\n\t\t\t\t\t<button aria-label=\"Choose GIF\">\n\t\t\t\t\t\t<Icon id=\"gif\" className=\"chat__input-icon\" />\n\t\t\t\t\t</button>\n\t\t\t\t\t<button aria-label=\"Choose sticker\">\n\t\t\t\t\t\t<Icon id=\"sticker\" className=\"chat__input-icon\" />\n\t\t\t\t\t</button>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t<div className=\"pos-rel\">\n\t\t\t\t<button aria-label=\"Attach\" onClick={() => setShowAttach(!showAttach)}>\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tid=\"attach\"\n\t\t\t\t\t\tclassName={`chat__input-icon ${\n\t\t\t\t\t\t\tshowAttach ? \"chat__input-icon--pressed\" : \"\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t/>\n\t\t\t\t</button>\n\n\t\t\t\t<div\n\t\t\t\t\tclassName={`chat__attach ${showAttach ? \"chat__attach--active\" : \"\"}`}\n\t\t\t\t>\n\t\t\t\t\t{attachButtons.map((btn) => (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"chat__attach-btn\"\n\t\t\t\t\t\t\taria-label={btn.label}\n\t\t\t\t\t\t\tkey={btn.label}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<label htmlFor='fileInput'>\n\t\t\t\t\t\t\t\t<Icon id={btn.icon} className=\"chat__attach-icon\" />\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\tid=\"fileInput\"\n\t\t\t\t\t\t\t\tname=\"photo\"\n\t\t\t\t\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\t\t\t\t\tonChange={(e) => onFileChange(e)}\n\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<textarea\n\t\t\t\tclassName=\"chat__input\"\n\t\t\t\tplaceholder=\"Введите сообщение\"\n\t\t\t\tvalue={mess} \n\t\t\t\tonChange={handleChange} \n\t\t\t\tref={textAreaRef}\t\t\t\n\t\t\t\trows={1}\n\t\t\t/>\n\n\t\t\t<button aria-label=\"Send message\" onClick={submitNewMessage}>\n\t\t\t\t<Icon id=\"send\" className=\"chat__input-icon\" />\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default ChatInput;\n","import React, { useState } from \"react\";\nimport Icon from \"./../../components/Icon\";\nimport \"./styles/main.css\";\n\nconst OptionsBtn = ({\n\tmsgId,\n\tclassName,\n\ticonId,\n\ticonClassName,\n\tariaLabel,\n\toptions = [],\n\tposition = \"left\",\n\tshowPressed = true,\n\tonSelected,\n\t...props\n\n}) => {\n\tconst [showOptions, setShowOptions] = useState(false);\n\treturn (\n\t\t<div className=\"pos-rel\">\n\t\t\t<button\n\t\t\t\taria-label={ariaLabel}\n\t\t\t\tclassName={`options-btn ${\n\t\t\t\t\tshowOptions && showPressed ? \"options-btn--pressed\" : \"\"\n\t\t\t\t} ${className || \"\"}`}\n\t\t\t\tonClick={() => setShowOptions(!showOptions)}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<Icon id={iconId} className={iconClassName} />\n\t\t\t</button>\n\t\t\t<ul\n\t\t\t\tclassName={`options-btn__options ${\n\t\t\t\t\tshowOptions ? \"options-btn__options--active\" : \"\"\n\t\t\t\t} ${position === \"right\" ? \"options-btn__options--right\" : \"\"}`}\n\t\t\t>\n\t\t\t\t{options.map((option, index) => (\n\t\t\t\t\t<li className=\"options-btn__option\" key={index} onClick={() => onSelected(index, msgId)}>\n\t\t\t\t\t\t{option}\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default OptionsBtn;\n","import React from \"react\";\nimport Icon from \"./../../../components/Icon\";\nimport OptionsBtn from \"./../../../components/OptionsButton\";\nimport avatarDefault from \"./../../../../chat-app-new/assets/images/no-avatar.png\";\n\nconst Header = ({ user, openProfileSidebar, openSearchSidebar }) => {\n\n\tconst host = process.env.REACT_APP_API_URL\n\n\tconst onSelected = (index) => {\n\t\tswitch(index) {\n\t\t\tcase 0: //данные о контакте\n\t\t\t\topenProfileSidebar()\n\t\t\t\tbreak\n\t\t  \n\t\t\tcase 1: \n\t\t\t\tconsole.log('1')\n\t\t\t\tbreak\n\t\t  \n\t\t\tdefault:\n\t\t\t\tconsole.log(\"В разработке\")\n\t\t\t\tbreak\n\t\t  }\n\t};\n\n\treturn (\n\t\t<header className=\"headerB chat__header\">\n\t\t\t<div className=\"chat__avatar-wrapper\" onClick={openProfileSidebar}>\n\t\t\t\t{\n\t\t\t\t\tuser.avatar\n\t\t\t\t\t? <img src={`${host}${user.avatar}`} alt={user?.name} className=\"avatar-adm\" />\n\t\t\t\t\t: <img src={avatarDefault} alt={user?.name} className=\"avatar-adm\" />\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<div className=\"chat__contact-wrapper\" onClick={openProfileSidebar}>\n\t\t\t\t<h2 className=\"chat__contact-name\"> {user?.name}</h2>\n\t\t\t\t<p className=\"chat__contact-desc\">\n\t\t\t\t\t{user.typing ? \"печатает...\" : \"данные контакта\"}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"chat__actions\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"chat__action\"\n\t\t\t\t\taria-label=\"Search\"\n\t\t\t\t\tonClick={openSearchSidebar}\n\t\t\t\t>\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tid=\"search\"\n\t\t\t\t\t\tclassName=\"chat__action-icon chat__action-icon--search\"\n\t\t\t\t\t/>\n\t\t\t\t</button>\n\t\t\t\t<OptionsBtn\n\t\t\t\t\tclassName=\"chat__action\"\n\t\t\t\t\tariaLabel=\"Menu\"\n\t\t\t\t\ticonId=\"menu\"\n\t\t\t\t\ticonClassName=\"chat__action-icon\"\n\t\t\t\t\tonSelected={onSelected}\n\t\t\t\t\toptions={[\n\t\t\t\t\t\t\"Данные о контакте\",\n\t\t\t\t\t\t// \"Выбрать сообщения\",\n\t\t\t\t\t\t// \"Отключить уведомления\",\n\t\t\t\t\t\t\"Очистить переписку\",\n\t\t\t\t\t\t\"Удалить чат\",\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","import React from \"react\";\nimport Icon from \"./../../../components/Icon\";\n\nconst ChatSidebar = ({ active, closeSidebar, heading, children }) => {\n\treturn (\n\t\t<aside className={`chat-sidebar ${active ? \"chat-sidebar--active\" : \"\"}`}>\n\t\t\t<header className=\"header chat-sidebar__header\">\n\t\t\t\t<button onClick={closeSidebar}>\n\t\t\t\t\t<Icon id=\"cancel\" className=\"chat-sidebar__header-icon\" />\n\t\t\t\t</button>\n\t\t\t\t<h2 className=\"chat-sidebar__heading\"> {heading}</h2>\n\t\t\t</header>\n\t\t\t<div className=\"chat-sidebar__content\">{children}</div>\n\t\t</aside>\n\t);\n};\n\nexport default ChatSidebar;\n","import Icon from \"./../../../components/Icon\";\nimport React from \"react\";\n\nconst Search = () => {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"search-wrapper\">\n\t\t\t\t<div className=\"search-icons\">\n\t\t\t\t\t<Icon id=\"search\" className=\"search-icon\" />\n\t\t\t\t\t<button className=\"search__back-btn\">\n\t\t\t\t\t\t<Icon id=\"back\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<input className=\"search\" placeholder=\"Поиск...\" />\n\t\t\t</div>\n\t\t\t<div className=\"chat-sidebar__search-results\">\n\t\t\t\t<p> Поиск сообщений в чате</p>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Search;\n","import Icon from \"./../../components/Icon\";\nimport React from \"react\";\nimport \"./styles.css\";\n\nconst Checkbox = ({ inputProps }) => {\n\treturn (\n\t\t<div className=\"checkbox\">\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tid=\"checkbox\"\n\t\t\t\t{...inputProps}\n\t\t\t\tclassName=\"checkbox__input\"\n\t\t\t/>\n\t\t\t<label htmlFor=\"checkbox\" className=\"checkbox__label\">\n\t\t\t\t<Icon id=\"check\" className=\"checkbox__icon\" />\n\t\t\t</label>\n\t\t</div>\n\t);\n};\n\nexport default Checkbox;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport media from \"./../../../../chat-app-new/assets/images/placeholder.jpeg\";\nimport Checkbox from \"./../../../components/Checkbox\";\nimport Icon from \"./../../../components/Icon\";\nimport { editContact, uploadFile, editContactAvatar } from './../../../../http/chatAPI';\nimport { useUsersContext } from \"../../../../chat-app-new/context/usersContext\";\nimport { AccountContext } from './../../../../chat-app-new/context/AccountProvider';\nimport defaultAvatar from \"./../../../../chat-app-new/assets/images/no-avatar.png\";\n\nconst Profile = ({ user }) => {\n\tconst [username, setUsername] = useState(\"\")\n\tconst [form, setForm] = useState(false)\n\tconst { addNewName, addNewAvatar } = useUsersContext();\n\tconst { setPerson } = useContext(AccountContext);\n\tconst [img, setImg] = useState(null)\n\tconst [showEdit, setShowEdit] = useState(false)\n\tconst input = React.useRef();\n\n\tconst host = process.env.REACT_APP_API_URL\n\n\tuseEffect(() => {\n\t\tsetImg(`${host}${user.avatar}`)\n\t}, [user]);\n\t\n\n\t//кнопка Изменить\n\tconst changeUsername = () => {\n\t\tsetUsername(user.name);  \n\t\tsetForm(true)\n\t}\n\t\n\tconst handleChange = (e) => {\n\t\te.preventDefault();\n\t\tsetUsername(e.target.value);\n\t}\n\n\tconst getUser = async () => {\n        setPerson({\n            name: user.name, \n            id: user.chatId, \n\t\t\tavatar: user.avatar\n        });\n    }\n\t\n\t//сохранить новое имя\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconst newName = {\n\t\t\tusername, \n\t\t}\n\t\t//сохранить в БД\n\t\tawait editContact(newName, user.chatId)\n\n\t\t//сохранить в контексте\n\t\taddNewName(user.chatId, username);\n\t\tgetUser()\n\n\t\tsetForm(false)\n\t}\n\n\tconst handleAvatar = async (e) => {\n\t\te.preventDefault();\n\t\tsetImg(e.target.files[0])\n\t\tsetShowEdit(true)\n\t}\n\n\t//сохранить новый аватар\n\tconst sendFile = React.useCallback(async () => {\n\t\ttry {\n\t\t\tconst data = new FormData();\n            data.append(\"photo\", img);\n\n            let response = await uploadFile(data);\n\t\t\t//console.log(\"response: \", response.data)\n\t\t\t//setAvatar(response.data.path)\n\n\t\t\tconst newAvatar = {\n\t\t\t\tavatar: response.data.path, \n\t\t\t}\n\n\t\t\t//сохранить в БД\n\t\t\tawait editContactAvatar(newAvatar, user.chatId)\n\t\t\t\n\t\t\t//сохранить в контексте\n\t\t\taddNewAvatar(user.chatId, response.data.path);\n\n\t\t\t//получить данные из контекста\n\t\t\tgetUser()\n\n\t\t\tsetShowEdit(false)\n\n\t\t} catch (error) {\n\t\t\t\n\t\t}\n\t}, [img])\n\n\treturn (\n\t\t<div className=\"profile\">\n\t\t\t<div className=\"profile__section profile__section--personal\">\n\t\t\t\t<div className=\"profile__avatar-wrapper upload\">\n\t\t\t\t\t{\n\t\t\t\t\t\tuser.avatar\n\t\t\t\t\t\t\t? <img src={`${host}${user.avatar}`} alt={user?.name} className=\"avatar-adm\" />\n\t\t\t\t\t\t\t: <img src={defaultAvatar} alt={user?.name} className=\"avatar-adm\" />\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"round_adm\">\n\t\t\t\t\t\t<input type=\"file\" name=\"photo\" onChange={handleAvatar}/>\n\t\t\t\t\t\t<i className = \"fa fa-camera\" style={{color: '#fff'}}></i>\n\t\t\t\t\t</div>\t\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t{\n\t\t\t\t\tshowEdit \n\t\t\t\t\t? <button className=\"btn_save\" onClick={sendFile}>Сохранить</button>\n\t\t\t\t\t: \"\"\n\t\t\t\t}\n\n\t\t\t\t\n\n\t\t\t\t<p style={{ color: '#d5d5d5'}}>{user.chatId}</p>\n\t\t\t\t{\n\t\t\t\t\tform ? <form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\t\tvalue={username} \n\t\t\t\t\t\t\t\t\tonChange={handleChange} \n\t\t\t\t\t\t\t\t\tref={input}\n        \t\t\t\t\t\t\tonFocus={() => input.current.select()}\n\t\t\t\t\t\t\t\t\tstyle={{borderBottom: '1px solid #0e892e', color: '#d5d5d5'}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"Сохранить\" style={{ color: '#6a6a6a'}} />\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t: <h2 className=\"profile__name\"> {user.name} </h2> \n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\t!form ? <span onClick={changeUsername} style={{cursor: 'pointer', color: '#6a6a6a'}}>Редактировать</span>\n\t\t\t\t\t: \"\"\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<div className=\"profile__section profile__section--media\">\n\t\t\t\t<div className=\"sb profile__heading-wrapper\">\n\t\t\t\t\t<h2 className=\"profile__heading\"> Медиа, ссылки и документы </h2>\n\t\t\t\t\t<button>\n\t\t\t\t\t\t<Icon id=\"rightArrow\" className=\"profile__heading-icon\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"profile__media-wrapper\">\n\t\t\t\t\t<img src={media} alt=\"media\" className=\"profile__media\" />\n\t\t\t\t\t<img src={media} alt=\"media\" className=\"profile__media\" />\n\t\t\t\t\t<img src={media} alt=\"media\" className=\"profile__media\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<ul className=\"profile__section profile__section--actions\">\n\t\t\t\t<li className=\"profile__action\">\n\t\t\t\t\t<p className=\"profile__action-left\">\n\t\t\t\t\t\t<span className=\"profile__action-text profile__action-text--top\">\n\t\t\t\t\t\t\tОтключить уведомления\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"profile__action-right\">\n\t\t\t\t\t\t<Checkbox />\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"profile__action\">\n\t\t\t\t\t<p className=\"profile__action-left\">\n\t\t\t\t\t\t<span className=\"profile__action-text profile__action-text--top\">\n\t\t\t\t\t\t\tОтмеченные сообщения\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<button className=\"profile__action-right\">\n\t\t\t\t\t\t<Icon id=\"rightArrow\" className=\"profile__heading-icon\" />\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"profile__action\">\n\t\t\t\t\t<p className=\"profile__action-left\">\n\t\t\t\t\t\t<span className=\"profile__action-text profile__action-text--top\">\n\t\t\t\t\t\t\tИсчезающие сообщения\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"profile__action-text profile__action-text--bottom\">\n\t\t\t\t\t\t\tOff\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<button className=\"profile__action-right\">\n\t\t\t\t\t\t<Icon id=\"rightArrow\" className=\"profile__heading-icon\" />{\" \"}\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t</ul>\n\n\t\t\t<div className=\"profile__section profile__section--about\">\n\t\t\t\t<div className=\"sb profile__heading-wrapper\">\n\t\t\t\t\t<h2 className=\"profile__heading\"> О компании и номер телефона </h2>\n\t\t\t\t</div>\n\t\t\t\t<ul>\n\t\t\t\t\t<li className=\"profile__about-item\">\n\t\t\t\t\t\tНесколько слов о компании...\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"profile__about-item\">+7 123-12-12</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\n\n\t\t\t<div className=\"profile__section profile__section--danger\">\n\t\t\t\t<Icon id=\"block\" className=\"profile__danger-icon\" />\n\t\t\t\t<p className=\"profile__danger-text\"> Заблокировать </p>\n\t\t\t</div>\n\n\t\t\t<div className=\"profile__section profile__section--danger\">\n\t\t\t\t<Icon id=\"thumbsDown\" className=\"profile__danger-icon\" />\n\t\t\t\t<p className=\"profile__danger-text\"> Сообщить о контакте </p>\n\t\t\t</div>\n\n\t\t\t<div className=\"profile__section profile__section--danger\">\n\t\t\t\t<Icon id=\"delete\" className=\"profile__danger-icon\" />\n\t\t\t\t<p className=\"profile__danger-text\"> Удалить чат </p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Profile;\n","import Icon from \"./../../../components/Icon\";\nimport React, { useContext, useState } from \"react\";\n// import pdf from \"./../../../assets/images/PDFicon.png\";\nimport formatTime from \"./../../../../chat-app-new/utils/formatTime\";\nimport { AccountContext } from './../../../../chat-app-new/context/AccountProvider';\nimport { useUsersContext } from \"../../../../chat-app-new/context/usersContext\";\nimport { $host } from './../../../../http/index'\nimport { delMessage } from \"src/http/chatAPI\";\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nconst Convo = ({ lastMsgRef, messages: allMessages }) => {\n\tconst { person } = useContext(AccountContext);\n\tconst dates = Object.keys(allMessages);  //['01/01/2023', 'Сегодня']\n\tconst chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID \n\tconst token = process.env.REACT_APP_TELEGRAM_API_TOKEN\n\n\tconst { delMessageContext } = useUsersContext();\n\n\tconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n\t\t<button\n\t\t\taria-label=\"Message options\"\n\t\t\tclassName=\"chat__msg-options\"\n\t\t\tref={ref}\n\t\t\tonClick={(e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tonClick(e);\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t\t<Icon id=\"downArrow\" className=\"chat__msg-options-icon\" />\t\t\t\t\t\t\t\t\t\t\t\n\t\t</button>\n\t));\n\n\tCustomToggle.displayName = \"Search\";\n\n\tconst CustomMenu = React.forwardRef(\n\t\t({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n\t\t  const [value, setValue] = useState('');\n\t  \n\t\t  return (\n\t\t\t<div\n\t\t\t  ref={ref}\n\t\t\t  style={{backgroundColor: '#20272b'}}\n\t\t\t  className={className}\n\t\t\t  aria-labelledby={labeledBy}\n\t\t\t>\n\t\t\t  <ul className=\"list-unstyled\">\n\t\t\t\t{React.Children.toArray(children).filter(\n\t\t\t\t  (child) =>\n\t\t\t\t\t!value || child.props.children.toLowerCase().startsWith(value),\n\t\t\t\t)}\n\t\t\t  </ul>\n\t\t\t</div>\n\t\t  );\n\t\t},\n\t);\n\n\tCustomMenu.displayName = CustomMenu\n\n\tconst change = async (eventkey) => {\n\t\t//alert(`you chosen: ${eventkey}`)\n\t\tconst message = JSON.parse(eventkey);\n\n\t\tconsole.log(\"id:\", message.id)\n\n\t\t//удалить сообщение через сокет\n\t\tdelMessageContext(message.id, message.date, message.chatId)\n\n\t\t//удалить сообщение в базе данных\n\t\tdelMessage(message.id)\n\n\t\tconst url_del_msg = `https://api.telegram.org/bot${token}/deleteMessage?chat_id=${person.id}&message_id=${message.id}`\n\t\t//console.log(url_del_msg)\n\t\tconst delToTelegram = await $host.get(url_del_msg);\n\n\t\tconsole.log(\"Удаляемое сообщение: \", message.id)\n\t\tconsole.log(\"Дата сообщения: \", message.date)\n\n\t\t//Выводим сообщение об успешной отправке\n\t\tif (delToTelegram) {\n\t\t\tconsole.log('Ваше сообщение удалено из телеграм! ', delToTelegram);\t\n\t\t}           \n\t\t//А здесь сообщение об ошибке при отправке\n\t\telse {\n\t\t\tconsole.log('Что-то пошло не так. Попробуйте ещё раз.');\n\t\t}\t\t\n\t}\n\n\n\treturn dates.map((date, dateIndex) => {\n\t\tconst messages = allMessages[date];\n\t\t//console.log(\"allMessages: \", messages);\n\t\treturn (\n\t\t\t<div key={dateIndex}>\n\t\t\t\t<div className=\"chat__date-wrapper\">\n\t\t\t\t\t<span className=\"chat__date\"> {date}</span>\n\t\t\t\t</div>\n\t\t\t\t{dateIndex === 0 && (\n\t\t\t\t\t<p className=\"chat__encryption-msg\">\n\t\t\t\t\t\t<Icon id=\"lock\" className=\"chat__encryption-icon\" />\n\t\t\t\t\t\tСообщения шифруются сквозным шифрованием. Никто за пределами этого чата не может читать или слушать их\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\t\t\t\t<div className=\"chat__msg-group\" >\n\t\t\t\t\t{messages.map((message, msgIndex) => {\n\t\t\t\t\t\tconst assignRef = () =>\n\t\t\t\t\t\t\tdateIndex === dates.length - 1 && msgIndex === messages.length - 1\n\t\t\t\t\t\t\t\t? lastMsgRef\n\t\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{message.image ? (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={`chat__msg chat__img-wrapper ${\n\t\t\t\t\t\t\t\t\t\t\tmessage.sender !== chatAdminId ? \"chat__msg--rxd\" : \"chat__msg--sent\"\n\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\tref={assignRef()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{message.content.endsWith('.pdf') ? (<figure>\n\t\t\t\t\t\t\t\t\t\t\t{/* <img src={pdf} width={30}/>\n\t\t\t\t\t\t\t\t\t\t\t<a href={message.content} target=\"_blank\" rel=\"noreferrer\">{message.content}</a>\t\t\t\t\t\t\t\t\t\t\t */}\n\t\t\t\t\t\t\t\t\t\t\t<iframe src={message.content} height=\"235px\" width=\"100%\" title=\"myFramePdf\"/>\n\t\t\t\t\t\t\t\t\t\t</figure>) : (\n\t\t\t\t\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t\t\t\t\t<a href={message.content} target=\"_blank\" rel=\"noreferrer\"><img src={message.content} alt=\"\" className=\"chat__img\" /></a>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<figcaption style={{textAlign: 'center', backgroundColor: '#607a7a', borderRadius: '5px'}}>{message.descript}</figcaption>\n\t\t\t\t\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t<span className=\"chat__msg-footer\">\n\t\t\t\t\t\t\t\t\t\t\t<span>{formatTime(message.time)}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{!message.sender && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage?.status === \"sent\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"singleTick\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"doubleTick\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label={message?.status}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`chat__msg-status-icon ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage?.status === \"read\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"chat__msg-status-icon--blue\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t<Dropdown onSelect={change}>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle \n\t\t\t\t\t\t\t\t\t\t\t\tas={CustomToggle} \n\t\t\t\t\t\t\t\t\t\t\t\tid=\"dropdown-custom-components\"\t\n\t\t\t\t\t\t\t\t\t\t\t>\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu as={CustomMenu}>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item eventKey={JSON.stringify({id: message.id, date: message.date, chatId: person.id})}>Удалить сообщение</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t\t\t\t</Dropdown>\t\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : message.sender !== chatAdminId ? (\n\t\t\t\t\t\t\t\t\t<p className=\"chat__msg chat__msg--rxd\" ref={assignRef()}>\n\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t{message.content?.startsWith('http') \n\t\t\t\t\t\t\t\t\t\t\t? <a className=\"chat__href\" href={message.content} target=\"_blank\" rel=\"noreferrer\">{message.content}</a> \n\t\t\t\t\t\t\t\t\t\t\t: message.content}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span className=\"chat__msg-filler\"> </span>\n\t\t\t\t\t\t\t\t\t\t<span className=\"chat__msg-footer\">\n\t\t\t\t\t\t\t\t\t\t\t{formatTime(message.time)}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<Dropdown onSelect={change}>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle \n\t\t\t\t\t\t\t\t\t\t\t\tas={CustomToggle} \n\t\t\t\t\t\t\t\t\t\t\t\tid=\"dropdown-custom-components\"\n\t\t\t\t\t\t\t\t\t\t\t>\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu as={CustomMenu}>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item eventKey={JSON.stringify({id: message.id, date: message.date, chatId: person.id})}>Удалить сообщение</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<p className=\"chat__msg chat__msg--sent\" ref={assignRef()}>\n\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t{message.content?.startsWith('http') \n\t\t\t\t\t\t\t\t\t\t\t? <a className=\"chat__href\" href={message.content} target=\"_blank\" rel=\"noreferrer\">{message.content}</a> \n\t\t\t\t\t\t\t\t\t\t\t: message.content}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span className=\"chat__msg-filler\"> </span>\n\t\t\t\t\t\t\t\t\t\t<span className=\"chat__msg-footer\">\n\t\t\t\t\t\t\t\t\t\t\t<span> {formatTime(message.time)} </span>\n\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\tid={\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage?.status === \"sent\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"singleTick\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"doubleTick\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\taria-label={message?.status}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`chat__msg-status-icon ${\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage?.status === \"read\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"chat__msg-status-icon--blue\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t<Dropdown onSelect={change}>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle \n\t\t\t\t\t\t\t\t\t\t\t\tas={CustomToggle} \n\t\t\t\t\t\t\t\t\t\t\t\tid=\"dropdown-custom-components\"\n\t\t\t\t\t\t\t\t\t\t\t>\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu as={CustomMenu}>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item eventKey={JSON.stringify({id: message.id, date: message.date, chatId: person.id})}>Удалить сообщение</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t });\n};\n\nexport default Convo;\n","import React, { useEffect, useRef, useState, useContext } from \"react\";\nimport \"./styles/main.css\";\nimport EmojiTray from \"./components/EmojiTray\";\nimport ChatInput from \"./components/ChatInput\";\nimport Header from \"./components/Header\";\nimport ChatSidebar from \"./components/ChatSidebar\";\nimport Icon from \"./../../components/Icon\";\nimport Search from \"./components/Search\";\nimport Profile from \"./components/Profile\";\nimport Convo from \"./components/Convo\";\nimport { useUsersContext } from \"./../../../chat-app-new/context/usersContext\";\nimport { AccountContext } from './../../../chat-app-new/context/AccountProvider';\nimport { newMessage, uploadFile } from \"src/http/workerAPI\";\nimport { $host } from './../../../http/index'\nimport sendSound from './../../../chat-app-new/assets/sounds/sendmessage.mp3';\n\nconst chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID\nconst token_work = process.env.REACT_APP_TELEGRAM_API_TOKEN_WORK\nconst host = process.env.REACT_APP_API_URL\n\nconst Chat = () => {\n\tconst { userWorkers, setUserAsUnread, addNewMessage2 } = useUsersContext();\n\tconst { person } = useContext(AccountContext);\n\tconst { setCountMessage } = useUsersContext();\n\n\tconst chatId = person.id;\n\tlet user = userWorkers.filter((user) => user.chatId === chatId.toString())[0];\n\n\tconst lastMsgRef = useRef(null);\n\tconst [showAttach, setShowAttach] = useState(false);\n\tconst [showEmojis, setShowEmojis] = useState(false);\n\tconst [showProfileSidebar, setShowProfileSidebar] = useState(false);\n\tconst [showSearchSidebar, setShowSearchSidebar] = useState(false);\n\tconst [file, setFile] = useState();\n\tconst [image, setImage]= useState(\"\");\n\tconst [mess, setMess] = useState(\"\");\n\n\tconst audio = new Audio(sendSound);\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\tscrollToLastMsg();\n\t\t\tsetUserAsUnread(user.chatId);\n\t\t\tsetCountMessage(0)\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tuser && scrollToLastMsg();\n\t}, [userWorkers]);\n\n\t//прокрутка\n\tconst scrollToLastMsg = () => {\n\t\tlastMsgRef.current?.scrollIntoView({transition: \"smooth\"});\n\t};\n\n\tuseEffect(() => {\n        const getImage = async () => {\n            if (file) {\n                const data = new FormData();\n                data.append(\"name\", file.name);\n                data.append(\"photo\", file);\n\n               let response = await uploadFile(data);\n\t\t\t   console.log(\"response: \", response)\n\n               setImage(response.data.path);\n\t\t\t   //сообщение с ссылкой на файл\n\t\t\t   setMess(host + response.data.path)\n            }\n        }\n        getImage();\n    }, [file])\n\n\tconst onFileChange = (e) => {\n        setFile(e.target.files[0]);\n    }\n\n\tconst openSidebar = (cb) => {\n\t\t// close any open sidebar first\n\t\tsetShowProfileSidebar(false);\n\t\tsetShowSearchSidebar(false);\n\n\t\t// call callback fn\n\t\tcb(true);\n\t};\n\n\t//функция отправки сообщения\n\tconst sendText = async () => {\n\t\t//Передаем данные боту\n        const url_send_msg = `https://api.telegram.org/bot${token_work}/sendMessage?chat_id=${person.id}&parse_mode=html&text=${mess.replace(/\\n/g, '%0A')}`\n\t\tconst sendToTelegram = await $host.get(url_send_msg);\n\n\t\t//Выводим сообщение об успешной отправке\n\t\tif (sendToTelegram) {\n\t\t\tconsole.log('Спасибо! Ваша сообщение отправлено! ', sendToTelegram.data.result.message_id);\n\t\t}           \n\t\t//А здесь сообщение об ошибке при отправке\n\t\telse {\n\t\t\tconsole.log('Что-то пошло не так. Попробуйте ещё раз.');\n\t\t}\n\n\t\tlet message = {};\n        if(!file) {\n            message = {\n                senderId: chatAdminId, \n                receiverId: user.chatId,\n                conversationId: user.conversationId,\n                type: \"text\",\n                text: mess,\n                is_bot: false,\n\t\t\t\tmessageId: sendToTelegram.data.result.message_id,\n            }\n\n\t\t\t//сохранить в контексте\n\t\t\taddNewMessage2(user.chatId, mess, 'text', '', user.conversationId, sendToTelegram.data.result.message_id);\n        } else {\n            message = {\n                senderId: chatAdminId, \n                receiverId: user.chatId,\n                conversationId: user.conversationId,\n                type: \"image\",\n                text: host + image,\n                is_bot: false,\n\t\t\t\tmessageId: sendToTelegram.data.result.message_id,\n            }\n\n\t\t\t//сохранить в контексте\n\t\t\taddNewMessage2(user.chatId, host + image, 'image', '', user.conversationId, sendToTelegram.data.result.message_id);\n        }\n        console.log(\"message send button: \", message);\n\n\t\t//сохранение сообщения в базе данных\n\t\tawait newMessage(message)\t\n\t}\n\n\tconst submitNewMessage = () => {\n\t\taudio.play();\n\t\tsendText();\n\n\t\tsetMess(\"\");\n\t\tscrollToLastMsg();\n\t\tsetFile(\"\");\n        setImage(\"\");\n\t};\n\n\n\treturn (\n\t\t<div className=\"chat\">\n\t\t\t<div className=\"chat__body\">\n\t\t\t\t<div className=\"chat__bg\"></div>\n\n\t\t\t\t<Header\n\t\t\t\t\tuser={person}\n\t\t\t\t\topenProfileSidebar={() => openSidebar(setShowProfileSidebar)}\n\t\t\t\t\topenSearchSidebar={() => openSidebar(setShowSearchSidebar)}\n\t\t\t\t/>\n\t\t\t\t<div className=\"chat__content\">\n\t\t\t\t\t<Convo lastMsgRef={lastMsgRef} messages={user.messages} />\n\t\t\t\t</div>\n\t\t\t\t<footer className=\"chat__footer\">\n\t\t\t\t\t<div className=\"chat__footer-wrapper\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"chat__scroll-btn\"\n\t\t\t\t\t\t\taria-label=\"scroll down\"\n\t\t\t\t\t\t\tonClick={scrollToLastMsg}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<Icon id=\"downArrow\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<EmojiTray\n\t\t\t\t\t\t\tshowEmojis={showEmojis}\n\t\t\t\t\t\t\tmess={mess}\n\t\t\t\t\t\t\tsetMess={setMess}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ChatInput\n\t\t\t\t\t\t\tshowEmojis={showEmojis}\n\t\t\t\t\t\t\tsetShowEmojis={setShowEmojis}\n\t\t\t\t\t\t\tshowAttach={showAttach}\n\t\t\t\t\t\t\tsetShowAttach={setShowAttach}\n\t\t\t\t\t\t\tonFileChange={onFileChange}\n\t\t\t\t\t\t\tmess={mess}\n\t\t\t\t\t\t\tsetMess={setMess}\n\t\t\t\t\t\t\tsubmitNewMessage={submitNewMessage}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t</div>\t\t\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t\t<ChatSidebar\n\t\t\t\theading=\"Поиск сообщения\"\n\t\t\t\tactive={showSearchSidebar}\n\t\t\t\tcloseSidebar={() => setShowSearchSidebar(false)}\n\t\t\t>\n\t\t\t\t<Search />\n\t\t\t</ChatSidebar>\n\n\t\t\t<ChatSidebar\n\t\t\t\theading=\"Данные контакта\"\n\t\t\t\tactive={showProfileSidebar}\n\t\t\t\tcloseSidebar={() => setShowProfileSidebar(false)}\n\t\t\t>\n\t\t\t\t<Profile user={user} />\n\t\t\t</ChatSidebar>\n\n\t\t</div>\n\t);\n};\n\nexport default Chat;\n","import React, { Suspense, useEffect, useState, useContext } from 'react'\nimport { CContainer, CSpinner, CNav, CNavLink, CNavItem } from '@coreui/react'\nimport { AppSidebar, AppFooter, AppHeaderChat } from '../components/index'\n\nimport \"./../chat-app-new/App.css\";\nimport \"./../chat-app-new/assets/css/index.css\";\n\n// import Loader from \"../chat-app-new/components/Loader\";\nimport Home from \"../chat-app-new/pages/Home\";\nimport Sidebar from \"../chat-app-worker/components/Sidebar\";\nimport Chat from \"../chat-app-worker/pages/Chat\";\n\nimport { AccountContext } from \"../chat-app-new/context/AccountProvider\";\n\nconst ChatsWorker = () => {\n\n  const { person } = useContext(AccountContext); \n\n\tuseEffect(() => {\n\t\tdocument.body.classList.add(\"dark-theme\");\n\t});   \n\n\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeaderChat />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>                 \n                  \n                  <div className=\"app\">\n                    <p className=\"app__mobile-message\"> Доступно только на компьютере 😊. </p> \n                    <div className=\"app-content\">\n                      <Sidebar />\n                      {Object.keys(person).length ? <Chat /> : <Home /> }\n                    </div>\n                  </div>\n\n                </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default ChatsWorker\n"],"names":["contact","setPerson","useContext","AccountContext","useUsersContext","setUserWorkerAsUnread","setCountMessageWork","getUser","name","id","chatId","avatar","lastMessage","recentMessageDate","messageDates","Object","keys","messages","length","JSON","stringify","pop","getLastMessage","className","onClick","src","process","alt","avatarDefault","formatTime","time","status","Icon","unread","typing","content","pinned","userWorkers","useState","contacts","setContacts","text","setText","navigate","useNavigate","useEffect","console","log","userSort","sort","a","b","dateA","Date","date","filteredData","filter","user","toLowerCase","includes","ariaLabel","iconId","iconClassName","onSelected","index","options","placeholder","onChange","e","target","value","map","allIcons","Icons","props","selectedIcon","emojiTabs","icon","label","active","showEmojis","newMessage","setNewMessage","tab","Array","fill","_","rowIndex","colIndex","role","style","backgroundPositionX","backgroundPositionY","textAreaRef","height","scrollHeight","attachButtons","click","showAttach","setShowAttach","setShowEmojis","mess","setMess","submitNewMessage","onFileChange","useRef","useAutosizeTextArea","current","btn","htmlFor","type","display","ref","rows","msgId","position","showPressed","showOptions","setShowOptions","option","openProfileSidebar","openSearchSidebar","closeSidebar","heading","children","inputProps","username","setUsername","form","setForm","addNewName","addNewAvatar","img","setImg","showEdit","setShowEdit","input","React","host","handleSubmit","preventDefault","newName","editContact","handleAvatar","files","sendFile","data","FormData","append","uploadFile","response","newAvatar","path","editContactAvatar","defaultAvatar","color","onSubmit","onFocus","select","borderBottom","cursor","media","lastMsgRef","allMessages","person","dates","chatAdminId","delMessageContext","CustomToggle","displayName","CustomMenu","labeledBy","backgroundColor","child","startsWith","change","eventkey","message","parse","delMessage","url_del_msg","$host","delToTelegram","dateIndex","msgIndex","assignRef","undefined","image","sender","endsWith","width","title","href","rel","textAlign","borderRadius","descript","Dropdown","onSelect","as","eventKey","setUserAsUnread","addNewMessage2","setCountMessage","toString","showProfileSidebar","setShowProfileSidebar","showSearchSidebar","setShowSearchSidebar","file","setFile","setImage","audio","Audio","sendSound","scrollToLastMsg","scrollIntoView","transition","getImage","openSidebar","cb","sendText","url_send_msg","replace","sendToTelegram","result","message_id","senderId","receiverId","conversationId","is_bot","messageId","play","document","body","classList","add","lg","Suspense","fallback","Home"],"sourceRoot":""}