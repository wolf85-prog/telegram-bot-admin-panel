{"version":3,"file":"static/js/2288.31d4d639.chunk.js","mappings":"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","sources":["assets/images/arrowDown.svg","http/projectAPI.js","pages/Workers.js"],"sourcesContent":["var _metadata, _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowDown(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 256 256\",\n    enableBackground: \"new 0 0 256 256\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _metadata || (_metadata = /*#__PURE__*/React.createElement(\"metadata\", null, \" Svg Vector Icons : http://www.onlinewebfonts.com/icon \")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"M128,10C62.9,10,10,62.9,10,128c0,65.1,52.9,118,118,118c65.1,0,118-52.9,118-118C246,62.9,193.1,10,128,10z M173.8,148.4l-37,31.4c-2.5,2.1-5.6,3.2-8.7,3.2s-6.2-1.1-8.7-3.2l-37-31.4c-5.7-4.8-6.4-13.3-1.5-19c4.8-5.7,13.3-6.4,19-1.5l14.9,12.6V86.4c0-7.4,6-13.5,13.5-13.5s13.5,6,13.5,13.5v54.2l14.9-12.6c5.7-4.8,14.2-4.1,19,1.5C180.1,135.1,179.4,143.6,173.8,148.4z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowDown);\nexport default __webpack_public_path__ + \"static/media/arrowDown.4f7021c2d42a26d0369da8983c53315a.svg\";\nexport { ForwardRef as ReactComponent };","import {$authHost, $host} from \"./index\";\n\nexport const getProjects = async () =>{\n    try {\n       let response = await $host.get('api/projectnew/get');\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getSpecialist api\", error.message);\n    }\n}\n\nexport const getProjectsDel = async () =>{\n    try {\n       let response = await $host.get('api/projectnew/delete/get');\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getProjectsDel api\", error.message);\n    }\n}\n\nexport const getProjectCount = async (count, prev) =>{\n    try {\n       let response = await $host.get(`api/projectnew/count/get/${count}/${prev}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getProjectCount api\", error.message);\n    }\n}\n\nexport const editProject = async (data, id) =>{\n    try {\n        await $host.patch(`api/projectnew/update/${id}`, data); \n    } catch (error) {\n        console.log(\"error while calling editProject api\",error.message);\n    }\n}\n\nexport const addProject = async (data) =>{\n    try {\n        let response = await $host.post(`api/projectnew/add`, data); \n        return response.data;\n    } catch (error) {\n        console.log(\"error while calling addProject api\",error.message);\n    }\n}\n\nexport const deleteProject = async (id) =>{\n    try {\n        await $host.get(`api/projectnew/delete/${id}`); \n    } catch (error) {\n        console.log(\"error while calling deleteProject api\",error.message);\n    }\n}\n\nexport const getProjectId = async (id) =>{\n    try {\n       let response = await $host.get(`api/projectnew/get/${id}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getProjectId api\", error.message);\n    }\n}\n","import React, { Suspense, useEffect, useState } from 'react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport { \n  CContainer, \n  CSpinner, \n  CCol,\n  CRow,\n  CFormInput,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CCard,\n  CCardBody,\n  CCollapse,\n  CButton, \n  CTooltip,\n} from '@coreui/react'\nimport { useUsersContext } from \"../chat-app-new/context/usersContext\";\n\nimport arrowDown from '../assets/images/arrowDown.svg'\n\nimport { getAllPretendent, getAllPretendentCount, getWorkersNotion100, getWorkersNotion, getWorkerNotionId} from './../http/workerAPI'\nimport { getSpecialist } from './../http/specAPI'\n//import { getProjectsApi } from './../http/adminAPI'\n\nimport { getProjects } from './../http/projectAPI'\n\n\n//Workers.js\nconst Workers = () => {\n\n  const { setCountPretendent, pretendents, setPretendents } = useUsersContext();\n\n  const [projects, setProjects] = useState([]); \n  const [spec, setSpec] = useState([]); \n\n  const [pending, setPending] = useState(true);  \n\n  const [loading, setLoading]= useState(true);\n\n  const [showTable, setShowTable] = useState([])\n  const [showComment, setShowComment] = useState([])\n\n  const [text, setText]= useState(\"\");\n\n  const [countWorker, setCountWorker] = useState(0);  \n  const [countWorkerNew, setCountWorkerNew] = useState(0); \n\n  const [loadingCount, setLoadingCount] = useState(false); \n\n  //поиск\n  // useEffect(() => {\n\t// \tconst filteredData = pretendents.filter(user=> (user.project + user.workerFamily + user.workerName)?.replace(/[её]/g, '(е|ё)').toLowerCase().includes(text.replace(/[её]/g, '(е|ё)').toLowerCase()));\n  //   setSpec(text === '' ? pretendents : filteredData) \n  // }, [text]);\n\n\n\n  //-----------------------------------------------------------------------------------------\n  //\t\t\tget pretendents\n  //-----------------------------------------------------------------------------------------\n  useEffect(() => {\n    const arrWorkers = []\n\n    setCountPretendent(0)\n    //await newCountMessagePretendent(0)\n\n    const fetchData = async () => {\n\n      let pretendents = await getAllPretendentCount(20, countWorker) //getAllPretendent();\n      console.log(\"pretendents workers: \", pretendents)\n\n      setCountWorker(countWorker+20)\n\n      let workers = await getSpecialist()\n      //console.log(\"workers context: \", workers)\n\n      let projects = await getProjects()\n      //console.log(\"projects workers: \", projects)\n\n      pretendents.map(async (worker, i) => {\n\n        let userObject = projects.find((proj) => proj.id === parseInt(worker.projectId));  \n        //console.log(\"userObject: \", userObject)\n        const projectName = userObject?.name\n\n        let workerObject = workers.find((item) => item.chatId === worker.receiverId); \n        //console.log(\"workerObject: \", workerObject) \n        const workerName = workerObject?.fio\n\n        const worklist = workerObject?.worklist ? JSON.parse(workerObject?.worklist) : ''\n        const rang = workerObject?.rank ? workerObject?.rank : ''\n        const comment = workerObject?.comment ? workerObject?.comment : ''\n        const phone = workerObject?.phone\n\n        const d = new Date(worker.createdAt).getTime() //+ 10800000 //Текущая дата:  + 3 часа)\n        const d2 = new Date(d)\n\n        const month = String(d2.getMonth()+1).padStart(2, \"0\");\n        const day = String(d2.getDate()).padStart(2, \"0\");\n        const chas = d2.getHours();\n        const min = String(d2.getMinutes()).padStart(2, \"0\");\n        \n        const newDate = `${day}.${month} ${chas}:${min}`;\n\n      \n        //worklist\n        const newWorker = {\n          workerId: worker.workerId,\n          date: newDate, \n          projectId: worker.projectId,\n          project: projectName,\n          workerFamily: workerName,\n          //workerName: workerObject?.username,\n          worklist: worklist, \n          rang: rang, \n          comment: comment ? JSON.parse(comment)[0].content : '', \n          phone: phone, \n          accept: worker.accept,\n        }\n        arrWorkers.push(newWorker)\n\n        setSpec(arrWorkers) \n        setPretendents(arrWorkers)\n      })  \n      setLoading(false)\n      setLoadingCount(false)\n    }\n\n    fetchData();\n    \n  },[countWorkerNew])\n\n  //Посмотреть\n  const handleClick = (ind) => {\n    console.log(ind, showTable[ind])\n\n    setShowTable(prevShownTable => ({\n        ...prevShownTable,\n        [ind]: !prevShownTable[ind]\n      }));\n  }\n\n  const handleClickCom = (ind) => {\n\n    setShowComment(prevShownComment => ({\n        ...prevShownComment,\n        [ind]: !prevShownComment[ind]\n      }));\n  }\n\n  const clickNext = async() => {\n    setLoadingCount(true)\n    //1 все рассылки\n\t\tlet response = await getAllPretendentCount(20, countWorker) //getAllPretendent();\n    console.log(\"pretendent size: \", response.length)   \n\n    setCountWorkerNew(countWorker+20)\n\n    console.log(\"Всего сейчас: \", response.length)\n\t\t\t\n    // setPretendents(response)\t\n    // console.log(\"Ещё: \", response.length)\n  }\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n                    {/* <h2>Претенденты</h2> */}\n                    \n                    <CRow className=\"mb-3\">\n                      <CCol sm={3} >\n                        <CFormInput placeholder=\"Поиск...\" onChange={(e)=>setText(e.target.value)} aria-label=\"spec\"/>\n                      </CCol>\n                    </CRow>\n\n                    <CRow>\n                      <CCol style={{textAlign: 'center'}}>\n                        <CCard className=\"mb-4\"> \n                            <CCardBody>\n                              {loading ? \n                                      \n                                <CSpinner/> :\n\n                                <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                                  <CTableHead className='table-light'>\n                                    <CTableRow>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '200px'}}>Дата</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '320px'}}>Проект</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '370px'}}>ФИО</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Специальность</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>U.L.E.Y</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" >Комментарий</CTableHeaderCell>                         \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '250px'}}>Телефон</CTableHeaderCell>\n                                    </CTableRow>\n                                  </CTableHead>\n                                  <CTableBody>                                  \n                                    {spec.map((item, index) => (\n                                      <CTableRow v-for=\"item in tableItems\" key={index}>\n                                        <CTableDataCell className=\"text-center\" style={{color: !item.accept && \"red\"}}>\n                                          {item.date}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: !item.accept && \"red\"}}>\n                                          <CTooltip\n                                              content={item.projectId}\n                                              placement=\"top\"\n                                            >\n                                              <div>{item.project}</div>\n                                          </CTooltip>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 || !item.accept ? 'red' : ''}}>\n                                          <CTooltip\n                                            content={item.workerId}\n                                            placement=\"top\"\n                                          > \n                                            <div>{item.workerFamily}</div>\n                                          </CTooltip>\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{fontSize: '13px', textAlign: 'left'}}>\n                                          <div onClick={()=>handleClick(index)} style={{cursor: 'pointer'}}>{!showTable[index] ? 'Посмотреть' : <br/>}</div>\n                                          <CCollapse visible={showTable[index]}>\n                                            <table>\n                                              {item.worklist ? \n                                              (item.worklist).map((spec, index)=>( \n                                                  <tr key={index}>\n                                                    <td>- {spec.spec}</td>\n                                                  </tr>          \n                                              ))\n                                              :\"\"\n                                              }\n                                            </table>\n                                          </CCollapse>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: !item.accept && 'red'}}>\n                                          {item.rang}\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{fontSize: '13px', textAlign: 'left'}}>\n                                          <div onClick={()=>handleClickCom(index)} style={{cursor: 'pointer'}}>{!showComment[index] ? (item.comment ? 'Посмотреть' : '') : <br/>}</div>\n                                          <CCollapse visible={showComment[index]}>\n                                            {item.comment ? item.comment : <></>}\n                                          </CCollapse>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: !item.accept && \"red\"}}>\n                                          <div>{item.phone}</div>\n                                        </CTableDataCell>\n                                      </CTableRow>\n                                      ))\n                                    }\n                                </CTableBody>                   \n                                </CTable>\n                              }\n                              {loadingCount ? <CSpinner/> : \"\" }\n                              <div style={{display: 'flex', justifyContent: 'center' }}>\n                                <img src={arrowDown} alt='' onClick={()=>clickNext()} style={{width: '50px', marginTop: '15px', cursor: 'pointer'}}></img>\n                              </div> \n                            </CCardBody>\n                          </CCard>\n                        </CCol>\n                    </CRow>\n                  </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Workers\n"],"names":["getProjects","async","$host","get","data","error","console","log","message","getProjectsDel","editProject","id","patch","addProject","post","getProjectId","Workers","setCountPretendent","pretendents","setPretendents","useUsersContext","projects","setProjects","useState","spec","setSpec","pending","setPending","loading","setLoading","showTable","setShowTable","showComment","setShowComment","text","setText","countWorker","setCountWorker","countWorkerNew","setCountWorkerNew","loadingCount","setLoadingCount","useEffect","arrWorkers","getAllPretendentCount","workers","getSpecialist","map","worker","i","userObject","find","proj","parseInt","projectId","projectName","name","workerObject","item","chatId","receiverId","workerName","fio","worklist","JSON","parse","rang","rank","comment","phone","d","Date","createdAt","getTime","d2","month","String","getMonth","padStart","newDate","getDate","getHours","getMinutes","newWorker","workerId","date","project","workerFamily","content","accept","push","fetchData","_jsxs","className","children","_jsx","AppSidebar","AppHeader","CContainer","lg","Suspense","fallback","CSpinner","color","CRow","CCol","sm","CFormInput","placeholder","onChange","e","target","value","style","textAlign","CCard","CCardBody","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","width","CTableBody","index","CTableDataCell","CTooltip","placement","dateborn","fontSize","onClick","handleClick","ind","prevShownTable","cursor","CCollapse","visible","handleClickCom","prevShownComment","_Fragment","display","justifyContent","src","arrowDown","alt","response","length","clickNext","marginTop","AppFooter"],"sourceRoot":""}