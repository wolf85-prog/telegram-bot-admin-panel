{"version":3,"file":"static/js/6119.731423e4.chunk.js","mappings":"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","sources":["pages/Workhub.js","views/widgets/WidgetsDropdown2.js"],"sourcesContent":["import React, { Suspense, useState, useEffect } from 'react'\nimport { CContainer, CSpinner } from '@coreui/react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport {\n  CAvatar,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilPeople,\n} from '@coreui/icons'\n\nimport avatar2 from 'src/assets/images/avatars/blank-avatar.png'\n\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\nimport { getAllMessages } from './../http/chatAPI.js'\n\nimport WidgetsDropdown from '../views/widgets/WidgetsDropdown2'\n\nconst Workhub = () => {\n\n  const { users: clients } = useUsersContext();\n  const { managers: zakazchiki } = useUsersContext();\n  const { projects: projs } = useUsersContext();\n  const { companys: comps } = useUsersContext();\n\n  const [contacts, setContacts]= useState([]);\n  const [projects, setProjects]= useState([]);\n  const [newClients, setNewClients]= useState([]);\n  const [oldClients, setOldClients]= useState([]);\n  const [loading, setLoading]= useState(true);\n\n  const chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID\n  const host = process.env.REACT_APP_API_URL\n  \n\n  //get Contacts\n  useEffect(() => {\n    const arrClients = []\n    \n  }, []);\n  \n//---------------------------------------------------------------------------------------------\n//get Projects\n  useEffect(() => {\n    const arrProjects = []  \n    \n  },[])\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n\n                <>\n                <WidgetsDropdown users={clients.length-1} projects={projects.length} companys={comps.length} />\n\n                <CRow>\n                  <CCol xs>\n                    <CCard className=\"mb-4\">\n                      <CCardHeader>Пользователи бота ({clients.length - 1})</CCardHeader>\n                      <CCardBody>\n                        <CRow>\n                          <CCol xs={12} md={6} xl={6}>\n                            <CRow>\n                              <CCol sm={6}>\n                                <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                                  <div className=\"text-medium-emphasis small\">Новые клиенты</div>\n                                  <div className=\"fs-5 fw-semibold\">{newClients.length}</div>\n                                </div>\n                              </CCol>\n                              <CCol sm={6}>\n                                <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                                  <div className=\"text-medium-emphasis small\">Постоянные клиенты</div>\n                                  <div className=\"fs-5 fw-semibold\">{oldClients.length-1}</div>\n                                </div>\n                              </CCol>\n                            </CRow>\n                          </CCol>\n\n                          <CCol xs={12} md={6} xl={6}>\n                            <CRow>\n                              <CCol sm={6}>\n                                <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                                  <div className=\"text-medium-emphasis small\">Просмотры</div>\n                                  <div className=\"fs-5 fw-semibold\">-</div>\n                                </div>\n                              </CCol>\n                              <CCol sm={6}>\n                                <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                                  <div className=\"text-medium-emphasis small\">Другое</div>\n                                  <div className=\"fs-5 fw-semibold\">-</div>\n                                </div>\n                              </CCol>\n                            </CRow>\n\n                            <div className=\"mb-5\"></div>\n\n                          </CCol>\n                        </CRow>\n\n                      {loading ? \n                                  \n                        <CSpinner/> :\n\n                        <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                          <CTableHead className='table-dark'>\n                            <CTableRow>\n                              <CTableHeaderCell style={{width: '30px'}}>№</CTableHeaderCell>\n                              <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>\n                                <CIcon icon={cilPeople} />\n                              </CTableHeaderCell>\n                              <CTableHeaderCell style={{width: '160px'}}>Пользователь</CTableHeaderCell>                             \n                              <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Организация</CTableHeaderCell>\n                              <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Телефон</CTableHeaderCell>\n                              <CTableHeaderCell className=\"text-center\" style={{width: '80px'}}>Город</CTableHeaderCell>\n                              <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>TG ID</CTableHeaderCell>\n                              <CTableHeaderCell style={{width: '100px'}}>Использование</CTableHeaderCell>\n                              <CTableHeaderCell style={{width: '100px'}}>Активность</CTableHeaderCell>\n                              {/* <CTableHeaderCell>Управление</CTableHeaderCell> */}\n                            </CTableRow>\n                          </CTableHead>\n                          <CTableBody>\n                            {contacts.map((item, index) => (\n                              <CTableRow v-for=\"item in tableItems\" key={index}>\n                                <CTableDataCell className=\"text-center\">\n                                  {index+1}\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\">\n                                    <CAvatar size=\"md\" src={item.avatar ? host + item.avatar : avatar2} alt='' />\n                                </CTableDataCell>\n                                <CTableDataCell>\n                                  <div>{item.user.name}</div>\n                                  <div className=\"small text-medium-emphasis\">\n                                    {/* <span>{item.user.new ? 'Новый' : 'Recurring'}</span> | Регистрация:{' '}\n                                    {item.user.registered} */}\n                                  </div>\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\">\n                                  {item.company ? <div>{item.company}</div> : ''}\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\">\n                                  <div>{item.phone}</div>\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\">\n                                  <div>{item.city}</div>\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\">\n                                  <div>{item.TG_ID}</div>\n                                </CTableDataCell>\n                                <CTableDataCell>\n                                  <div className=\"clearfix\">\n                                    <div className=\"float-start\">\n                                      <strong>{item.usage.value}%</strong>\n                                    </div>\n                                    <div className=\"float-end\">\n                                      <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                                    </div>\n                                  </div>\n                                  <CProgress thin color={item.usage.color} value={item.usage.value} />\n                                </CTableDataCell>\n                                <CTableDataCell>\n                                  <div className=\"small text-medium-emphasis\">Последний вход</div>\n                                  <strong>{item.activity}</strong>\n                                </CTableDataCell>\n                                {/* <CTableDataCell>\n                                  <CButton color=\"light\">\n                                    <img src={pencilIcon} alt='' width='15px'/>\n                                  </CButton>\n                                  &nbsp;\n                                  <CButton color=\"light\">\n                                    <img src={deleteIcon} alt='' width='10px' />\n                                  </CButton>\n                                </CTableDataCell> */}\n                              </CTableRow>\n                            ))}\n                          </CTableBody>\n                        </CTable>\n                      }\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                </CRow>\n              </>\n\n                </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Workhub\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nconst WidgetsDropdown2 = ({\n  users, \n  newUsers, \n  activeUsers, \n  delUsers, \n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              {users.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Всего\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      (users.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/users.length-5, \n                     0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {newUsers.length} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Новые\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/newUsers.length-5, \n                      0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {activeUsers.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Активные\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [activeUsers, 0, 0, 0, 0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              {delUsers.length}\n            </>\n          }\n          title={\"Удаленные\"}\n          action={\"\"}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', \n                  'Февраль', \n                  'Март', \n                  'Апрель', \n                  'Май', \n                  'Июнь', \n                  'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [delUsers, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown2\n"],"names":["clients","useUsersContext","users","comps","managers","projects","companys","useState","contacts","newClients","oldClients","loading","useEffect","className","lg","Suspense","fallback","color","length","xs","md","xl","sm","align","hover","responsive","style","width","icon","cilPeople","map","item","index","size","src","avatar","process","avatar2","alt","user","name","company","phone","city","TG_ID","usage","value","period","thin","activity","newUsers","activeUsers","delUsers","title","action","chart","height","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","filter","Date","createDate","getMonth","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","fill","barPercentage","drawTicks"],"sourceRoot":""}