{"version":3,"file":"static/js/6118.ef6a7344.chunk.js","mappings":"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","sources":["pages/SoundsNotif.js"],"sourcesContent":["import React, { Suspense, useEffect, useState } from 'react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\n//import { delSoundNotif, getProcess, getSoundNotif, startSoundNotif } from './../http/adminAPI.js'\n\nimport {\n  CContainer, \n  CSpinner,\n  CCard,\n  CCardBody,\n  CCardTitle,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CButton,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CFormSelect,\n  CFormLabel,\n} from '@coreui/react'\n\n// routes config\n//import routes from '../routes'\n\nimport stopIcon from 'src/assets/images/stop.png'\nimport stopIcon2 from 'src/assets/images/stop_press.png'\nimport playIcon from 'src/assets/images/play.png'\nimport playIcon2 from 'src/assets/images/play_press.png'\nimport recIcon from 'src/assets/images/rec.png'\nimport recIcon2 from 'src/assets/images/rec_press.png'\n\nimport status1Icon from 'src/assets/images/status1.png'\nimport status2Icon from 'src/assets/images/status2.png'\n\nconst SoundsNotif = () => {  \n\n  const { soundsNotif, \n    sendNumberProcess, \n    statusProcess, \n    statusProcess2, \n    statusProcess3, \n    statusProcess4, \n    statusProcess5, \n    statusProcess6,\n    setStatusProcess, \n    setStatusProcess2, \n    setStatusProcess3, \n    setStatusProcess4, \n    setStatusProcess5, \n    setStatusProcess6,\n    intervalProcess,\n    intervalProcess2,\n    intervalProcess3,\n    intervalProcess4,\n    intervalProcess5,\n    intervalProcess6,\n    setIntervalProcess,\n    setIntervalProcess2,\n    setIntervalProcess3,\n    setIntervalProcess4,\n    setIntervalProcess5,\n    setIntervalProcess6,\n    timeProcess,\n    timeProcess2,\n    timeProcess3,\n    timeProcess4,\n    timeProcess5,\n    timeProcess6,\n    setTimeProcess,\n    setTimeProcess2,\n    setTimeProcess3,\n    setTimeProcess4,\n    setTimeProcess5,\n    setTimeProcess6,\n  } = useUsersContext();\n\n  const [loadingIframe, setLoadingIframe] = useState(true);\n  const [loadingIframe2, setLoadingIframe2] = useState(true);\n  const [loadingIframe3, setLoadingIframe3] = useState(true);\n  const [loadingIframe4, setLoadingIframe4] = useState(true);\n\n  const [soundNotif, setSoundNotif] = useState([]); \n  const [activeKey, setActiveKey] = useState(2)\n  const [tabhub, setTabhub]= useState('');\n  const [showStatic, setShowStatic]= useState(true);\n  const [showProcess, setShowProcess]= useState(false);\n  \n  const [showProcessInfo, setShowProcessInfo]= useState([]);\n\n  const [loadStatus, setLoadStatus]= useState([]);\n  const [playProcess, setPlayProcess]= useState([false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]);\n  const [stopProcess, setStopProcess]= useState([true,true,true,true,true,true,true,true,true,true,true,true,true,true,true]);\n\n\n  const [showInterval, setShowInterval]= useState([]);\n  const [showTime, setShowTime]= useState([]);\n\n\n  const [arrInt, setArrInt] = useState([])\n  const [arrInt2, setArrInt2] = useState([])\n  const [arrInt3, setArrInt3] = useState([])\n  const [arrInt4, setArrInt4] = useState([])\n  const [arrInt5, setArrInt5] = useState([])\n  const [arrInt6, setArrInt6] = useState([])\n\n  const [sortInterval, setSortInterval] = useState(false)\n  const [sortTime, setSortTime] = useState(false)\n  const [clickSort, setClickSort] = useState(false)\n  const [clickSortTime, setClickSortTime] = useState(false)\n\n  const [processAll, setProcessAll] = useState([])\n\n  const arrTime = [{label: 'S', value: 'S',},{label: 'M', value: 'M',},{label: 'H',value: 'H',},]\n\n  const arrH = [\n    {label: 1, value: 1,},\n    {label: 2, value: 2,},\n    {label: 3, value: 3,},\n    {label: 4, value: 4,},\n    {label: 5, value: 5,},\n    {label: 6, value: 6,},\n    {label: 7, value: 7,},\n    {label: 8, value: 8,},\n    {label: 9, value: 9,},\n    {label: 10, value: 10,},\n    {label: 12, value: 12,},\n    {label: '--', value: 0, disabled: true,},\n    {label: 24, value: 24,},\n  ]\n\n  const arrM = [\n    {label: 1, value: 1,},\n    {label: 2, value: 2,},\n    {label: 3, value: 3,},\n    {label: 4, value: 4,},\n    {label: 5, value: 5,},\n    {label: 6, value: 6,},\n    {label: 7, value: 7,},\n    {label: 8, value: 8,},\n    {label: 9, value: 9,},\n    {label: 10, value: 10,},\n    {label: '--', value: 0, disabled: true,},\n    {label: 20, value: 20,},\n    {label: 30, value: 30,},\n    {label: 40, value: 40,},\n    {label: 50, value: 50,},\n    {label: 60, value: 60,},\n  ]\n\n  const arr = [\n    {\n      interval: intervalProcess, \n      time: timeProcess, \n      process: 'Название и статус проекта',\n      code: 'yellow', \n      dop: 'getReports()',\n      resurs: 'Rent',\n      status: statusProcess,\n    }, \n    {\n      interval: intervalProcess, \n      time: timeProcess, \n      process: 'Даты проекта из основного состава', \n      code: 'yellow', \n      dop: 'getReports()',\n      resurs: 'Rent',  \n      status: statusProcess,\n    }, \n    {\n      interval: intervalProcess, \n      time: timeProcess, \n      process: 'TelegramID менеджера проекта', \n      code: 'yellow', \n      dop: 'getReports()',\n      resurs: 'Rent',\n      status: statusProcess,\n    },\n    {\n      interval: intervalProcess2, \n      time: timeProcess2, \n      process: 'Название и статус проекта', \n      code: 'purple', \n      dop: 'getReportsRestart()',\n      resurs: 'Rent',\n      status: statusProcess2,\n    },\n    {\n      interval: intervalProcess2, \n      time: timeProcess2, \n      process: 'Даты проекта из основного состава', \n      code: 'purple', \n      dop: 'getReportsRestart()',\n      resurs: 'Rent', \n      status: statusProcess2,\n    },\n    {\n      interval: intervalProcess2,\n      time: timeProcess2,  \n      process: 'TelegramID менеджера проекта', \n      code: 'purple', \n      dop: 'getReportsRestart()',\n      resurs: 'Rent',\n      status: statusProcess2,\n    },\n    {\n      interval: intervalProcess3,\n      time: timeProcess3,  \n      process: 'Все проекты', \n      code: 'blue', \n      dop: 'getProjects',\n      resurs: 'Work',\n      status: statusProcess3,\n    },\n    {\n      interval: intervalProcess3,\n      time: timeProcess3,  \n      process: 'Все сметы', \n      code: 'blue', \n      dop: 'getSmetaAll',\n      resurs: 'Work',\n      status: statusProcess3,\n    },\n    {\n      interval: intervalProcess3,\n      time: timeProcess3,\n      process: 'Название проекта',\n      code: 'blue', \n      dop: 'Отказы | getProjectName',\n      resurs: 'Work',\n      status: statusProcess3,\n    },\n    {\n      interval: intervalProcess3,\n      time: timeProcess3,  \n      process: 'Статус работы претендента', \n      code: 'blue', \n      dop: 'Отказы | getWorkerPretendent',\n      resurs: 'Work',\n      status: statusProcess3,\n    },\n    {\n      interval: intervalProcess3,\n      time: timeProcess3,\n      process: 'ID специалиста в Notion',\n      code: 'blue', \n      dop: 'getWorkerChatId',\n      resurs: 'Work',\n      status: statusProcess3,\n    },\n    {\n      interval: intervalProcess4,\n      time: timeProcess4,\n      process: 'Название проекта',\n      code: 'orange', \n      dop: 'Принять | getProjectName',\n      resurs: 'Work',\n      status: statusProcess4,\n    },\n    {\n      interval: intervalProcess4,\n      time: timeProcess4,\n      process: 'Статус работы претендента',\n      code: 'orange', \n      dop: 'Принять | getWorkerPretendent',\n      resurs: 'Work',\n      status: statusProcess4,\n    },\n    {\n      interval: intervalProcess5,\n      time: timeProcess5,\n      process: 'Отправка рассылки',\n      code: 'gray', \n      dop: 'sendDistribution',\n      resurs: 'Mail',\n      status: statusProcess5,\n    },\n    {\n      interval: intervalProcess6,\n      time: timeProcess6,\n      process: 'Планировщик рассылки',\n      code: 'green', \n      dop: 'сканирование плана рассылок',\n      resurs: 'Mail',\n      status: statusProcess6,\n    }    \n  ]\n\n  useEffect(() => {\n    //const savedItem = localStorage.getItem(\"processAll\");   \n\n    // if (savedItem) {\n    //   const parseItem = JSON.parse(savedItem);\n    //   setProcessAll(parseItem)\n    // } else {\n      setProcessAll(arr)\n    //}\n    \n  },[])\n\n  useEffect(() => {\n\n    setArrInt(arrH)\n    setArrInt2(arrH)\n    setArrInt3(arrH)\n    setArrInt4(arrH)\n    setArrInt5(arrH)\n    setArrInt6(arrH)\n\n\n    if (clickSort) {\n      console.log('sort interval')\n      if (sortInterval) {\n        const temp = [...processAll].sort((a,b)=> a.interval - b.interval)\n        setProcessAll(temp)\n      } else {\n        const temp = [...processAll].sort((a,b)=> b.interval - a.interval)\n        setProcessAll(temp)\n      }\n    } \n\n    if (clickSortTime) {\n      console.log('sort time')\n      if (sortTime) {\n        console.log('sort true')\n        const temp = [...processAll].sort((a,b)=> a.time.localeCompare(b.time))\n        setProcessAll(temp)\n      } else {\n        console.log('sort true')\n        const temp = [...processAll].sort((a,b)=> b.time.localeCompare(a.time))\n        setProcessAll(temp)\n      }\n    } \n\n    //localStorage.setItem(\"processAll\", JSON.stringify(arr));\n    //console.log(\"playProcess: \", playProcess)\n      \n  }, [\n    clickSort, \n    sortInterval, \n    clickSortTime, \n    sortTime, \n    // timeProcess,\n    // timeProcess2,\n    // timeProcess3,\n    // timeProcess4,\n    // timeProcess5,\n    // intervalProcess,\n    // intervalProcess2,\n    // intervalProcess3,\n    // intervalProcess4, \n    // intervalProcess5\n  ]);\n\n\n  const openHub = (hub) => {\n    if (hub === 'Static') { \n      setShowStatic(true)\n      setShowProcess(false)\n      setActiveKey(2)\n      setTabhub('Static')\n    }\n    if (hub === 'Process') { \n      setShowStatic(false)\n      setShowProcess(true)\n      setActiveKey(1)\n      setTabhub('Process')\n    }\n  }\n\n  const clickInfo = (ind, info) => {\n    console.log(ind, showProcessInfo[ind])\n\n    setShowProcessInfo(prevShownTable => ({\n      ...prevShownTable,\n      [ind]: !prevShownTable[ind]\n    }));\n\n  }\n\n  //остановить или запустить процесс\n  const clickPlay = (ind) => {\n    console.log(\"ind: \", ind)\n\n    //setLoadStatus(true)\n    setLoadStatus(prevShownTable => ({\n      ...prevShownTable,\n      [ind]: !prevShownTable[ind]\n    }));\n\n    setPlayProcess(prevShownTable => ({\n      ...prevShownTable,\n      [ind]: !prevShownTable[ind]\n    }));\n\n    setStopProcess(prevShownTable => ({\n      ...prevShownTable,\n      [ind]: !prevShownTable[ind]\n    }));\n\n    //setTimeout(()=>{setLoadStatus(false)}, 3000)\n    \n\n    if (ind === 0) {\n      //нажата кнопка Стоп\n      if (stopProcess[0]) {\n        console.log(\"stop\")\n        //await getProcess(ind, false)\n        //sendNumberProcess(ind, false, intervalProcess, timeProcess)\n        //setStatusProcess(false)\n        fetchAllProcess(ind, false)\n      }\n      //нажата кнопка Play\n      if (playProcess[0]) {\n        console.log(\"play\")\n        //await getProcess(ind, true)\n        //sendNumberProcess(ind, true, intervalProcess, timeProcess)\n        //setStatusProcess(true)\n        fetchAllProcess(ind, true)\n      }\n    }\n    else if (ind === 1) {\n      //нажата кнопка Стоп\n      if (stopProcess[1]) {\n        //console.log(\"stop\")\n        //sendNumberProcess(ind, false, intervalProcess, timeProcess)\n        //setStatusProcess(false)\n        fetchAllProcess(ind, false)\n      }\n      //нажата кнопка Play\n      if (playProcess[1]) {\n        //console.log(\"play\")\n        //sendNumberProcess(ind, true, intervalProcess, timeProcess)\n        //setStatusProcess(true)\n        fetchAllProcess(ind, true)\n      }\n    }\n    else if (ind === 2) {\n      //нажата кнопка Стоп\n      if (stopProcess[2]) {\n        //console.log(\"stop\")\n        //sendNumberProcess(ind, false, intervalProcess, timeProcess)\n        //setStatusProcess(false)\n        fetchAllProcess(ind, false)\n      }\n      //нажата кнопка Play\n      if (playProcess[2]) {\n        //console.log(\"play\")\n        //sendNumberProcess(ind, true, intervalProcess, timeProcess)\n        //setStatusProcess(true)\n        fetchAllProcess(ind, true)\n        //setStatusProcess3(!statusProcess3)\n      }\n    }\n    else if (ind === 3) {\n      //нажата кнопка Стоп\n      if (stopProcess[3]) {\n        //console.log(\"stop\")\n        //sendNumberProcess(ind, false, intervalProcess, timeProcess)\n        //setStatusProcess(false)\n        fetchAllProcess(ind, false)\n      }\n      //нажата кнопка Play\n      if (playProcess[3]) {\n        //console.log(\"play\")\n        //sendNumberProcess(ind, true, intervalProcess, timeProcess)\n        //setStatusProcess(true)\n        fetchAllProcess(ind, true)\n      }\n    }\n    else if (ind === 4) {\n      //нажата кнопка Стоп\n      if (stopProcess[4]) {\n        //console.log(\"stop\")\n        //sendNumberProcess(ind, false, intervalProcess, timeProcess)\n        //setStatusProcess(false)\n        fetchAllProcess(ind, false)\n      }\n      //нажата кнопка Play\n      if (playProcess[4]) {\n        //console.log(\"play\")\n        //sendNumberProcess(ind, true, intervalProcess, timeProcess)\n        //setStatusProcess(true)\n        fetchAllProcess(ind, true)\n      }\n    }\n    else if (ind === 5) {\n      //нажата кнопка Стоп\n      if (stopProcess[5]) {\n        //console.log(\"stop\")\n        //sendNumberProcess(ind, false, intervalProcess, timeProcess)\n        //setStatusProcess(false)\n        fetchAllProcess(ind, false)\n      }\n      //нажата кнопка Play\n      if (playProcess[5]) {\n        //console.log(\"play\")\n        //sendNumberProcess(ind, true, intervalProcess, timeProcess)\n        //setStatusProcess(true)\n        fetchAllProcess(ind, true)\n      }\n    }\n    else if (ind === 6) {\n      //нажата кнопка Стоп\n      if (stopProcess[6]) {\n        //console.log(\"stop\")\n        //sendNumberProcess(ind, false, intervalProcess, timeProcess)\n        //setStatusProcess(false)\n        fetchAllProcess(ind, false)\n      }\n      //нажата кнопка Play\n      if (playProcess[6]) {\n        //console.log(\"play\")\n        //sendNumberProcess(ind, true, intervalProcess, timeProcess)\n        //setStatusProcess(true)\n        fetchAllProcess(ind, true)\n      }\n    }\n\n    else if (ind === 7) {\n      //нажата кнопка Стоп\n      if (stopProcess[7]) {\n        //console.log(\"stop\")\n        //sendNumberProcess(ind, false, intervalProcess, timeProcess)\n        //setStatusProcess(false)\n        fetchAllProcess(ind, false)\n      }\n      //нажата кнопка Play\n      if (playProcess[7]) {\n        //console.log(\"play\")\n        //sendNumberProcess(ind, true, intervalProcess, timeProcess)\n        //setStatusProcess(true)\n        fetchAllProcess(ind, true)\n      }\n    }\n\n    else if (ind === 8) {\n      //нажата кнопка Стоп\n      if (stopProcess[8]) {\n        //console.log(\"stop\")\n        //sendNumberProcess(ind, false, intervalProcess, timeProcess)\n        //setStatusProcess(false)\n        fetchAllProcess(ind, false)\n      }\n      //нажата кнопка Play\n      if (playProcess[8]) {\n        //console.log(\"play\")\n        //sendNumberProcess(ind, true, intervalProcess, timeProcess)\n        //setStatusProcess(true)\n        fetchAllProcess(ind, true)\n      }\n    }\n\n    else if (ind === 9) {\n      //нажата кнопка Стоп\n      if (stopProcess[9]) {\n        //console.log(\"stop\")\n        //sendNumberProcess(ind, false, intervalProcess, timeProcess)\n        //setStatusProcess(false)\n        fetchAllProcess(ind, false)\n      }\n      //нажата кнопка Play\n      if (playProcess[9]) {\n        //console.log(\"play\")\n        //sendNumberProcess(ind, true, intervalProcess, timeProcess)\n        //setStatusProcess(true)\n        fetchAllProcess(ind, true)\n      }\n    }\n\n    else if (ind === 10) {\n      //нажата кнопка Стоп\n      if (stopProcess[10]) {\n        //console.log(\"stop\")\n        //sendNumberProcess(ind, false, intervalProcess, timeProcess)\n        //setStatusProcess(false)\n        fetchAllProcess(ind, false)\n      }\n      //нажата кнопка Play\n      if (playProcess[10]) {\n        //console.log(\"play\")\n        //sendNumberProcess(ind, true, intervalProcess, timeProcess)\n        //setStatusProcess(true)\n        fetchAllProcess(ind, true)\n      }\n    }\n\n    else if (ind === 11) {\n      //нажата кнопка Стоп\n      if (stopProcess[11]) {\n        //console.log(\"stop\")\n        //sendNumberProcess(ind, false, intervalProcess, timeProcess)\n        //setStatusProcess(false)\n        fetchAllProcess(ind, false)\n      }\n      //нажата кнопка Play\n      if (playProcess[11]) {\n        //console.log(\"play\")\n        //sendNumberProcess(ind, true, intervalProcess, timeProcess)\n        //setStatusProcess(true)\n        fetchAllProcess(ind, true)\n      }\n    }\n\n    else if (ind === 12) {\n      //нажата кнопка Стоп\n      if (stopProcess[12]) {\n        //console.log(\"stop\")\n        //sendNumberProcess(ind, false, intervalProcess, timeProcess)\n        //setStatusProcess(false)\n        fetchAllProcess(ind, false)\n      }\n      //нажата кнопка Play\n      if (playProcess[12]) {\n        //console.log(\"play\")\n        //sendNumberProcess(ind, true, intervalProcess, timeProcess)\n        //setStatusProcess(true)\n        fetchAllProcess(ind, true)\n      }\n    }\n  }\n\n  const fetchAllProcess = (ind, on) => {\n    processAll[ind].status = on\n    setProcessAll(processAll)\n    //localStorage.setItem(\"processAll\", JSON.stringify(processAll));\n\n    setTimeout(()=>setLoadStatus(false), 3000)\n    \n  }\n\n  //начать изменения\n  const clickRec = (ind) => {\n    setShowInterval(prevShownTable => ({\n      ...prevShownTable,\n      [ind]: true\n    }));\n\n    setShowTime(prevShownTable => ({\n      ...prevShownTable,\n      [ind]: true\n    }));\n\n    //убрать редактирование\n    setTimeout(()=> {\n      setShowInterval(prevShownTable => ({\n        ...prevShownTable,\n        [ind]: false\n      }));\n  \n      setShowTime(prevShownTable => ({\n        ...prevShownTable,\n        [ind]: false\n      }));\n    }, 8000)\n  }\n\n  //изменить интервал\n  const changeInterval = (e, ind) => {\n    const val = e.target.value   \n\n    console.log(\"val: \", val)\n\n    setShowInterval(prevShownTable => ({\n      ...prevShownTable,\n      [ind]: false\n    }));\n\n\n    processAll[ind].interval = val\n    setProcessAll(processAll)\n    //localStorage.setItem(\"processAll\", JSON.stringify(processAll));\n\n    //отправить сокет\n    sendNumberProcess(ind, true, val, 'S')\n    \n  }\n\n  //изменить время\n  const changeTime = (e, ind) => {\n    const val = e.target.value\n    console.log(val, ind)\n\n    setShowTime(prevShownTable => ({\n      ...prevShownTable,\n      [ind]: false\n    }));\n\n    if (ind === 0) {\n      //отправить сокет\n      //sendNumberProcess(ind, true, intervalProcess, val)\n      setTimeProcess(val)\n\n      if (val === 'M') {\n        setArrInt(arrM)\n      } else if (val === 'H') {\n        setArrInt(arrH)\n      } else if (val === 'S') {\n        setArrInt(arrM)\n      } \n    } \n    \n    else if (ind === 1) {\n      //отправить сокет\n      //sendNumberProcess(ind, true, intervalProcess, val)\n      setTimeProcess(val)\n\n      if (val === 'M') {\n        setArrInt2(arrM)\n      } else if (val === 'H') {\n        setArrInt2(arrH)\n      } else if (val === 'S') {\n        setArrInt2(arrM)\n      } \n    }\n\n    else if (ind === 2) {\n      //отправить сокет\n      //sendNumberProcess(ind, true, intervalProcess, val)\n      setTimeProcess(val)\n\n      if (val === 'M') {\n        setArrInt3(arrM)\n      } else if (val === 'H') {\n        setArrInt3(arrH)\n      } else if (val === 'S') {\n        setArrInt3(arrM)\n      } \n    }\n\n    else if (ind === 3) {\n      //отправить сокет\n      //sendNumberProcess(ind, true, intervalProcess2, val)\n      setTimeProcess2(val)\n\n      if (val === 'M') {\n        setArrInt4(arrM)\n      } else if (val === 'H') {\n        setArrInt4(arrH)\n      } else if (val === 'S') {\n        setArrInt4(arrM)\n      } \n    }\n\n    else if (ind === 4) {\n      //отправить сокет\n      //sendNumberProcess(ind, true, intervalProcess2, val)\n      setTimeProcess2(val)\n\n      if (val === 'M') {\n        setArrInt5(arrM)\n      } else if (val === 'H') {\n        setArrInt5(arrH)\n      } else if (val === 'S') {\n        setArrInt5(arrM)\n      } \n    }\n\n    else if (ind === 5) {\n      //отправить сокет\n      //sendNumberProcess(ind, true, intervalProcess2, val)\n      setTimeProcess2(val)\n\n      if (val === 'M') {\n        setArrInt6(arrM)\n      } else if (val === 'H') {\n        setArrInt6(arrH)\n      } else if (val === 'S') {\n        setArrInt6(arrM)\n      } \n    }\n\n    else if (ind === 6) {\n      //отправить сокет\n      //sendNumberProcess(ind, true, intervalProcess2, val)\n      setTimeProcess3(val)\n\n      if (val === 'M') {\n        setArrInt6(arrM)\n      } else if (val === 'H') {\n        setArrInt6(arrH)\n      } else if (val === 'S') {\n        setArrInt6(arrM)\n      } \n    }\n\n    else if (ind === 7) {\n      //отправить сокет\n      //sendNumberProcess(ind, true, intervalProcess3, val)\n      setTimeProcess3(val)\n\n      if (val === 'M') {\n        setArrInt6(arrM)\n      } else if (val === 'H') {\n        setArrInt6(arrH)\n      } else if (val === 'S') {\n        setArrInt6(arrM)\n      } \n    }\n\n    else if (ind === 8) {\n      //отправить сокет\n      //sendNumberProcess(ind, true, intervalProcess3, val)\n      setTimeProcess3(val)\n\n      if (val === 'M') {\n        setArrInt6(arrM)\n      } else if (val === 'H') {\n        setArrInt6(arrH)\n      } else if (val === 'S') {\n        setArrInt6(arrM)\n      } \n    }\n\n    else if (ind === 9) {\n      //отправить сокет\n      //sendNumberProcess(ind, true, intervalProcess3, val)\n      setTimeProcess3(val)\n\n      if (val === 'M') {\n        setArrInt6(arrM)\n      } else if (val === 'H') {\n        setArrInt6(arrH)\n      } else if (val === 'S') {\n        setArrInt6(arrM)\n      } \n    }\n\n    else if (ind === 10) {\n      //отправить сокет\n      //sendNumberProcess(ind, true, intervalProcess3, val)\n      setTimeProcess3(val)\n\n      if (val === 'M') {\n        setArrInt6(arrM)\n      } else if (val === 'H') {\n        setArrInt6(arrH)\n      } else if (val === 'S') {\n        setArrInt6(arrM)\n      } \n    }\n\n    else if (ind === 11) {\n      //отправить сокет\n      //sendNumberProcess(ind, true, intervalProcess3, val)\n      setTimeProcess4(val)\n\n      if (val === 'M') {\n        setArrInt6(arrM)\n      } else if (val === 'H') {\n        setArrInt6(arrH)\n      } else if (val === 'S') {\n        setArrInt6(arrM)\n      } \n    }\n\n    else if (ind === 12) {\n      //отправить сокет\n      //sendNumberProcess(ind, true, intervalProcess3, val)\n      setTimeProcess4(val)\n\n      if (val === 'M') {\n        setArrInt6(arrM)\n      } else if (val === 'H') {\n        setArrInt6(arrH)\n      } else if (val === 'S') {\n        setArrInt6(arrM)\n      } \n    }\n\n    else if (ind === 13) {\n      //отправить сокет\n      //sendNumberProcess(ind, true, intervalProcess3, val)\n      setTimeProcess5(val)\n\n      if (val === 'M') {\n        setArrInt6(arrM)\n      } else if (val === 'H') {\n        setArrInt6(arrH)\n      } else if (val === 'S') {\n        setArrInt6(arrM)\n      } \n    }\n\n    else if (ind === 14) {\n      //отправить сокет\n      //sendNumberProcess(ind, true, intervalProcess3, val)\n      setTimeProcess6(val)\n\n      if (val === 'M') {\n        setArrInt6(arrM)\n      } else if (val === 'H') {\n        setArrInt6(arrH)\n      } else if (val === 'S') {\n        setArrInt6(arrM)\n      } \n    }\n    \n    \n  }\n\n\n  const sortInt = () => {\n    setClickSortTime(false)\n    setClickSort(true)\n    setSortInterval(!sortInterval)\n  }\n\n  const sortT = () => {\n    setClickSort(false)\n    setClickSortTime(true)\n    setSortTime(!sortTime)\n  }\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n\n                  <CRow className=\"justify-content-between\">\n                    <CCol xs={6}><h2>Мониторинг</h2></CCol>\n                  </CRow>\n\n                  <CRow className=\"mb-12\">\n                    {/* Вкладки */}\n                    <CCol sm={6}>\n                      {/* Renthub Workhub */} \n                      <CNav variant=\"tabs\" className='dark-theme'>\n                            <CNavItem>\n                              <CNavLink \n                                style={{background: activeKey !== 2 ? '#08080869' : '', cursor: 'pointer'}} \n                                onClick={() => openHub('Static')} \n                                active={activeKey === 2}>\n                                  Производительность\n                              </CNavLink>\n                            </CNavItem>\n                            <CNavItem>\n                              <CNavLink \n                                style={{background: activeKey !== 1 ? '#08080869' : '', cursor: 'pointer'}} \n                                onClick={() => openHub('Process')} \n                                active={activeKey === 1}>\n                                  Процессы\n                              </CNavLink>\n                            </CNavItem>\n                      </CNav>\n                    </CCol>\n                  </CRow>    \n \n                  <CCard className='rounded-bottom' style={{borderRadius: '0px', borderColor: '#131c21', borderTopRightRadius: '0.375rem'}}>\n                    <CCardBody id=\"Static\" style={{display: showStatic ? 'block' : 'none'}}>\n\n                      <CRow>\n                        <CCol md={6} style={{overflow: 'auto', transform: 'scale(0.9)', transformOrigin: 'top left'}}>\n                          {loadingIframe ? <p> Загрузка...</p> : null}\n                          <iframe\n                            onLoad={() => setLoadingIframe(false)} \n                            loading = \"lazy\"\n                            src=\"https://proj.uley.team:800/status\"\n                            sandbox=\"allow-scripts allow-same-origin\"\n                            width=\"600\"\n                            height=\"400\">\n                          </iframe>\n                        </CCol>\n                        <CCol md={6} style={{overflow: 'auto', transform: 'scale(0.9)', transformOrigin: 'top left'}}>\n                          {/* {loadingIframe2 ? <p> Загрузка...</p> : null}\n                          <iframe width=\"650\" height=\"600\" src=\"https://proj.uley.team:8001/status\" title=\"description\" onLoad={() => setLoadingIframe2(false)} loading = \"lazy\"></iframe> */}\n                        </CCol>\n                      </CRow>\n                      <hr></hr>\n                      <br/>\n                      {/* <CRow>\n                        <CCol md={6} style={{overflow: 'auto', transform: 'scale(0.9)', transformOrigin: 'top left'}}>\n                          {loadingIframe3 ? <p> Загрузка...</p> : null}\n                          <iframe width=\"650\" height=\"600\" src=\"https://proj.uley.team:8080/status\" title=\"description\" onLoad={() => setLoadingIframe3(false)} loading = \"lazy\"></iframe>\n                        </CCol>\n                        <CCol md={6} style={{overflow: 'auto', transform: 'scale(0.9)', transformOrigin: 'top left'}}>\n                          {loadingIframe4 ? <p> Загрузка...</p> : null}\n                          <iframe width=\"650\" height=\"600\" src=\"https://proj.uley.team:5000/status\" title=\"description\" onLoad={() => setLoadingIframe4(false)} loading = \"lazy\"></iframe>\n                        </CCol>\n                      </CRow> */}\n                      \n                    </CCardBody>\n                  \n\n                    <CCardBody id=\"Process\" style={{display: showProcess ? 'block' : 'none'}}>\n                      <CCardTitle></CCardTitle> \n                        <CTable>\n                          <CTableHead>\n                            <CTableRow>\n                              <CTableHeaderCell scope=\"col\" className=\"text-center\" style={{width: '50px'}}>№</CTableHeaderCell>\n                              <CTableHeaderCell scope=\"col\" className=\"text-center\" style={{width: '50px'}}>Код</CTableHeaderCell>\n                              <CTableHeaderCell onClick={sortInt} scope=\"col\" className=\"text-center\" style={{width: '90px', cursor: 'pointer'}}>Интервал</CTableHeaderCell>\n                              <CTableHeaderCell onClick={sortT} scope=\"col\" className=\"text-center\" style={{width: '90px', cursor: 'pointer'}}>Время</CTableHeaderCell>\n                              <CTableHeaderCell scope=\"col\" className=\"text-center\">Запрос</CTableHeaderCell>  \n                              <CTableHeaderCell scope=\"col\" className=\"text-center\" style={{width: '150px'}}>Ресурс</CTableHeaderCell>\n                              <CTableHeaderCell scope=\"col\" className=\"text-center\" style={{width: '90px'}}>Статус</CTableHeaderCell>   \n                              <CTableHeaderCell scope=\"col\" className=\"text-center\" style={{width: '200px'}}>Управление</CTableHeaderCell>    \n                            </CTableRow>\n                          </CTableHead>\n                          <CTableBody>\n                            {/* 1 */}\n                            {processAll.map((item, index) => (\n                              <CTableRow key={index}>\n                                <CTableHeaderCell scope=\"row\" className=\"text-center\" style={{verticalAlign: 'middle'}}>\n                                  {index+1}\n                                </CTableHeaderCell>\n                                <CTableDataCell className=\"text-center\" style={{verticalAlign: 'middle', padding: '0 2px 0 2px'}}>\n                                  <div style={{width: '15px', height: '15px', borderRadius: '2px', marginLeft: '25%', background: item.code}}></div>\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\" style={{verticalAlign: 'middle', padding: '0 2px 0 2px'}}>\n                                  {!showInterval[index] ? (item.interval && item.interval.length > 0 ? item.interval : <CSpinner size=\"sm\" />) : \n                                              <CFormSelect \n                                                aria-label=\"Default select example\"\n                                                style={{width: '63px', fontSize: '12px'}}\n                                                onChange={(e)=>changeInterval(e, index)}\n                                                value={item.interval}\n                                                options={arrInt}\n                                              />}\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\" style={{verticalAlign: 'middle', padding: '0 2px 0 2px'}}>\n                                  {!showTime[index] ? item.time : \n                                    <CFormSelect \n                                      aria-label=\"Default select example\"\n                                      style={{width: '63px', fontSize: '12px'}}\n                                      onChange={(e)=>changeTime(e, index)}\n                                      value={item.time}\n                                      options={arrTime}\n                                    />\n                                  }                                \n                                </CTableDataCell>\n                                <CTableDataCell style={{verticalAlign: 'middle', padding: '0 2px 0 2px', cursor: 'pointer'}} onClick={()=>clickInfo(index+1, item.info)}>\n                                  {item.process}\n                                  {showProcessInfo[index+1] ? <><br/><span style={{fontSize: '12px', color: '#8a93a2'}}>{item.dop}</span></> : ''}\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\" style={{verticalAlign: 'middle', padding: '0 2px 0 2px'}}>\n                                  {item.resurs}\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\" style={{verticalAlign: 'middle', padding: '0 2px 0 2px'}}>\n                                  {loadStatus[index] ? <CSpinner size=\"sm\" /> : (item.status ? <img src={status1Icon} alt='' width='25px' /> : <img src={status2Icon} alt='' width='25px' />)\n                                  }\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\" style={{verticalAlign: 'middle', padding: '0 2px 0 2px'}}>\n                                  \n                                  <CButton disabled={!stopProcess[index] || !item.status} color=\"light\" style={{borderColor: 'transparent', background: 'transparent'}} onClick={()=>clickPlay(index)}>\n                                    <img src={item.status ? stopIcon : stopIcon2} alt='' width='25px' />\n                                  </CButton>\n                                  <CButton disabled={item.status} color=\"light\" style={{borderColor: 'transparent', background: 'transparent'}} onClick={()=>clickPlay(index)}>\n                                    <img src={playProcess[index] || !item.status ? playIcon : playIcon2} alt='' width='25px' />\n                                  </CButton> \n                                  <CButton disabled={!item.status} color=\"light\" style={{borderColor: 'transparent', background: 'transparent'}} onClick={()=>clickRec(index)}>\n                                    <img src={item.status ? recIcon : recIcon2} alt='' width='25px' />\n                                  </CButton>\n                                </CTableDataCell>\n                              </CTableRow>\n                              ))\n                            }\n\n\n                          </CTableBody>\n                        </CTable>\n                    </CCardBody>\n                  </CCard>\n                  \n                </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default SoundsNotif\n"],"names":["SoundsNotif","soundsNotif","sendNumberProcess","statusProcess","statusProcess2","statusProcess3","statusProcess4","statusProcess5","statusProcess6","setStatusProcess","setStatusProcess2","setStatusProcess3","setStatusProcess4","setStatusProcess5","setStatusProcess6","intervalProcess","intervalProcess2","intervalProcess3","intervalProcess4","intervalProcess5","intervalProcess6","setIntervalProcess","setIntervalProcess2","setIntervalProcess3","setIntervalProcess4","setIntervalProcess5","setIntervalProcess6","timeProcess","timeProcess2","timeProcess3","timeProcess4","timeProcess5","timeProcess6","setTimeProcess","setTimeProcess2","setTimeProcess3","setTimeProcess4","setTimeProcess5","setTimeProcess6","useUsersContext","loadingIframe","setLoadingIframe","useState","loadingIframe2","setLoadingIframe2","loadingIframe3","setLoadingIframe3","loadingIframe4","setLoadingIframe4","soundNotif","setSoundNotif","activeKey","setActiveKey","tabhub","setTabhub","showStatic","setShowStatic","showProcess","setShowProcess","showProcessInfo","setShowProcessInfo","loadStatus","setLoadStatus","playProcess","setPlayProcess","stopProcess","setStopProcess","showInterval","setShowInterval","showTime","setShowTime","arrInt","setArrInt","arrInt2","setArrInt2","arrInt3","setArrInt3","arrInt4","setArrInt4","arrInt5","setArrInt5","arrInt6","setArrInt6","sortInterval","setSortInterval","sortTime","setSortTime","clickSort","setClickSort","clickSortTime","setClickSortTime","processAll","setProcessAll","arrTime","label","value","arrH","disabled","arrM","arr","interval","time","process","code","dop","resurs","status","useEffect","console","log","temp","sort","a","b","localeCompare","openHub","hub","clickPlay","ind","prevShownTable","fetchAllProcess","on","setTimeout","_jsxs","className","children","_jsx","AppSidebar","AppHeader","CContainer","lg","Suspense","fallback","CSpinner","color","CRow","CCol","xs","sm","CNav","variant","CNavItem","CNavLink","style","background","cursor","onClick","active","CCard","borderRadius","borderColor","borderTopRightRadius","CCardBody","id","display","md","overflow","transform","transformOrigin","onLoad","loading","src","sandbox","width","height","CCardTitle","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","sortInt","sortT","CTableBody","map","item","index","verticalAlign","CTableDataCell","padding","marginLeft","CFormSelect","fontSize","onChange","e","changeInterval","val","target","options","length","size","changeTime","clickInfo","info","_Fragment","alt","CButton","clickRec","AppFooter"],"sourceRoot":""}