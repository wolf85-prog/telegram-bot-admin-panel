{"version":3,"file":"static/js/2411.c7982819.chunk.js","mappings":"8OAcMA,EAAU,CACd,CACIC,KAAM,0DACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIC,IAAI,EACzBC,UAAU,GAEd,CACIJ,KAAM,8FACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIG,KAAK,EAC1BD,UAAU,GAEd,CACIJ,KAAM,mDACNC,SAAU,SAAAC,GAAG,OAAIA,EAAII,UAAU,EAC/BF,UAAU,GAEd,CACIJ,KAAM,mDACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIK,SAAS,EAC9BH,UAAU,GAEd,CACIJ,KAAM,iCACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIM,OAAO,GAEhC,CACIR,KAAM,mDACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIO,QAAQ,EAC7BL,UAAU,IAKVM,EAAe,CACnBC,KAAM,CACFC,MAAO,CACH,GAGRC,UAAW,CACPD,MAAO,CACHE,SAAU,SAKlBC,MAAO,CACHH,MAAO,CAEH,KAKVI,EAAAA,EAAAA,IAAY,YAAa,CACvBC,KAAM,CACJC,QAAS,OACTC,UAAW,WAEbC,WAAY,CACVC,QAAS,WAEXC,QAAS,CACPF,WAAY,UACZH,KAAM,WAERM,QAAS,CACPF,QAAS,aAEXG,OAAQ,CACNC,OAAQ,kBACRC,MAAO,kBACPC,SAAU,oBAEX,QAqGH,UAnGsB,WAEpB,IAAkBC,GAAkBC,EAAAA,EAAAA,KAA5BC,SACUC,GAAeF,EAAAA,EAAAA,KAAzBG,SACUC,GAAUJ,EAAAA,EAAAA,KAApBK,SACAC,GAAkBN,EAAAA,EAAAA,KAAlBM,cAERC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCN,EAAQQ,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA8BJ,EAAAA,EAAAA,WAAS,GAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAsD1B,OAjDAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,GAEpBX,GAAc,GAEd,IAAMY,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAChBC,QAAQC,IAAI,aAAczB,GAC1BwB,QAAQC,IAAI,aAAc3B,GAC1B0B,QAAQC,IAAI,kBAAmB9B,GAE/BA,EAAc+B,IAAG,eAAAC,GAAAX,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAU,EAAOC,GAAO,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA3B,EAAAA,EAAAA,KAAAG,MAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,OAExBO,GAAOgB,EAAAA,EAAAA,GAAOhD,GAChBiC,EAAajC,EAAWiD,WAAU,SAACC,GAAG,OAAKA,EAAIC,KAAOpB,EAAQvD,SAAS,IACrE0D,EAAcF,EAAQC,GACtBE,EAAyB,OAAXD,QAAW,IAAXA,GAAAA,EAAakB,IAAMlB,EAAYkB,IAAM,GACnDhB,EAA0B,OAAXF,QAAW,IAAXA,OAAW,EAAXA,EAAamB,MAE9BhB,EAAanC,EAAMoD,MAAK,SAACC,GAAO,OAAKA,EAAQJ,KAAOpB,EAAQyB,SAAS,IACnElB,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAY/D,MAE1BiE,EAAI,IAAIkB,KAAK1B,EAAQ2B,WACzBlB,EAAOD,EAAEoB,cACTlB,EAAQmB,OAAOrB,EAAEsB,WAAW,GAAGC,SAAS,EAAG,KAC3CpB,EAAMkB,OAAOrB,EAAEwB,WAAWD,SAAS,EAAG,KACtCnB,EAAOJ,EAAEyB,WACTpB,EAAQgB,OAAOrB,EAAE0B,cAAcH,SAAS,EAAG,KAC3CjB,EAAc,GAAAqB,OAAMxB,EAAG,KAAAwB,OAAIzB,EAAK,KAAAyB,OAAI1B,EAAI,KAAA0B,OAAIvB,EAAI,KAAAuB,OAAItB,GAEhDE,EAAa,CACjB1E,KAAMyE,EACNvE,MAAOyD,EAAQ9D,KACfM,WAAY+D,EACZ9D,UAAW2D,EACX1D,QAASsD,EAAQoC,IACjBzF,SAAU0D,GAEZrB,EAAYqD,KAAKtB,GAAW,yBAAAC,EAAAsB,OAAA,GAAAvC,EAAA,KAC7B,gBAAAwC,GAAA,OAAAzC,EAAA0C,MAAA,KAAAC,UAAA,EA5BgB,IA8BjB/D,EAAYM,GAEZF,GAAW,GAAO,wBAAAU,EAAA8C,OAAA,GAAAhD,EAAA,KACnB,kBAtCc,OAAAJ,EAAAsD,MAAA,KAAAC,UAAA,KAwCfxD,GAEF,GAAE,CAACnB,KAGD4E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,KACXJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gDAA+CC,SAAA,EAC5DC,EAAAA,EAAAA,KAACE,EAAAA,GAAS,KACVF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UAElCC,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CAACC,IAAE,EAAAL,UACVF,EAAAA,EAAAA,MAACQ,EAAAA,SAAQ,CAACC,UAAUN,EAAAA,EAAAA,KAACO,EAAAA,GAAQ,CAACC,MAAM,YAAaT,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wEAEJC,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACX,UAAU,OAAMC,UACpBC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAI,EAAEZ,UACVC,EAAAA,EAAAA,KAACY,EAAAA,GAAU,CAACC,YAAY,oCAAW,aAAW,cAIlDb,EAAAA,EAAAA,KAACc,EAAAA,GAAS,CACR1H,QAASA,EACT2H,KAAM5F,EACN6F,aAAW,EACXC,YAAU,EACVC,MAAM,YACNC,gBAAiBnF,EACpBoF,mBAAmBpB,EAAAA,EAAAA,KAACO,EAAAA,GAAQ,IACzBxG,aAAcA,YAM5BiG,EAAAA,EAAAA,KAACqB,EAAAA,GAAS,SAIlB,C","sources":["pages/Notifications.js"],"sourcesContent":["import React, { Suspense, useEffect, useState } from 'react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport { \n  CContainer, \n  CSpinner, \n  CCol,\n  CRow,\n  CFormInput,\n} from '@coreui/react'\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\n\n\n\nconst columns = [\n  {\n      name: 'Дата/время',\n      selector: row => row.date,\n      sortable: true,\n  },\n  {\n      name: 'Название проекта',\n      selector: row => row.title,\n      sortable: true,\n  },\n  {\n      name: 'Заказчик',\n      selector: row => row.receiverId,\n      sortable: true,\n  },\n  {\n      name: 'Менеджер',\n      selector: row => row.managerId,\n      sortable: true,\n  },\n  {\n      name: 'Адрес',\n      selector: row => row.address,\n  },\n  {\n      name: 'Контакты',\n      selector: row => row.contacts,\n      sortable: true,\n  },\n];\n\n//  Internally, customStyles will deep merges your customStyles with the default styling.\nconst customStyles = {\n  rows: {\n      style: {\n          //minHeight: '72px', // override the row height\n      },\n  },\n  headCells: {\n      style: {\n          fontSize: '16px',\n          //paddingLeft: '8px', // override the cell padding for head cells\n          //paddingRight: '8px',\n      },\n  },\n  cells: {\n      style: {\n          //paddingLeft: '8px', // override the cell padding for data cells\n          //paddingRight: '8px',\n      },\n  },\n};\n\ncreateTheme('solarized', {\n  text: {\n    primary: '#fff',\n    secondary: '#2aa198',\n  },\n  background: {\n    default: '#131c21',\n  },\n  context: {\n    background: '#cb4b16',\n    text: '#FFFFFF',\n  },\n  divider: {\n    default: '#ffffff13',\n  },\n  action: {\n    button: 'rgba(0,0,0,.54)',\n    hover: 'rgba(0,0,0,.08)',\n    disabled: 'rgba(0,0,0,.12)',\n  },\n}, 'dark');\n\nconst Notifications = () => {\n\n  const { projects: notifications } = useUsersContext();\n  const { managers: zakazchiki } = useUsersContext();\n  const { companys: comps } = useUsersContext();\n  const { setNewProject } = useUsersContext();\n\n  const [projects, setProjects] = useState([]); \n  const [pending, setPending] = useState(true); \n\n  \n\n  //get Projects\n  useEffect(() => {\n    const arrProjects = []\n\n    setNewProject(false)\n\n    const fetchData = async () => {\n      console.log(\"companys: \", comps)\n      console.log(\"managers: \", zakazchiki)\n      console.log(\"notifications: \", notifications)\n\n      notifications.map(async (project) => {\n\n        const manager = [...zakazchiki];\n        let userIndex2 = zakazchiki.findIndex((man) => man.id === project.managerId);  \n        const userObject2 = manager[userIndex2];\n        const managerName = userObject2?.fio ? userObject2.fio : ''\n        const managerPhone = userObject2?.phone\n        \n        let userObject = comps.find((company) => company.id === project.companyId);  \n        const companyName = userObject?.title\n\n        const d = new Date(project.createdAt);\n\t\t\t\tconst year = d.getFullYear();\n\t\t\t\tconst month = String(d.getMonth()+1).padStart(2, \"0\");\n\t\t\t\tconst day = String(d.getDate()).padStart(2, \"0\");\n\t\t\t\tconst chas = d.getHours();\n\t\t\t\tconst minut = String(d.getMinutes()).padStart(2, \"0\");\n\t\t\t\tconst newDateMessage = `${day}.${month}.${year} ${chas}:${minut}`\n\n        const newProject = {\n          date: newDateMessage,\n          title: project.name,\n          receiverId: companyName,\n          managerId: managerName,\n          address: project.geo,\n          contacts: managerPhone,\n\t\t\t\t}\n        arrProjects.push(newProject)\n      })\n\n      setProjects(arrProjects) \n\n      setPending(false);\n    }\n\n    fetchData();\n    \n  },[notifications])\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n                    <h2>Уведомления</h2>\n                    \n                    <CRow className=\"mb-3\">\n                      <CCol sm={3} >\n                        <CFormInput placeholder=\"Поиск...\" aria-label=\"City\"/>\n                      </CCol>\n                    </CRow>\n\n                    <DataTable\n                      columns={columns}\n                      data={projects}\n                      fixedHeader\n                      pagination\n                      theme=\"solarized\"\n                      progressPending={pending}\n\t\t\t                progressComponent={<CSpinner />}\n                      customStyles={customStyles}\n                    />\n                  </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications\n"],"names":["columns","name","selector","row","date","sortable","title","receiverId","managerId","address","contacts","customStyles","rows","style","headCells","fontSize","cells","createTheme","text","primary","secondary","background","default","context","divider","action","button","hover","disabled","notifications","useUsersContext","projects","zakazchiki","managers","comps","companys","setNewProject","_useState","useState","_useState2","_slicedToArray","setProjects","_useState3","_useState4","pending","setPending","useEffect","arrProjects","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","console","log","map","_ref2","_callee","project","manager","userIndex2","userObject2","managerName","managerPhone","userObject","companyName","d","year","month","day","chas","minut","newDateMessage","newProject","_context","_toConsumableArray","findIndex","man","id","fio","phone","find","company","companyId","Date","createdAt","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","concat","geo","push","stop","_x","apply","arguments","_jsxs","className","children","_jsx","AppSidebar","AppHeader","CContainer","lg","Suspense","fallback","CSpinner","color","CRow","CCol","sm","CFormInput","placeholder","DataTable","data","fixedHeader","pagination","theme","progressPending","progressComponent","AppFooter"],"sourceRoot":""}