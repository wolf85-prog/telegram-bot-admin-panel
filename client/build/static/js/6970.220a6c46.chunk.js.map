{"version":3,"file":"static/js/6970.220a6c46.chunk.js","mappings":"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","sources":["assets/images/arrowDown.svg","pages/Workers.js"],"sourcesContent":["var _metadata, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowDown(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 256 256\",\n    enableBackground: \"new 0 0 256 256\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _metadata || (_metadata = /*#__PURE__*/React.createElement(\"metadata\", null, \" Svg Vector Icons : http://www.onlinewebfonts.com/icon \")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"M128,10C62.9,10,10,62.9,10,128c0,65.1,52.9,118,118,118c65.1,0,118-52.9,118-118C246,62.9,193.1,10,128,10z M173.8,148.4l-37,31.4c-2.5,2.1-5.6,3.2-8.7,3.2s-6.2-1.1-8.7-3.2l-37-31.4c-5.7-4.8-6.4-13.3-1.5-19c4.8-5.7,13.3-6.4,19-1.5l14.9,12.6V86.4c0-7.4,6-13.5,13.5-13.5s13.5,6,13.5,13.5v54.2l14.9-12.6c5.7-4.8,14.2-4.1,19,1.5C180.1,135.1,179.4,143.6,173.8,148.4z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowDown);\nexport default __webpack_public_path__ + \"static/media/arrowDown.de82dd32eecdb5b4cb2e3b8d4d1e1b89.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Suspense, useEffect, useState } from 'react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport { \n  CContainer, \n  CSpinner, \n  CCol,\n  CRow,\n  CFormInput,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CCard,\n  CCardBody,\n  CCollapse,\n  CButton, \n  CTooltip,\n} from '@coreui/react'\nimport { useUsersContext } from \"../chat-app-new/context/usersContext\";\n\nimport arrowDown from '../assets/images/arrowDown.svg'\n\nimport { getAllPretendent, getAllPretendentCount, getWorkers, getWorkersNotion100, getWorkersNotion, getWorkerNotionId} from './../http/workerAPI'\n\nimport {getProjects, newCountMessagePretendent} from './../http/adminAPI'\n\n\n//Workers.js\nconst Workers = () => {\n\n  const { setCountPretendent, pretendents, setPretendents } = useUsersContext();\n\n  const [projects, setProjects] = useState([]); \n  const [spec, setSpec] = useState([]); \n\n  const [pending, setPending] = useState(true);  \n\n  const [loading, setLoading]= useState(true);\n\n  const [showTable, setShowTable] = useState([])\n  const [showComment, setShowComment] = useState([])\n\n  const [text, setText]= useState(\"\");\n\n\n  //поиск\n  // useEffect(() => {\n\t// \tconst filteredData = pretendents.filter(user=> (user.project + user.workerFamily + user.workerName)?.replace(/[её]/g, '(е|ё)').toLowerCase().includes(text.replace(/[её]/g, '(е|ё)').toLowerCase()));\n  //   setSpec(text === '' ? pretendents : filteredData) \n  // }, [text]);\n\n\n\n  //get Contacts\n  useEffect(() => {\n    const fetchData = async() => {\n      console.log(\"workers-pretendent: \", pretendents)\n      setSpec(pretendents); \n      setLoading(false)\n      //setCountPretendent(0)\n    }\n    fetchData()\n  }, [pretendents])\n\n\n  //-----------------------------------------------------------------------------------------\n  //\t\t\tget pretendents\n  //-----------------------------------------------------------------------------------------\n  useEffect(async() => {\n    const arrWorkers = []\n\n    setCountPretendent(0)\n    //await newCountMessagePretendent(0)\n\n    const fetchData = async () => {\n\n      let res = await getAllPretendentCount(20, 0) //getAllPretendent();\n      console.log(\"pretendents workers: \", res)\n\n      let workers = await getWorkers()\n      //console.log(\"workers context: \", workers)\n\n      let projects = await getProjects();\n      //console.log(\"projects workers: \", projects)\n\n      res.map(async (worker, i) => {\n\n        let userObject = projects.find((proj) => proj.id === worker.projectId);  \n        const projectName = userObject?.title\n\n        let workerObject = workers.find((item) => item.chatId === worker.receiverId);  \n        const workerName = workerObject?.userfamily + \" \"+ workerObject?.username\n\n        const worklist = workerObject?.worklist ? JSON.parse(workerObject?.worklist) : ''\n        const rang = workerObject?.rank ? workerObject?.rank : ''\n        const comment = workerObject?.comment ? workerObject?.comment : ''\n        const phone = workerObject?.phone\n\n        const d = new Date(worker.createdAt).getTime() //+ 10800000 //Текущая дата:  + 3 часа)\n        const d2 = new Date(d)\n\n        const month = String(d2.getMonth()+1).padStart(2, \"0\");\n        const day = String(d2.getDate()).padStart(2, \"0\");\n        const chas = d2.getHours();\n        const min = String(d2.getMinutes()).padStart(2, \"0\");\n        \n        const newDate = `${day}.${month} ${chas}:${min}`;\n\n      \n        //worklist\n        const newWorker = {\n          workerId: worker.workerId,\n          date: newDate, \n          projectId: worker.projectId,\n          project: projectName,\n          workerFamily: workerObject?.userfamily,\n          workerName: workerObject?.username,\n          worklist: worklist, \n          rang: rang, \n          comment: comment, \n          phone: phone, \n          accept: worker.accept,\n        }\n        arrWorkers.push(newWorker)\n\n        setSpec(arrWorkers) \n        setPretendents(arrWorkers)\n      })  \n      setLoading(false)\n    }\n\n    fetchData();\n    \n  },[])\n\n  //Посмотреть\n  const handleClick = (ind) => {\n    console.log(ind, showTable[ind])\n\n    setShowTable(prevShownTable => ({\n        ...prevShownTable,\n        [ind]: !prevShownTable[ind]\n      }));\n  }\n\n  const handleClickCom = (ind) => {\n\n    setShowComment(prevShownComment => ({\n        ...prevShownComment,\n        [ind]: !prevShownComment[ind]\n      }));\n  }\n\n  const clickNext = async() => {\n\n    //1 все рассылки\n\t\tlet response = await getAllPretendentCount(20, pretendents.length) //getAllPretendent();\n    console.log(\"pretendent size: \", response.length)\n\n    const arrayPretendent = []\n\t\t\t   \n\n    console.log(\"Всего сейчас: \", response.length)\n\t\t\t\n    // setPretendents(response)\t\n    // console.log(\"Ещё: \", response.length)\n  }\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n                    {/* <h2>Претенденты</h2> */}\n                    \n                    <CRow className=\"mb-3\">\n                      <CCol sm={3} >\n                        <CFormInput placeholder=\"Поиск...\" onChange={(e)=>setText(e.target.value)} aria-label=\"spec\"/>\n                      </CCol>\n                    </CRow>\n\n                    <CRow>\n                      <CCol style={{textAlign: 'center'}}>\n                        <CCard className=\"mb-4\"> \n                            <CCardBody>\n                              {loading ? \n                                      \n                                <CSpinner/> :\n\n                                <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                                  <CTableHead className='table-light'>\n                                    <CTableRow>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '200px'}}>Дата</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '320px'}}>Проект</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '370px'}}>ФИО</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Специальность</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>U.L.E.Y</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" >Комментарий</CTableHeaderCell>                         \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '250px'}}>Телефон</CTableHeaderCell>\n                                    </CTableRow>\n                                  </CTableHead>\n                                  <CTableBody>                                  \n                                    {spec.map((item, index) => (\n                                      <CTableRow v-for=\"item in tableItems\" key={index}>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.accept && \"red\"}}>\n                                          {item.date}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.accept && \"red\"}}>\n                                          <CTooltip\n                                              content={item.projectId}\n                                              placement=\"top\"\n                                            >\n                                              <div>{item.project}</div>\n                                          </CTooltip>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 || item.accept ? 'red' : ''}}>\n                                          <CTooltip\n                                            content={item.workerId}\n                                            placement=\"top\"\n                                          > \n                                            <div>{item.workerFamily + \" \" + item.workerName}</div>\n                                          </CTooltip>\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{fontSize: '13px', textAlign: 'left'}}>\n                                          <div onClick={()=>handleClick(index)} style={{cursor: 'pointer'}}>{!showTable[index] ? 'Посмотреть' : <br/>}</div>\n                                          <CCollapse visible={showTable[index]}>\n                                            <table>\n                                              {item.worklist ? \n                                              (item.worklist).map((spec, index)=>( \n                                                  <tr key={index}>\n                                                    <td>- {spec.spec}</td>\n                                                  </tr>          \n                                              ))\n                                              :\"\"\n                                              }\n                                            </table>\n                                          </CCollapse>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.accept && 'red'}}>\n                                          {item.rang}\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{fontSize: '13px', textAlign: 'left'}}>\n                                          <div onClick={()=>handleClickCom(index)} style={{cursor: 'pointer'}}>{!showComment[index] ? (item.comment ? 'Посмотреть' : '') : <br/>}</div>\n                                          <CCollapse visible={showComment[index]}>\n                                            {item.comment ? item.comment : <></>}\n                                          </CCollapse>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.accept && \"red\"}}>\n                                          <div>{item.phone}</div>\n                                        </CTableDataCell>\n                                      </CTableRow>\n                                      ))\n                                    }\n                                </CTableBody>                   \n                                </CTable>\n                              }\n\n                              <div style={{display: 'flex', justifyContent: 'center' }}>\n                                <img src={arrowDown} alt='' onClick={()=>clickNext()} style={{width: '50px', marginTop: '15px', cursor: 'pointer'}}></img>\n                              </div> \n                            </CCardBody>\n                          </CCard>\n                        </CCol>\n                    </CRow>\n                  </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Workers\n"],"names":["_useUsersContext","useUsersContext","setCountPretendent","pretendents","setPretendents","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","spec","setSpec","_useState5","_useState6","_useState7","_useState8","loading","setLoading","_useState9","_useState10","showTable","setShowTable","_useState11","_useState12","showComment","setShowComment","_useState13","_useState14","setText","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","stop","apply","arguments","_callee4","arrWorkers","_context4","_ref3","_callee3","res","workers","projects","_context3","getAllPretendentCount","sent","getWorkers","getProjects","map","_ref4","_callee2","worker","i","userObject","projectName","workerObject","worklist","rang","comment","phone","d","d2","month","day","chas","min","newDate","newWorker","_context2","find","proj","id","projectId","title","item","chatId","receiverId","userfamily","username","JSON","parse","rank","Date","createdAt","getTime","String","getMonth","padStart","getDate","getHours","getMinutes","concat","workerId","date","project","workerFamily","workerName","accept","push","_x","_x2","clickNext","_ref5","_callee5","response","_context5","length","_jsxs","className","children","_jsx","AppSidebar","AppHeader","CContainer","lg","Suspense","fallback","CSpinner","color","CRow","CCol","sm","CFormInput","placeholder","onChange","e","target","value","style","textAlign","CCard","CCardBody","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","width","CTableBody","index","CTableDataCell","CTooltip","content","placement","dateborn","fontSize","onClick","ind","prevShownTable","_objectSpread","_defineProperty","cursor","CCollapse","visible","prevShownComment","_Fragment","display","justifyContent","src","arrowDown","alt","marginTop","AppFooter"],"sourceRoot":""}