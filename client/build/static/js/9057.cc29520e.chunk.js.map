{"version":3,"file":"static/js/9057.cc29520e.chunk.js","mappings":"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","sources":["pages/SoundsNotif.js"],"sourcesContent":["import React, { Suspense, useEffect, useState, useContext } from 'react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\nimport { getSoundNotif } from './../http/adminAPI.js'\n\nimport {\n  CContainer, \n  CSpinner,\n  CAvatar,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardTitle,\n  CCardText,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CFormInput,\n  CButton,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst SoundsNotif = () => {  \n\n  const { soundsNotif } = useUsersContext();\n\n  const [soundNotif, setSoundNotif] = useState([]); \n\n    //get Contacts\n    useEffect(() => {\n      //const arrClients = []\n  \n      const fetchData = async() => {\n\n        let notifs = await getSoundNotif()\n        console.log(\"notifs: \", notifs) \n\n        const sortedNotif = [...notifs].sort((a, b) => {       \n\t\t\t\t\tvar dateA = a.date, dateB = b.date \n\t\t\t\t\treturn dateB-dateA  //сортировка по убывающей дате  \n\t\t\t\t})\n\n        setSoundNotif(sortedNotif)  \n\n      }\n      \n      fetchData();\n      \n    }, []);\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n                  <h2>Звуковые уведомления</h2>\n\n                  <CCard>\n                    <CCardHeader>Журнал</CCardHeader>\n                    <CCardBody>\n                      {/* <CCardTitle>Special title treatment</CCardTitle> */}\n                      <CTable>\n                        <CTableHead>\n                          <CTableRow>\n                            <CTableHeaderCell scope=\"col\">№</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Дата</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Проект</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Оповещение</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Статус</CTableHeaderCell>\n                          </CTableRow>\n                        </CTableHead>\n                        <CTableBody>\n                        {soundNotif.map((item, index) => (\n                          <CTableRow key={index}>\n                            <CTableHeaderCell scope=\"row\">{index+1}</CTableHeaderCell>\n                            <CTableDataCell>{new Date(parseInt(item.date)).toLocaleDateString()} {new Date(parseInt(item.date)).toLocaleTimeString().split(':')[0]}:{new Date(parseInt(item.date)).toLocaleTimeString().split(':')[1]}</CTableDataCell>\n                            <CTableDataCell>{item.name}</CTableDataCell>\n                            <CTableDataCell>{item.text}</CTableDataCell>\n                            <CTableDataCell>{item.delivered ? \"Получено\" : \"Запланировано\"}</CTableDataCell>\n                          </CTableRow>\n                         ))\n                        } \n                        </CTableBody>\n                      </CTable>\n                    </CCardBody>\n                  </CCard>\n                  \n                  {soundsNotif.map((item, index) => (\n                      <p key={index}>- {item}</p>\n                    ))\n                  }\n                  \n                </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default SoundsNotif\n"],"names":["SoundsNotif","soundsNotif","useUsersContext","soundNotif","setSoundNotif","useState","useEffect","async","notifs","getSoundNotif","console","log","sortedNotif","sort","a","b","dateA","date","fetchData","_jsxs","className","children","_jsx","AppSidebar","AppHeader","CContainer","lg","Suspense","fallback","CSpinner","color","CCard","CCardHeader","CCardBody","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","map","item","index","CTableDataCell","Date","parseInt","toLocaleDateString","toLocaleTimeString","split","name","text","delivered","AppFooter"],"sourceRoot":""}