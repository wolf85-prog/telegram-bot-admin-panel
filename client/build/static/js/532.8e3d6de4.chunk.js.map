{"version":3,"file":"static/js/532.8e3d6de4.chunk.js","mappings":"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","sources":["chat-app-new/components/Sidebar/Contact.jsx","chat-app-new/components/Sidebar/index.jsx","chat-app-new/pages/Chat/components/EmojiTray.jsx","chat-app-new/pages/Chat/components/useAutosizeTextArea.ts","chat-app-new/pages/Chat/components/ChatInput.jsx","chat-app-new/pages/Chat/components/Header.jsx","chat-app-new/pages/Chat/components/ChatSidebar.jsx","chat-app-new/pages/Chat/components/Search.jsx","chat-app-new/components/Checkbox/index.jsx","chat-app-new/pages/Chat/components/Profile.jsx","chat-app-new/pages/Chat/components/Convo.jsx","chat-app-new/pages/Chat/index.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport Icon from \"./../../components/Icon\";\nimport { Link } from \"react-router-dom\";\nimport formatTime from \"./../../utils/formatTime\";\nimport { useUsersContext } from \"./../../context/usersContext\";\nimport { AccountContext } from '../../../chat-app-new/context/AccountProvider'\nimport avatarDefault from \"./../../assets/images/no-avatar.png\";\n\nconst Contact = ({ contact }) => {\n\t\n\tconst { setPerson } = useContext(AccountContext);\n\tconst host = process.env.REACT_APP_API_URL\n\t\n\t//сделать пользователя непрочитанным\n\tconst { setUserAsUnread, usersOnline, setCountMessage } = useUsersContext();\n\n\tconst status = usersOnline.find(item => item.userId == contact.chatId)\n\n\t//обработка нажатия на пользователя из списка\n    const getUser = async () => {\n        setPerson({\n            name: contact.name, \n            id: contact.chatId, \n\t\t\tavatar: contact.avatar\n        });\n\t\tsetUserAsUnread(contact.chatId)\n\t\tsetCountMessage(0)\n    }\n\t\n\tconst getLastMessage = () => {\n\t\t\tconst messageDates = Object.keys(contact.messages);\t\n\t\t\tlet recentMessageDate\n\t\t\t\n\t\t\tmessageDates.length !== 0 \t\n\t\t\t? recentMessageDate = messageDates[messageDates.length - 1]\n\t\t\t: recentMessageDate = '2000-01-01'\n\n\t\t\tlet messages = [];\n\t\t\tif (JSON.stringify(contact.messages) !== '{}') {\n\t\t\t\tmessages = [...contact.messages[recentMessageDate]];\n\t\t\t}\t\n\n\t\t\tif (messages.length) {\n\t\t\t\tconst lastMessage = messages.pop();\n\t\t\t\treturn lastMessage;\n\t\t\t} \n\t\t\tconst lastMessage = '';\n\t\t\treturn lastMessage;\n\t};\n\n\tconst lastMessage = getLastMessage(contact);\n\n\treturn (\n\t\t<Link\n\t\t\tclassName=\"sidebar-contact\"\n\t\t\tonClick={() => getUser()}\n\t\t>\n\t\t\t{/* <div className=\"sidebar-contact__status-wrapper\">\n\t\t\t\t{status \n\t\t\t\t? <img\n\t\t\t\t\tsrc={Status}\n\t\t\t\t\talt=\"status\" \n\t\t\t\t\tclassName=\"status-adm\"\n\t\t\t\t/> \n\t\t\t\t: ''}\n\t\t\t</div> */}\n\t\t\t<div className=\"sidebar-contact__avatar-wrapper\">\n\t\t\t\t{\n\t\t\t\t\tcontact.avatar\n\t\t\t\t\t? <img src={`${host}${contact.avatar}`} alt='' className=\"avatar-adm\" />\n\t\t\t\t\t: <img src={avatarDefault} alt='' className=\"avatar-adm\" />\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div className=\"sidebar-contact__content\">\n\t\t\t\t<div className=\"sidebar-contact__top-content\">\n\t\t\t\t\t<h2 className=\"sidebar-contact__name\"> {contact.name}</h2>\n\t\t\t\t\t<span className=\"sidebar-contact__time\">\n\t\t\t\t\t\t{lastMessage === ''  ? '' : formatTime(lastMessage.time)}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"sidebar-contact__bottom-content\">\n\t\t\t\t\t<p className=\"sidebar-contact__message-wrapper\">\n\t\t\t\t\t\t{lastMessage.status && (\n\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\tid={\n\t\t\t\t\t\t\t\t\tlastMessage?.status === \"sent\" ? \"singleTick\" : \"doubleTick\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taria-label={lastMessage?.status}\n\t\t\t\t\t\t\t\tclassName={`sidebar-contact__message-icon ${\n\t\t\t\t\t\t\t\t\tlastMessage?.status === \"read\"\n\t\t\t\t\t\t\t\t\t\t? \"sidebar-contact__message-icon--blue\"\n\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName={`sidebar-contact__message ${\n\t\t\t\t\t\t\t\t!!contact.unread ? \"sidebar-contact__message--unread\" : \"\"\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{contact.typing ? <i> печатает...</i> : lastMessage?.content}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"sidebar-contact__icons\">\n\t\t\t\t\t\t{contact.pinned && (\n\t\t\t\t\t\t\t<Icon id=\"pinned\" className=\"sidebar-contact__icon\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!!contact.unread && (\n\t\t\t\t\t\t\t<span className=\"sidebar-contact__unread\">{contact.unread}</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<button aria-label=\"sidebar-contact__btn\">\n\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\tid=\"downArrow\"\n\t\t\t\t\t\t\t\tclassName=\"sidebar-contact__icon sidebar-contact__icon--dropdown\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Link>\n\t);\n};\n\nexport default Contact;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles/main.css\";\nimport avatar from \"./../../assets/images/logo_chat_admin.png\";\nimport Icon from \"./../../components/Icon\";\nimport Contact from \"./Contact\";\nimport OptionsBtn from \"./../../components/OptionsButton\";\nimport { useUsersContext } from \"./../../context/usersContext\";\nimport { Link } from \"react-router-dom\";\n\nconst Sidebar = () => {\n\tconst { users: clients } = useUsersContext();\n    const chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID \n\tconst [contacts, setContacts]= useState([]);\n\tconst [text, setText]= useState(\"\");\n\n\tconst navigate = useNavigate()\n\n\tuseEffect(() => {\n\t\t//сортировка\n\t\tconst userSort = [...clients].sort((a, b) => {       \n\t\t\tvar dateA = new Date(a.date), dateB = new Date(b.date) \n\t\t\treturn dateB-dateA  //сортировка по убывающей дате  \n\t\t})\n\t\tsetContacts(userSort)\n\t},[clients])\n\t\n\tuseEffect(() => {\n\t\tconst filteredData = clients.filter(user=> (user.name).toLowerCase().includes(text.toLowerCase()));\n        setContacts(filteredData);      \n    }, [text]);\n\n\n\tconst onSelected = (index) => {\n\t\tswitch(index) {\n\t\t\tcase 0: //данные о контакте\n\t\t\t\tconsole.log('Профиль')\n\t\t\t\tbreak\n\t\t  \n\t\t\tcase 1: \n\t\t\t\tconsole.log('1')\n\t\t\t\tbreak\n\t\t\t\n\t\t\tcase 4: \n\t\t\t\tnavigate(\"/dashboard\");\n\t\t\t\tbreak\n\t\t  \n\t\t\tdefault:\n\t\t\t\tconsole.log(\"В разработке\")\n\t\t\t\tbreak\n\t\t  }\n\t};\n\n\treturn (\n\t\t<aside className=\"sidebarB\">\n\t\t\t{/* Header */}\n\t\t\t<header className=\"headerB\">\n\t\t\t\t<div className=\"sidebar__avatar-wrapper\">\n\t\t\t\t\t<img src={avatar} alt='U.L.E.Y' className=\"avatar-adm\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"sidebar__actions\">\n\t\t\t\t\t<OptionsBtn\n\t\t\t\t\t\tclassName=\"sidebar__action\"\n\t\t\t\t\t\tariaLabel=\"Menu\"\n\t\t\t\t\t\ticonId=\"menu\"\n\t\t\t\t\t\ticonClassName=\"sidebar__action-icon\"\n\t\t\t\t\t\tonSelected={onSelected}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\"Профиль\",\n\t\t\t\t\t\t\t// \"Архив\",\n\t\t\t\t\t\t\t// \"Избранные сообщения\",\n\t\t\t\t\t\t\t// \"Настройки\",\n\t\t\t\t\t\t\t// \"Вернуться в панель управления\",\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t\n\t\t\t{/* Search */}\n\t\t\t<div className=\"search-wrapper\">\n\t\t\t\t<div className=\"search-icons\">\n\t\t\t\t\t<Icon id=\"search\" className=\"search-icon\" />\n\t\t\t\t\t<button className=\"search__back-btn\">\n\t\t\t\t\t\t<Icon id=\"back\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<input \n\t\t\t\t\tclassName=\"search\" \n\t\t\t\t\tplaceholder=\"Поиск заказчика\" \n\t\t\t\t\tonChange={(e)=>setText(e.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t\n\t\t\t{/* Conversations */}\n\t\t\t<div className=\"sidebar__contacts\">\n\t\t\t\t{contacts.map((contact) => (\n\t\t\t\t\tcontact.chatId !== chatAdminId &&\n                    <>   \n\t\t\t\t\t\t<Contact contact={contact} />\n\t\t\t\t\t</>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</aside>\n\t);\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport Icon from \"./../../../components/Icon\";\n\nconst emojiTabs = [\n\t{ icon: \"recent\", label: \"Recent emojis\", active: true },\n\t{ icon: \"emojiPeople\", label: \"People emojis\", active: false },\n\t{ icon: \"emojiNature\", label: \"Nature emojis\", active: false },\n\t{ icon: \"emojiFood\", label: \"Food emojis\", active: false },\n\t{ icon: \"emojiActivity\", label: \"Activity emojis\", active: false },\n\t{ icon: \"emojiTravel\", label: \"Travel emojis\", active: false },\n\t{ icon: \"emojiObjects\", label: \"Object emojis\", active: false },\n\t{ icon: \"emojiSymbols\", label: \"Symbol emojis\", active: false },\n\t{ icon: \"emojiFlags\", label: \"Flag emojis\", active: false },\n];\n\nconst EmojiTray = ({ showEmojis, newMessage, setNewMessage }) => {\n\tconst addEmoji = (emoji) => {\n\t\tsetNewMessage(newMessage + emoji);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`emojis__wrapper ${\n\t\t\t\tshowEmojis ? \"emojis__wrapper--active\" : \"\"\n\t\t\t}`}\n\t\t>\n\t\t\t<div className=\"emojis__tabs\">\n\t\t\t\t{emojiTabs.map((tab) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`emojis__tab ${tab.active ? \"emojis__tab--active\" : \"\"}`}\n\t\t\t\t\t\tkey={tab.label}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button aria-label={tab.label} key={tab.icon}>\n\t\t\t\t\t\t\t<Icon id={tab.icon} className=\"emojis__tab-icon\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"emojis__content\">\n\t\t\t\t<input className=\"emojis__search\" placeholder=\"Search Emoji\" />\n\t\t\t\t<h4 className=\"emojis__label\"> Smileys {\"&\"} People </h4>\n\t\t\t\t<div className=\"emojis__grid\">\n\t\t\t\t\t{new Array(6).fill(null).map((_, rowIndex) =>\n\t\t\t\t\t\tnew Array(11).fill(null).map((_, colIndex) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\trole=\"img\"\n\t\t\t\t\t\t\t\taria-label=\"emoji\"\n\t\t\t\t\t\t\t\t// onClick={() => addEmoji(\"emoji\")}\n\t\t\t\t\t\t\t\tkey={`${rowIndex}-${colIndex}`}\n\t\t\t\t\t\t\t\tclassName=\"emoji emojis__emoji\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundPositionX: -3 - 44.2 * colIndex,\n\t\t\t\t\t\t\t\t\tbackgroundPositionY: -6 - 52 * rowIndex,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t))\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<h4 className=\"emojis__label\"> Animals {\"&\"} Nature </h4>\n\t\t\t\t<div className=\"emojis__grid\">\n\t\t\t\t\t{new Array(6).fill(null).map((_, rowIndex) =>\n\t\t\t\t\t\tnew Array(11).fill(null).map((_, colIndex) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\trole=\"img\"\n\t\t\t\t\t\t\t\taria-label=\"emoji\"\n\t\t\t\t\t\t\t\t// onClick={() => addEmoji(\"emoji\")}\n\t\t\t\t\t\t\t\tkey={`${rowIndex}-${colIndex}`}\n\t\t\t\t\t\t\t\tclassName=\"emoji emojis__emoji\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundPositionX: -3 - 44.2 * colIndex,\n\t\t\t\t\t\t\t\t\tbackgroundPositionY: -6 - 52 * rowIndex,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t))\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default EmojiTray;\n","import { useEffect } from \"react\";\n\n// Updates the height of a <textarea> when the value changes.\nconst useAutosizeTextArea = (\n  textAreaRef: HTMLTextAreaElement | null,\n  value: string\n) => {\n  useEffect(() => {\n    if (textAreaRef) {\n      \n        // Нам нужно на мгновение сбросить высоту, чтобы получить правильное значение scrollHeight для текстовой области.\n      textAreaRef.style.height = \"0px\";\n      const scrollHeight = textAreaRef.scrollHeight - 40;\n\n      // Затем мы устанавливаем высоту напрямую, вне цикла рендеринга.\n      // Попытка установить это с помощью состояния или ссылки приведет к неправильному значению.\n      textAreaRef.style.height = scrollHeight + \"px\";\n    }\n  }, [textAreaRef, value]);\n};\n\nexport default useAutosizeTextArea;","import React, {useRef} from \"react\";\nimport Icon from \"./../../../components/Icon\";\n\nimport useAutosizeTextArea from \"./useAutosizeTextArea.ts\";\n\nconst attachButtons = [\n\t// { icon: \"attachContacts\", label: \"Choose contact\", click: \"contact\" },\n\t{ icon: \"attachDocument\", label: \"Choose document\", click: \"doc\" },\n\t{ icon: \"attachImage\", label: \"Choose image\", click: \"image\" },\n];\n\nconst ChatInput = ({\n\tshowAttach,\n\tsetShowAttach,\n\tshowEmojis,\n\tsetShowEmojis,\n\tmess,\n\tsetMess,\n\tsubmitNewMessage,\n\tonFileChange,\n}) => {\n\n\tconst textAreaRef = useRef(null);\n\tuseAutosizeTextArea(textAreaRef.current, mess);\n\n\tconst handleChange = (e) => {\n\t\tconsole.log(e.target.value)\n\t\tsetMess(e.target.value)\n\t};\n\n\tconst detectEnterPress = (e) => {\n\t\tif ((e.key === \"Enter\" && !e.shiftKey) || (e.keyCode === 13 && !e.shiftKey) ) {\n\t\t\tsubmitNewMessage();\n\t\t} \n\t};\n\n\treturn (\n\t\t<div className=\"chat__input-wrapper\">\n\t\t\t{showEmojis && (\n\t\t\t\t<button aria-label=\"Close emojis\" onClick={() => setShowEmojis(false)}>\n\t\t\t\t\t<Icon id=\"cancel\" className=\"chat__input-icon\" />\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<button aria-label=\"Emojis\" onClick={() => setShowEmojis(true)}>\n\t\t\t\t<Icon\n\t\t\t\t\tid=\"smiley\"\n\t\t\t\t\tclassName={`chat__input-icon ${\n\t\t\t\t\t\tshowEmojis ? \"chat__input-icon--highlight\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t/>\n\t\t\t</button>\n\t\t\t{showEmojis && (\n\t\t\t\t<>\n\t\t\t\t\t<button aria-label=\"Choose GIF\">\n\t\t\t\t\t\t<Icon id=\"gif\" className=\"chat__input-icon\" />\n\t\t\t\t\t</button>\n\t\t\t\t\t<button aria-label=\"Choose sticker\">\n\t\t\t\t\t\t<Icon id=\"sticker\" className=\"chat__input-icon\" />\n\t\t\t\t\t</button>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t<div className=\"pos-rel\">\n\t\t\t\t<button aria-label=\"Attach\" onClick={() => setShowAttach(!showAttach)}>\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tid=\"attach\"\n\t\t\t\t\t\tclassName={`chat__input-icon ${\n\t\t\t\t\t\t\tshowAttach ? \"chat__input-icon--pressed\" : \"\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t/>\n\t\t\t\t</button>\n\n\t\t\t\t<div\n\t\t\t\t\tclassName={`chat__attach ${showAttach ? \"chat__attach--active\" : \"\"}`}\n\t\t\t\t>\n\t\t\t\t\t{attachButtons.map((btn) => (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"chat__attach-btn\"\n\t\t\t\t\t\t\taria-label={btn.label}\n\t\t\t\t\t\t\tkey={btn.label}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<label htmlFor='fileInput'>\n\t\t\t\t\t\t\t\t<Icon id={btn.icon} className=\"chat__attach-icon\" />\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\tid=\"fileInput\"\n\t\t\t\t\t\t\t\tname=\"photo\"\n\t\t\t\t\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\t\t\t\t\tonChange={(e) => onFileChange(e)}\n\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<textarea\n\t\t\t\tclassName=\"chat__input\"\n\t\t\t\tplaceholder=\"Введите сообщение\"\n\t\t\t\tvalue={mess} \n\t\t\t\tonChange={handleChange} \n\t\t\t\tref={textAreaRef}\t\t\t\n\t\t\t\trows={1}\n\t\t\t/>\n\n\t\t\t<button aria-label=\"Send message\" onClick={submitNewMessage}>\n\t\t\t\t<Icon id=\"send\" className=\"chat__input-icon\" />\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default ChatInput;\n","import React from \"react\";\nimport Icon from \"./../../../components/Icon\";\nimport OptionsBtn from \"./../../../components/OptionsButton\";\nimport avatarDefault from \"./../../../assets/images/no-avatar.png\";\n\nconst Header = ({ user, openProfileSidebar, openSearchSidebar }) => {\n\n\tconst host = process.env.REACT_APP_API_URL\n\n\tconst onSelected = (index) => {\n\t\tswitch(index) {\n\t\t\tcase 0: //данные о контакте\n\t\t\t\topenProfileSidebar()\n\t\t\t\tbreak\n\t\t  \n\t\t\tcase 1: \n\t\t\t\tconsole.log('1')\n\t\t\t\tbreak\n\t\t  \n\t\t\tdefault:\n\t\t\t\tconsole.log(\"В разработке\")\n\t\t\t\tbreak\n\t\t  }\n\t};\n\n\treturn (\n\t\t<header className=\"headerB chat__header\">\n\t\t\t<div className=\"chat__avatar-wrapper\" onClick={openProfileSidebar}>\n\t\t\t\t{\n\t\t\t\t\tuser.avatar\n\t\t\t\t\t? <img src={`${host}${user.avatar}`} alt={user?.name} className=\"avatar-adm\" />\n\t\t\t\t\t: <img src={avatarDefault} alt={user?.name} className=\"avatar-adm\" />\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<div className=\"chat__contact-wrapper\" onClick={openProfileSidebar}>\n\t\t\t\t<h2 className=\"chat__contact-name\"> {user?.name}</h2>\n\t\t\t\t<p className=\"chat__contact-desc\">\n\t\t\t\t\t{user.typing ? \"печатает...\" : \"данные контакта\"}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"chat__actions\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"chat__action\"\n\t\t\t\t\taria-label=\"Search\"\n\t\t\t\t\tonClick={openSearchSidebar}\n\t\t\t\t>\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tid=\"search\"\n\t\t\t\t\t\tclassName=\"chat__action-icon chat__action-icon--search\"\n\t\t\t\t\t/>\n\t\t\t\t</button>\n\t\t\t\t<OptionsBtn\n\t\t\t\t\tclassName=\"chat__action\"\n\t\t\t\t\tariaLabel=\"Menu\"\n\t\t\t\t\ticonId=\"menu\"\n\t\t\t\t\ticonClassName=\"chat__action-icon\"\n\t\t\t\t\tonSelected={onSelected}\n\t\t\t\t\toptions={[\n\t\t\t\t\t\t\"Данные о контакте\",\n\t\t\t\t\t\t// \"Выбрать сообщения\",\n\t\t\t\t\t\t// \"Отключить уведомления\",\n\t\t\t\t\t\t\"Очистить переписку\",\n\t\t\t\t\t\t\"Удалить чат\",\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","import React from \"react\";\nimport Icon from \"./../../../components/Icon\";\n\nconst ChatSidebar = ({ active, closeSidebar, heading, children }) => {\n\treturn (\n\t\t<aside className={`chat-sidebar ${active ? \"chat-sidebar--active\" : \"\"}`}>\n\t\t\t<header className=\"header chat-sidebar__header\">\n\t\t\t\t<button onClick={closeSidebar}>\n\t\t\t\t\t<Icon id=\"cancel\" className=\"chat-sidebar__header-icon\" />\n\t\t\t\t</button>\n\t\t\t\t<h2 className=\"chat-sidebar__heading\"> {heading}</h2>\n\t\t\t</header>\n\t\t\t<div className=\"chat-sidebar__content\">{children}</div>\n\t\t</aside>\n\t);\n};\n\nexport default ChatSidebar;\n","import Icon from \"./../../../components/Icon\";\nimport React from \"react\";\n\nconst Search = () => {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"search-wrapper\">\n\t\t\t\t<div className=\"search-icons\">\n\t\t\t\t\t<Icon id=\"search\" className=\"search-icon\" />\n\t\t\t\t\t<button className=\"search__back-btn\">\n\t\t\t\t\t\t<Icon id=\"back\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<input className=\"search\" placeholder=\"Поиск...\" />\n\t\t\t</div>\n\t\t\t<div className=\"chat-sidebar__search-results\">\n\t\t\t\t<p> Поиск сообщений в чате</p>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Search;\n","import Icon from \"./../../components/Icon\";\nimport React from \"react\";\nimport \"./styles.css\";\n\nconst Checkbox = ({ inputProps }) => {\n\treturn (\n\t\t<div className=\"checkbox\">\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tid=\"checkbox\"\n\t\t\t\t{...inputProps}\n\t\t\t\tclassName=\"checkbox__input\"\n\t\t\t/>\n\t\t\t<label htmlFor=\"checkbox\" className=\"checkbox__label\">\n\t\t\t\t<Icon id=\"check\" className=\"checkbox__icon\" />\n\t\t\t</label>\n\t\t</div>\n\t);\n};\n\nexport default Checkbox;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport media from \"./../../../assets/images/placeholder.jpeg\";\nimport Checkbox from \"./../../../components/Checkbox\";\nimport Icon from \"./../../../components/Icon\";\nimport { editContact, uploadFile, editContactAvatar } from './../../../../http/chatAPI';\nimport { useUsersContext } from \"./../../../context/usersContext\";\nimport { AccountContext } from './../../../context/AccountProvider';\nimport defaultAvatar from \"./../../../assets/images/no-avatar.png\";\n\nconst Profile = ({ user }) => {\n\tconst [username, setUsername] = useState(\"\")\n\tconst [form, setForm] = useState(false)\n\tconst { addNewName, addNewAvatar } = useUsersContext();\n\tconst { setPerson } = useContext(AccountContext);\n\tconst [img, setImg] = useState(null)\n\tconst [showEdit, setShowEdit] = useState(false)\n\tconst input = React.useRef();\n\n\tconst host = process.env.REACT_APP_API_URL\n\n\tuseEffect(() => {\n\t\tsetImg(`${host}${user.avatar}`)\n\t}, [user]);\n\t\n\n\t//кнопка Изменить\n\tconst changeUsername = () => {\n\t\tsetUsername(user.name);  \n\t\tsetForm(true)\n\t}\n\t\n\tconst handleChange = (e) => {\n\t\te.preventDefault();\n\t\tsetUsername(e.target.value);\n\t}\n\n\tconst getUser = async () => {\n        setPerson({\n            name: user.name, \n            id: user.chatId, \n\t\t\tavatar: user.avatar\n        });\n    }\n\t\n\t//сохранить новое имя\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconst newName = {\n\t\t\tusername, \n\t\t}\n\t\t//сохранить в БД\n\t\tawait editContact(newName, user.chatId)\n\n\t\t//сохранить в контексте\n\t\taddNewName(user.chatId, username);\n\t\tgetUser()\n\n\t\tsetForm(false)\n\t}\n\n\tconst handleAvatar = async (e) => {\n\t\te.preventDefault();\n\t\tsetImg(e.target.files[0])\n\t\tsetShowEdit(true)\n\t}\n\n\t//сохранить новый аватар\n\tconst sendFile = React.useCallback(async () => {\n\t\ttry {\n\t\t\tconst data = new FormData();\n            data.append(\"photo\", img);\n\n            let response = await uploadFile(data);\n\t\t\t//console.log(\"response: \", response.data)\n\t\t\t//setAvatar(response.data.path)\n\n\t\t\tconst newAvatar = {\n\t\t\t\tavatar: response.data.path, \n\t\t\t}\n\n\t\t\t//сохранить в БД\n\t\t\tawait editContactAvatar(newAvatar, user.chatId)\n\t\t\t\n\t\t\t//сохранить в контексте\n\t\t\taddNewAvatar(user.chatId, response.data.path);\n\n\t\t\t//получить данные из контекста\n\t\t\tgetUser()\n\n\t\t\tsetShowEdit(false)\n\n\t\t} catch (error) {\n\t\t\t\n\t\t}\n\t}, [img])\n\n\treturn (\n\t\t<div className=\"profile\">\n\t\t\t<div className=\"profile__section profile__section--personal\">\n\t\t\t\t<div className=\"profile__avatar-wrapper upload\">\n\t\t\t\t\t{\n\t\t\t\t\t\tuser.avatar\n\t\t\t\t\t\t\t? <img src={`${host}${user.avatar}`} alt={user?.name} className=\"avatar-adm\" />\n\t\t\t\t\t\t\t: <img src={defaultAvatar} alt={user?.name} className=\"avatar-adm\" />\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"round_adm\">\n\t\t\t\t\t\t<input type=\"file\" name=\"photo\" onChange={handleAvatar}/>\n\t\t\t\t\t\t<i className = \"fa fa-camera\" style={{color: '#fff'}}></i>\n\t\t\t\t\t</div>\t\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t{\n\t\t\t\t\tshowEdit \n\t\t\t\t\t? <button className=\"btn_save\" onClick={sendFile}>Сохранить</button>\n\t\t\t\t\t: \"\"\n\t\t\t\t}\n\n\t\t\t\t\n\n\t\t\t\t<p style={{ color: '#d5d5d5'}}>{user.chatId}</p>\n\t\t\t\t{\n\t\t\t\t\tform ? <form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\t\tvalue={username} \n\t\t\t\t\t\t\t\t\tonChange={handleChange} \n\t\t\t\t\t\t\t\t\tref={input}\n        \t\t\t\t\t\t\tonFocus={() => input.current.select()}\n\t\t\t\t\t\t\t\t\tstyle={{borderBottom: '1px solid #0e892e', color: '#d5d5d5'}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"Сохранить\" style={{ color: '#6a6a6a'}} />\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t: <h2 className=\"profile__name\"> {user.name} </h2> \n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\t!form ? <span onClick={changeUsername} style={{cursor: 'pointer', color: '#6a6a6a'}}>Редактировать</span>\n\t\t\t\t\t: \"\"\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<div className=\"profile__section profile__section--media\">\n\t\t\t\t<div className=\"sb profile__heading-wrapper\">\n\t\t\t\t\t<h2 className=\"profile__heading\"> Медиа, ссылки и документы </h2>\n\t\t\t\t\t<button>\n\t\t\t\t\t\t<Icon id=\"rightArrow\" className=\"profile__heading-icon\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"profile__media-wrapper\">\n\t\t\t\t\t<img src={media} alt=\"media\" className=\"profile__media\" />\n\t\t\t\t\t<img src={media} alt=\"media\" className=\"profile__media\" />\n\t\t\t\t\t<img src={media} alt=\"media\" className=\"profile__media\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<ul className=\"profile__section profile__section--actions\">\n\t\t\t\t<li className=\"profile__action\">\n\t\t\t\t\t<p className=\"profile__action-left\">\n\t\t\t\t\t\t<span className=\"profile__action-text profile__action-text--top\">\n\t\t\t\t\t\t\tОтключить уведомления\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"profile__action-right\">\n\t\t\t\t\t\t<Checkbox />\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"profile__action\">\n\t\t\t\t\t<p className=\"profile__action-left\">\n\t\t\t\t\t\t<span className=\"profile__action-text profile__action-text--top\">\n\t\t\t\t\t\t\tОтмеченные сообщения\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<button className=\"profile__action-right\">\n\t\t\t\t\t\t<Icon id=\"rightArrow\" className=\"profile__heading-icon\" />\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"profile__action\">\n\t\t\t\t\t<p className=\"profile__action-left\">\n\t\t\t\t\t\t<span className=\"profile__action-text profile__action-text--top\">\n\t\t\t\t\t\t\tИсчезающие сообщения\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"profile__action-text profile__action-text--bottom\">\n\t\t\t\t\t\t\tOff\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<button className=\"profile__action-right\">\n\t\t\t\t\t\t<Icon id=\"rightArrow\" className=\"profile__heading-icon\" />{\" \"}\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t</ul>\n\n\t\t\t<div className=\"profile__section profile__section--about\">\n\t\t\t\t<div className=\"sb profile__heading-wrapper\">\n\t\t\t\t\t<h2 className=\"profile__heading\"> О компании и номер телефона </h2>\n\t\t\t\t</div>\n\t\t\t\t<ul>\n\t\t\t\t\t<li className=\"profile__about-item\">\n\t\t\t\t\t\tНесколько слов о компании...\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"profile__about-item\">+7 123-12-12</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\n\n\t\t\t<div className=\"profile__section profile__section--danger\">\n\t\t\t\t<Icon id=\"block\" className=\"profile__danger-icon\" />\n\t\t\t\t<p className=\"profile__danger-text\"> Заблокировать </p>\n\t\t\t</div>\n\n\t\t\t<div className=\"profile__section profile__section--danger\">\n\t\t\t\t<Icon id=\"thumbsDown\" className=\"profile__danger-icon\" />\n\t\t\t\t<p className=\"profile__danger-text\"> Сообщить о контакте </p>\n\t\t\t</div>\n\n\t\t\t<div className=\"profile__section profile__section--danger\">\n\t\t\t\t<Icon id=\"delete\" className=\"profile__danger-icon\" />\n\t\t\t\t<p className=\"profile__danger-text\"> Удалить чат </p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Profile;\n","import Icon from \"./../../../components/Icon\";\nimport React, { useContext, useState, useRef } from \"react\";\n// import pdf from \"./../../../assets/images/PDFicon.png\";\nimport formatTime from \"./../../../utils/formatTime\";\nimport { AccountContext } from './../../../context/AccountProvider';\nimport { useUsersContext } from \"./../../../context/usersContext\";\nimport { $host } from './../../../../http/index'\nimport { delMessage } from \"src/http/chatAPI\";\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nconst Convo = ({ lastMsgRef, messages: allMessages }) => {\n\tconst { person } = useContext(AccountContext);\n\tconst dates = Object.keys(allMessages);  //['01/01/2023', 'Сегодня']\n\tconst chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID \n\tconst token = process.env.REACT_APP_TELEGRAM_API_TOKEN\n\n\tconst msgRef = useRef([]);\n\n\tlet replyMessage;\n\t\n\tconst { delMessageContext } = useUsersContext();\n\n\t//прокрутка\n\tconst scrollToMsg = (id) => {\n\t\tconsole.log(id)\n\t\t//alert(id)\n\t\tconsole.log(msgRef.current)\n\t\tmsgRef.current[id].scrollIntoView({transition: \"smooth\"});\n\t};\n\n\tconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n\t\t<button\n\t\t\taria-label=\"Message options\"\n\t\t\tclassName=\"chat__msg-options\"\n\t\t\tref={ref}\n\t\t\tonClick={(e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tonClick(e);\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t\t<Icon id=\"downArrow\" className=\"chat__msg-options-icon\" />\t\t\t\t\t\t\t\t\t\t\t\n\t\t</button>\n\t));\n\n\tCustomToggle.displayName = \"Search\";\n\n\tconst CustomMenu = React.forwardRef(\n\t\t({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n\t\t  const [value, setValue] = useState('');\n\t  \n\t\t  return (\n\t\t\t<div\n\t\t\t  ref={ref}\n\t\t\t  style={{backgroundColor: '#20272b'}}\n\t\t\t  className={className}\n\t\t\t  aria-labelledby={labeledBy}\n\t\t\t>\n\t\t\t  <ul className=\"list-unstyled\">\n\t\t\t\t{React.Children.toArray(children).filter(\n\t\t\t\t  (child) =>\n\t\t\t\t\t!value || child.props.children.toLowerCase().startsWith(value),\n\t\t\t\t)}\n\t\t\t  </ul>\n\t\t\t</div>\n\t\t  );\n\t\t},\n\t);\n\n\tCustomMenu.displayName = CustomMenu\n\n\tconst change = async (eventkey) => {\n\t\t//alert(`you chosen: ${eventkey}`)\n\t\tconst message = JSON.parse(eventkey);\n\n\t\tconsole.log(\"id:\", message.id)\n\n\t\t//удалить сообщение через сокет\n\t\tdelMessageContext(message.id, message.date, message.chatId)\n\n\t\t//удалить сообщение в базе данных\n\t\tdelMessage(message.id)\n\n\t\tconst url_del_msg = `https://api.telegram.org/bot${token}/deleteMessage?chat_id=${person.id}&message_id=${message.id}`\n\t\t//console.log(url_del_msg)\n\t\tconst delToTelegram = await $host.get(url_del_msg);\n\n\t\tconsole.log(\"Удаляемое сообщение: \", message.id)\n\t\tconsole.log(\"Дата сообщения: \", message.date)\n\n\t\t//Выводим сообщение об успешной отправке\n\t\tif (delToTelegram) {\n\t\t\tconsole.log('Ваше сообщение удалено из телеграм! ', delToTelegram);\t\n\t\t}           \n\t\t//А здесь сообщение об ошибке при отправке\n\t\telse {\n\t\t\tconsole.log('Что-то пошло не так. Попробуйте ещё раз.');\n\t\t}\t\t\n\t}\n\n\n\treturn dates.map((date, dateIndex) => {\n\t\tconst messages = allMessages[date];\n\t\t\n\t\treturn (\n\t\t\t<div key={dateIndex}>\n\t\t\t\t<div className=\"chat__date-wrapper\">\n\t\t\t\t\t<span className=\"chat__date\"> {date}</span>\n\t\t\t\t</div>\n\t\t\t\t{dateIndex === 0 && (\n\t\t\t\t\t<p className=\"chat__encryption-msg\">\n\t\t\t\t\t\t<Icon id=\"lock\" className=\"chat__encryption-icon\" />\n\t\t\t\t\t\tСообщения шифруются сквозным шифрованием. Никто за пределами этого чата не может читать или слушать их\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\t\t\t\t<div className=\"chat__msg-group\" >\n\t\t\t\t\t{messages.map((message, msgIndex) => {\n\n\t\t\t\t\t\t//console.log(message.content)\n\n\t\t\t\t\t\t//получить сообщение по его id\n\t\t\t\t\t\tif (message.content?.includes('_reply_')) {\n\t\t\t\t\t\t \treplyMessage = message?.content.split('_reply_')[0] //messages.find(mess=> mess.id === message.content.split('_reply_')[0])\n\t\t\t\t\t\t} \n\t\t\t\n\t\t\t\t\t\tconst assignRef = () =>\n\t\t\t\t\t\t\tdateIndex === dates.length - 1 && msgIndex === messages.length - 1\n\t\t\t\t\t\t\t\t? lastMsgRef\n\t\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{message.image ? (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={`chat__msg chat__img-wrapper ${\n\t\t\t\t\t\t\t\t\t\t\tmessage.sender !== chatAdminId ? \"chat__msg--rxd\" : \"chat__msg--sent\"\n\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\tref={assignRef()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{message.content.endsWith('.pdf') ? (<figure>\n\t\t\t\t\t\t\t\t\t\t\t{/* <img src={pdf} width={30}/>\n\t\t\t\t\t\t\t\t\t\t\t<a href={message.content} target=\"_blank\" rel=\"noreferrer\">{message.content}</a>*/}\n\t\t\t\t\t\t\t\t\t\t\t<iframe src={message.content} height=\"235px\" width=\"100%\" title=\"myFramePdf\"/>\n\t\t\t\t\t\t\t\t\t\t</figure>) : (\n\t\t\t\t\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t\t\t\t\t<a href={message.content} target=\"_blank\" rel=\"noreferrer\"><img src={message.content} alt=\"\" className=\"chat__img\" /></a>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<figcaption style={{textAlign: 'center', backgroundColor: '#607a7a', borderRadius: '5px'}}>{message.descript}</figcaption>\n\t\t\t\t\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t<span className=\"chat__msg-footer\">\n\t\t\t\t\t\t\t\t\t\t\t<span>{formatTime(message.time)}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{!message.sender && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage?.status === \"sent\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"singleTick\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"doubleTick\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label={message?.status}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`chat__msg-status-icon ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage?.status === \"read\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"chat__msg-status-icon--blue\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t<Dropdown onSelect={change}>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu as={CustomMenu}>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item eventKey={JSON.stringify({id: message.id, date: message.date, chatId: person.id})}>Удалить сообщение</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t\t\t\t</Dropdown>\t\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : message.sender !== chatAdminId ? (\n\t\t\t\t\t\t\t\t\t<p className=\"chat__msg chat__msg--rxd\" ref={assignRef()}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex-row\" ref={el => msgRef.current[message.id] = el} >\n\t\t\t\t\t\t\t\t\t\t\t{/* пересылаемое сообщение */}\n\t\t\t\t\t\t\t\t\t\t\t{message.content?.includes('_reply_') \n\t\t\t\t\t\t\t\t\t\t\t? <div className=\"chat__msg--reply\" onClick={()=>scrollToMsg(message.reply)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"reply__content\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"reply__full\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"reply__left\"></span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"reply__pad\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"reply__contact\">U.L.E.Y</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"reply__text\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* {replyMessage?.content.endsWith('.pdf') ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe src={message.content} height=\"50px\" width=\"50px\" title=\"myFramePdf\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</figure>) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href={replyMessage?.content} target=\"_blank\" rel=\"noreferrer\"><img src={replyMessage?.content} alt=\"\" width='50px' height='50px' /></a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<figcaption style={{textAlign: 'center', backgroundColor: '#607a7a', borderRadius: '5px'}}></figcaption>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{replyMessage?.startsWith('http') ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href={replyMessage} target=\"_blank\" rel=\"noreferrer\"><img src={replyMessage} alt='' width='50px' height='50px' /></a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: replyMessage\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t: <></>}\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {message.content?.startsWith('http') \n\t\t\t\t\t\t\t\t\t\t\t\t? <a className=\"chat__href\" href={message.content} target=\"_blank\" rel=\"noreferrer\">{message.content}</a> \n\t\t\t\t\t\t\t\t\t\t\t\t: message.content.includes('_reply_') ? message.content.split('_reply_')[1] : message.content}  */}\n\t\t\t\t\t\t\t\t\t\t\t\t{message.content?.includes('_reply_') \n\t\t\t\t\t\t\t\t\t\t\t\t? message.content.split('_reply_')[1] \n\t\t\t\t\t\t\t\t\t\t\t\t: message.content}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"chat__msg-filler\"> </span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"chat__msg-footer\">\n\t\t\t\t\t\t\t\t\t\t\t\t{formatTime(message.time)}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown onSelect={change}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu as={CustomMenu}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item eventKey={JSON.stringify({id: message.id, date: message.date, chatId: person.id})}>Удалить сообщение</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<p className=\"chat__msg chat__msg--sent\" ref={assignRef()}>\n\t\t\t\t\t\t\t\t\t\t<div ref={el => msgRef.current[message.id] = el}>\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t{message.content?.startsWith('http') \n\t\t\t\t\t\t\t\t\t\t\t\t? <a className=\"chat__href\" href={message.content} target=\"_blank\" rel=\"noreferrer\">{message.content}</a> \n\t\t\t\t\t\t\t\t\t\t\t\t: message.content}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"chat__msg-filler\"> </span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"chat__msg-footer\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span> {formatTime(message.time)} </span>\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage?.status === \"sent\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"singleTick\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"doubleTick\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label={message?.status}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`chat__msg-status-icon ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage?.status === \"read\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"chat__msg-status-icon--blue\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown onSelect={change}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu as={CustomMenu}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item eventKey={JSON.stringify({id: message.id, date: message.date, chatId: person.id})}>Удалить сообщение</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t });\n};\n\nexport default Convo;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"./styles/main.css\";\nimport EmojiTray from \"./components/EmojiTray\";\nimport ChatInput from \"./components/ChatInput\";\nimport Header from \"./components/Header\";\nimport ChatSidebar from \"./components/ChatSidebar\";\nimport Icon from \"./../../components/Icon\";\nimport Search from \"./components/Search\";\nimport Profile from \"./components/Profile\";\nimport Convo from \"./components/Convo\";\nimport { useUsersContext } from \"./../../context/usersContext\";\nimport { useContext } from 'react';\nimport { AccountContext } from './../../../chat-app-new/context/AccountProvider';\nimport { newMessage, uploadFile } from './../../../http/chatAPI';\nimport { $host } from './../../../http/index'\nimport sendSound from './../../assets/sounds/sendmessage.mp3';\n\nconst chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID\nconst token = process.env.REACT_APP_TELEGRAM_API_TOKEN\nconst host = process.env.REACT_APP_API_URL\n\nconst Chat = () => {\n\tconst { users, setUserAsUnread, addNewMessage } = useUsersContext();\n\tconst { person } = useContext(AccountContext);\n\tconst { setCountMessage } = useUsersContext();\n\n\tconst chatId = person.id;\n\tlet user = users.filter((user) => user.chatId === chatId.toString())[0];\n\n\tconst lastMsgRef = useRef(null);\n\tconst [showAttach, setShowAttach] = useState(false);\n\tconst [showEmojis, setShowEmojis] = useState(false);\n\tconst [showProfileSidebar, setShowProfileSidebar] = useState(false);\n\tconst [showSearchSidebar, setShowSearchSidebar] = useState(false);\n\tconst [file, setFile] = useState();\n\tconst [image, setImage]= useState(\"\");\n\tconst [mess, setMess] = useState(\"\");\n\n\tconst audio = new Audio(sendSound);\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\tscrollToLastMsg();\n\t\t\tsetUserAsUnread(user.chatId);\n\t\t\tsetCountMessage(0)\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tuser && scrollToLastMsg();\n\t}, [users]);\n\n\t//прокрутка\n\tconst scrollToLastMsg = () => {\n\t\tlastMsgRef.current?.scrollIntoView({transition: \"smooth\"});\n\t};\n\n\tuseEffect(() => {\n        const getImage = async () => {\n            if (file) {\n                const data = new FormData();\n                data.append(\"name\", file.name);\n                data.append(\"photo\", file);\n\n               let response = await uploadFile(data);\n\t\t\t   console.log(\"response: \", response)\n\n               setImage(response.data.path);\n\t\t\t   //сообщение с ссылкой на файл\n\t\t\t   setMess(host + response.data.path)\n            }\n        }\n        getImage();\n    }, [file])\n\n\tconst onFileChange = (e) => {\n        setFile(e.target.files[0]);\n    }\n\n\tconst openSidebar = (cb) => {\n\t\t// close any open sidebar first\n\t\tsetShowProfileSidebar(false);\n\t\tsetShowSearchSidebar(false);\n\n\t\t// call callback fn\n\t\tcb(true);\n\t};\n\n\t//функция отправки сообщения\n\tconst sendText = async () => {\n\t\t//Передаем данные боту\n\t\tlet temp=mess.replace(/\\n/g, '%0A'); //экранирование переноса строки\n\t\ttemp = temp.replace(/\\#/g, '%23'); \t\t //экранирование решетки\n\t\ttemp = temp.replace(/\\&/g, '%26'); \t\t //экранирование &\n\t\ttemp = temp.replace(/\\+/g, '%2b'); \t\t //экранирование +\n\t\ttemp = temp.replace(/\\>/g, '%3e'); \t\t //экранирование >\n\t\ttemp = temp.replace(/\\</g, '%3c'); \t\t //экранирование <\n        const url_send_msg = `https://api.telegram.org/bot${token}/sendMessage?chat_id=${person.id}&parse_mode=html&text=${temp}`\n\t\tconst sendToTelegram = await $host.get(url_send_msg);\n\n\t\t//Выводим сообщение об успешной отправке\n\t\tif (sendToTelegram) {\n\t\t\tconsole.log('Спасибо! Ваша сообщение отправлено! ', sendToTelegram.data.result.message_id);\n\t\t}           \n\t\t//А здесь сообщение об ошибке при отправке\n\t\telse {\n\t\t\tconsole.log('Что-то пошло не так. Попробуйте ещё раз.');\n\t\t}\n\n\t\tlet message = {};\n        if(!file) {\n            message = {\n                senderId: chatAdminId, \n                receiverId: user.chatId,\n                conversationId: user.conversationId,\n                type: \"text\",\n                text: mess,\n                is_bot: false,\n\t\t\t\tmessageId: sendToTelegram.data.result.message_id,\n            }\n\n\t\t\t//сохранить в контексте\n\t\t\taddNewMessage(user.chatId, mess, 'text', '', user.conversationId, sendToTelegram.data.result.message_id);\n        } else {\n            message = {\n                senderId: chatAdminId, \n                receiverId: user.chatId,\n                conversationId: user.conversationId,\n                type: \"image\",\n                text: host + image,\n                is_bot: false,\n\t\t\t\tmessageId: sendToTelegram.data.result.message_id,\n            }\n\n\t\t\t//сохранить в контексте\n\t\t\taddNewMessage(user.chatId, host + image, 'image', '', user.conversationId, sendToTelegram.data.result.message_id);\n        }\n        console.log(\"message send button: \", message);\n\n\t\t//сохранение сообщения в базе данных\n\t\tawait newMessage(message)\t\n\t}\n\n\tconst submitNewMessage = () => {\n\t\taudio.play();\n\t\tsendText();\n\n\t\tsetMess(\"\");\n\t\tscrollToLastMsg();\n\t\tsetFile(\"\");\n        setImage(\"\");\n\t};\n\n\n\treturn (\n\t\t<div className=\"chat\">\n\t\t\t<div className=\"chat__body\">\n\t\t\t\t<div className=\"chat__bg\"></div>\n\n\t\t\t\t<Header\n\t\t\t\t\tuser={person}\n\t\t\t\t\topenProfileSidebar={() => openSidebar(setShowProfileSidebar)}\n\t\t\t\t\topenSearchSidebar={() => openSidebar(setShowSearchSidebar)}\n\t\t\t\t/>\n\t\t\t\t<div className=\"chat__content\">\n\t\t\t\t\t<Convo lastMsgRef={lastMsgRef} messages={user.messages} />\n\t\t\t\t</div>\n\t\t\t\t<footer className=\"chat__footer\">\n\t\t\t\t\t<div className=\"chat__footer-wrapper\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"chat__scroll-btn\"\n\t\t\t\t\t\t\taria-label=\"scroll down\"\n\t\t\t\t\t\t\tonClick={scrollToLastMsg}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<Icon id=\"downArrow\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<EmojiTray\n\t\t\t\t\t\t\tshowEmojis={showEmojis}\n\t\t\t\t\t\t\tmess={mess}\n\t\t\t\t\t\t\tsetMess={setMess}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ChatInput\n\t\t\t\t\t\t\tshowEmojis={showEmojis}\n\t\t\t\t\t\t\tsetShowEmojis={setShowEmojis}\n\t\t\t\t\t\t\tshowAttach={showAttach}\n\t\t\t\t\t\t\tsetShowAttach={setShowAttach}\n\t\t\t\t\t\t\tonFileChange={onFileChange}\n\t\t\t\t\t\t\tmess={mess}\n\t\t\t\t\t\t\tsetMess={setMess}\n\t\t\t\t\t\t\tsubmitNewMessage={submitNewMessage}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t</div>\t\t\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t\t<ChatSidebar\n\t\t\t\theading=\"Поиск сообщения\"\n\t\t\t\tactive={showSearchSidebar}\n\t\t\t\tcloseSidebar={() => setShowSearchSidebar(false)}\n\t\t\t>\n\t\t\t\t<Search />\n\t\t\t</ChatSidebar>\n\n\t\t\t<ChatSidebar\n\t\t\t\theading=\"Данные контакта\"\n\t\t\t\tactive={showProfileSidebar}\n\t\t\t\tcloseSidebar={() => setShowProfileSidebar(false)}\n\t\t\t>\n\t\t\t\t<Profile user={user} />\n\t\t\t</ChatSidebar>\n\n\t\t</div>\n\t);\n};\n\nexport default Chat;\n"],"names":["contact","setPerson","useContext","AccountContext","useUsersContext","setUserAsUnread","usersOnline","setCountMessage","getUser","find","item","userId","chatId","name","id","avatar","lastMessage","recentMessageDate","messageDates","Object","keys","messages","length","JSON","stringify","pop","getLastMessage","className","onClick","src","process","alt","avatarDefault","formatTime","time","status","Icon","unread","typing","content","pinned","clients","users","useState","contacts","setContacts","text","setText","navigate","useNavigate","useEffect","userSort","sort","a","b","dateA","Date","date","filteredData","filter","user","toLowerCase","includes","ariaLabel","iconId","iconClassName","onSelected","index","console","log","options","placeholder","onChange","e","target","value","map","emojiTabs","icon","label","active","showEmojis","newMessage","setNewMessage","tab","Array","fill","_","rowIndex","colIndex","role","style","backgroundPositionX","backgroundPositionY","textAreaRef","height","scrollHeight","attachButtons","click","showAttach","setShowAttach","setShowEmojis","mess","setMess","submitNewMessage","onFileChange","useRef","useAutosizeTextArea","current","btn","htmlFor","type","display","ref","rows","openProfileSidebar","openSearchSidebar","closeSidebar","heading","children","inputProps","username","setUsername","form","setForm","addNewName","addNewAvatar","img","setImg","showEdit","setShowEdit","input","React","host","handleSubmit","preventDefault","newName","editContact","handleAvatar","files","sendFile","data","FormData","append","uploadFile","response","newAvatar","path","editContactAvatar","defaultAvatar","color","onSubmit","onFocus","select","borderBottom","cursor","media","replyMessage","lastMsgRef","allMessages","person","dates","chatAdminId","msgRef","delMessageContext","CustomToggle","displayName","CustomMenu","labeledBy","backgroundColor","child","props","startsWith","change","eventkey","message","parse","delMessage","url_del_msg","$host","delToTelegram","dateIndex","msgIndex","split","assignRef","undefined","image","sender","endsWith","width","title","href","rel","textAlign","borderRadius","descript","Dropdown","onSelect","as","eventKey","el","reply","scrollIntoView","transition","addNewMessage","toString","showProfileSidebar","setShowProfileSidebar","showSearchSidebar","setShowSearchSidebar","file","setFile","setImage","audio","Audio","sendSound","scrollToLastMsg","getImage","openSidebar","cb","sendText","temp","replace","url_send_msg","sendToTelegram","result","message_id","senderId","receiverId","conversationId","is_bot","messageId","play"],"sourceRoot":""}