{"version":3,"file":"static/js/5906.27e8ad0e.chunk.js","mappings":"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","sources":["components/Chart.js","components/AppBreadcrumb.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppHeaderChat.js","components/AppSidebarNav.js","components/AppSidebar.js","routes.js"],"sourcesContent":["import React from 'react';\nimport * as d3 from \"d3\";\n\nconst Chart = ({ data, data2, width, height }) => {\n  const [activeIndex, setActiveIndex] = React.useState(null);\n  \n  const getX = d3.scaleBand()\n    .domain(data.map(item => item.name))\n    .range([0, width]);\n\n  const getY = d3.scaleLinear()\n    .domain([0, 1000])\n    .range([height, 0]);\n  \n  const getYAxis = ref => {\n    const yAxis = d3.axisLeft(getY)\n      .tickSize(-width)\n      .tickPadding(7);\n    d3.select(ref).call(yAxis);\n  };\n\n  const getXAxis = ref => {\n    const xAxis = d3.axisBottom(getX);\n    d3.select(ref).call(xAxis);\n  };\n\n  const linePath = d3.line()\n    .x(d => getX(d.name) + getX.bandwidth() / 2)\n    .y(d => getY(d.value))\n    .curve(d3.curveMonotoneX)(data)\n\n  const linePath2 = d3.line()\n    .x(d => getX(d.name) + getX.bandwidth() / 2)\n    .y(d => getY(d.value))\n    .curve(d3.curveMonotoneX)(data2)\n\n  const areaPath = d3.area()\n    .x(d => getX(d.name) + getX.bandwidth() / 2)\n    .y0(d => getY(d.value))\n    .y1(() => getY(0))\n    .curve(d3.curveMonotoneX)(data);\n\n  const handleMouseMove = (e) => {\n    const x = e.nativeEvent.offsetX;\n    const index = Math.floor(x / getX.step());\n    setActiveIndex(index);\n  };\n\n  const handleMouseLeave = () => {\n    setActiveIndex(null);\n  };\n  \n  return (\n    <div className=\"wrapper-chart\">\n      <svg\n        className=\"svg\"\n        width={width}\n        height={height}\n        onMouseMove={handleMouseMove}\n        onMouseLeave={handleMouseLeave}\n      >\n        {/* ось y */}\n        {/* <g className=\"axis\" ref={getYAxis} /> */}\n\n        {/* ось x */}\n        <g\n          className=\"axis xAxis\"\n          ref={getXAxis}\n          transform={`translate(0,${getY(0)})`}\n        />\n        <path\n          fill=\"#7cb5ec\"\n          d={areaPath}\n          opacity={0}\n        />\n        <path\n          strokeWidth={3}\n          fill=\"none\"\n          stroke=\"#7cb5ec\"\n          d={linePath}\n        />\n        <path\n          strokeWidth={3}\n          fill=\"none\"\n          stroke=\"#e10c16\"\n          d={linePath2}\n        />\n        {data.map((item, index) => {\n          return (\n            <g key={index}>\n              <circle\n                cx={getX(item.name) + getX.bandwidth() / 2}\n                cy={getY(item.value)}\n                r={index === activeIndex ? 6 : 4}\n                fill=\"#7cb5ec\"\n                strokeWidth={index === activeIndex ? 2 : 0}\n                stroke=\"#fff\"\n                style={{ transition: `ease-out .1s` }}\n              />\n              <text\n                fill=\"#fff\"\n                x={getX(item.name) + getX.bandwidth() / 2}\n                y={getY(item.value) - 10}\n                textAnchor=\"middle\"\n              >\n                {item.value}\n              </text>\n            </g>\n          );\n        })}\n        {data2.map((item, index) => {\n          return (\n            <g key={index}>\n              <circle\n                cx={getX(item.name) + getX.bandwidth() / 2}\n                cy={getY(item.value)}\n                r={index === activeIndex ? 6 : 4}\n                fill=\"#7cb5ec\"\n                strokeWidth={index === activeIndex ? 2 : 0}\n                stroke=\"#fff\"\n                style={{ transition: `ease-out .1s` }}\n              />\n              <text\n                fill=\"#fff\"\n                x={getX(item.name) + getX.bandwidth() / 2}\n                y={getY(item.value) - 10}\n                textAnchor=\"middle\"\n              >\n                {item.value}\n              </text>\n            </g>\n          );\n        })}\n      </svg>\n    </div>\n  );\n};\n\n\nexport default Chart","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = (props) => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      {/* <CBreadcrumbItem href=\"/\">Пункт управления</CBreadcrumbItem> */}\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name} {props.tabs}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n\n  return (\n    <CFooter>\n      <div>\n        <a href=\"https://uley.team/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          U.L.E.Y TEAM\n        </a>\n        <span className=\"ms-1\">&copy; 2023 Все права защищены.</span>\n      </div>\n      <div className=\"ms-auto\">\n        {/* <span className=\"me-1\">Сделано</span> */}\n        {/* <a href=\"https://uley.team/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            U.L.E.Y TEAM\n        </a> */}\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React, {useContext} from 'react'\nimport {Context} from \"../../index\";\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport avatar from './../../assets/images/avatars/logo_chat_admin.png'\nimport {observer} from \"mobx-react-lite\";\n\nconst AppHeaderDropdown = observer(() => {\n  const {user} = useContext(Context)\n\n  const logOut = () => {\n    console.log(\"Выход\")\n    user.setUser({})\n    user.setIsAuth(false)\n}\n\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Аккаунт</CDropdownHeader>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilEnvelopeOpen} className=\"me-2\" />\n          Сообщений\n          <CBadge color=\"success\" className=\"ms-2\">\n            0\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilFile} className=\"me-2\" />\n          Проекты\n          <CBadge color=\"primary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Настройки</CDropdownHeader>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Профиль\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          Настройки\n        </CDropdownItem>       \n        <CDropdownDivider />\n        <CDropdownItem onClick={()=> logOut()}>\n          <CIcon icon={cilLockLocked} className=\"me-2\" />\n          Выйти\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n});\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n  CBadge,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport logo from './../assets/brand/logo_04_light.png'\n\nconst AppHeader = (props) => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  //const { newProject } = useUsersContext();\n  //console.log(\"countProject: \", newProject)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CIcon icon={logo} height={48} alt=\"Logo\" />\n          {/* <h5>U.L.E.Y TEAM</h5> */}\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              Пункт управления\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"/chat2\">Менеджеры</CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"/chat3\">Проекты</CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav>\n          <CNavItem>\n            <CNavLink href=\"/soundsnotif\" style={{position: 'relative'}}>\n              <CIcon icon={cilBell} size=\"lg\" />\n              {/* <CBadge color=\"success\" className=\"ms-2\">\n                5\n              </CBadge> */}\n              {/* { newProject ?  <span className=\"badge bg-danger-gradient rounded-pill position-absolute top-0 end-0\">1</span> \n              : \"\"\n              } */}\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n       <CContainer fluid>\n        <AppBreadcrumb tabs={props.tabs} />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n  CBadge,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\nimport logo from './../assets/brand/logo_04_light.png'\nimport { AppHeaderDropdown } from './header/index'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" >\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CIcon icon={logo} height={48} alt=\"Logo\" />\n          {/* <h5>U.L.E.Y TEAM</h5> */}\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              Пункт управления\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"/chat2\">Менеджеры</CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"/chat3\">Проекты</CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilBell} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge, style) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n        {style && style}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilEnvelopeClosed,\n  cilSpeedometer,\n  cilPeople,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport { AppSidebarNav } from './AppSidebarNav'\nimport logo from 'src/assets/brand/logo_04_light.png'\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\nimport CompIcon from 'src/assets/images/dashboard3.png'\nimport { newPretendent } from 'src/http/adminAPI'\n\n// sidebar nav config\n//import navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  const { countMessage, newProject, countMessageWork, countPretendent } = useUsersContext();\n  //console.log(\"countMessage: \", countMessage)\n  \n  let navigation = []\n\n  navigation = [ //показывать бейдж\n    {\n      component: CNavItem,\n      name: 'Пункт управления',\n      to: '/dashboard',\n      // icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n      icon: <img src={CompIcon} style={{width: '25px', marginRight: '18px', marginLeft: '4px'}} />,\n      style: {backgroundColor: '#2a2f32'}, //1b2227 //1f282c\n    },\n    {\n      component: CNavTitle,\n      name: '',\n    },\n    // {\n    //   component: CNavTitle,\n    //   name: 'Основные разделы',\n    // },\n    // {\n    //   component: CNavItem,\n    //   name: 'Renthub',\n    //   to: '/renthub',\n    //   icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    // },\n    {\n      component: CNavItem,\n      name: 'Менеджеры',\n      to: '/chat2',\n      icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n      badge: countMessage !== 0 ? {color: 'info', text: countMessage,} : \"\",\n      style: {backgroundColor: '#0078d421'},\n    },\n    \n    {\n      component: CNavItem,\n      name: 'Рассылки',\n      to: '/distribution',\n      icon: <CIcon icon={cilEnvelopeClosed} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Уведомления',\n      to: '/notifications',\n      icon: <CIcon icon={cilBell} customClassName=\"nav-icon\" />,\n      badge: newProject ? {color: 'info', text: '1',} : \"\",\n    },\n\n    {\n      component: CNavTitle,\n      name: '',\n    },\n\n    // {\n    //   component: CNavItem,\n    //   name: 'Workhub',\n    //   to: '/workhub',\n    //   icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    // },\n\n    {\n      component: CNavItem,\n      name: 'Специалисты',\n      to: '/chatwork',\n      icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n      badge: countMessageWork !== 0 ? {color: 'info', text: countMessageWork,} : \"\",\n      style: {backgroundColor: '#0078d421'},\n    },\n    {\n      component: CNavItem,\n      name: 'Рассылки',\n      to: '/distributionw',\n      icon: <CIcon icon={cilEnvelopeClosed} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Уведомления',\n      to: '/workers',\n      icon: <CIcon icon={cilBell} customClassName=\"nav-icon\" />,\n      badge: countPretendent ? {color: 'info', text: '1',} : \"\",\n    },\n  ]\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        <img src={logo} alt='' height={35} className=\"sidebar-brand-full\"/>\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\n\nconst Chats = React.lazy(() => import('./pages/Chats'))\nconst Chats2 = React.lazy(() => import('./pages/Chats2'))\nconst Chats3 = React.lazy(() => import('./pages/Chats3'))\nconst ChatWorker = React.lazy(() => import('./pages/ChatWorker'))\nconst Admin = React.lazy(() => import('./pages/Admin'))\nconst Admin2 = React.lazy(() => import('./pages/Admin2'))\nconst Notifications = React.lazy(() => import('./pages/Notifications'))\nconst MessagesBot = React.lazy(() => import('./pages/MessagesBot'))\nconst Reports = React.lazy(() => import('./pages/Reports'))\nconst Distribution = React.lazy(() => import('./pages/Distribution'))\nconst DistributionAdd = React.lazy(() => import('./pages/DistributionAdd'))\nconst Settings = React.lazy(() => import('./pages/Settings'))\nconst DistributionW = React.lazy(() => import('./pages/DistributionW'))\nconst Workers = React.lazy(() => import('./pages/Workers'))\n\nconst routes = [\n  { path: '/', exact: true, name: 'Пункт управления / ' },\n  { path: '/dashboard', name: 'Пункт управления / ', Component: Admin },\n  { path: \"/chat\", name: 'Чаты', Component: Chats },\n  { path: \"/chat2\", name: 'Чаты 2.0', Component: Chats2 },\n  { path: \"/chatwork\", name: 'Workhub', Component: ChatWorker },\n  { path: \"/chat3\", name: 'Проекты', Component: Chats3 },\n  { path: '/distribution', name: 'Renthub / Рассылки', Component: Distribution },\n  { path: '/distribution_add', name: 'Создать рассылку', Component: DistributionAdd },\n  { path: '/reports', name: 'Отчеты', Component: Reports },\n  { path: '/messagesbot', name: 'Сообщения от бота', Component: MessagesBot },\n  { path: \"/notifications\", name: 'Renthub / Уведомления', Component: Notifications },\n  { path: '/settings', name: 'Настройки', Component: Settings },\n  { path: '/distributionw', name: 'Workhub / Рассылки', Component: DistributionW },\n  { path: \"/workers\", name: 'Workhub / Уведомления', Component: Workers },\n  { path: '/dashboard2', name: 'Пункт управления / Renthub', Component: Admin2 },\n]\n\nexport default routes\n"],"names":["_ref","data","data2","width","height","_React$useState","React","_React$useState2","_slicedToArray","activeIndex","setActiveIndex","getX","d3","domain","map","item","name","range","getY","linePath","x","d","bandwidth","y","value","curve","linePath2","areaPath","y0","y1","_jsx","className","children","_jsxs","onMouseMove","e","nativeEvent","offsetX","index","Math","floor","step","onMouseLeave","ref","xAxis","call","transform","concat","fill","opacity","strokeWidth","stroke","cx","cy","r","style","transition","textAnchor","AppBreadcrumb","props","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","array","currentPathname","routeName","routes","currentRoute","find","route","path","getRouteName","push","active","length","getBreadcrumbs","CBreadcrumb","breadcrumb","_createElement","CBreadcrumbItem","_objectSpread","href","key","tabs","AppFooter","CFooter","target","rel","observer","user","useContext","Context","CDropdown","variant","CDropdownToggle","placement","caret","CAvatar","src","avatar","size","CDropdownMenu","CDropdownHeader","CDropdownItem","CIcon","icon","cilEnvelopeOpen","CBadge","color","cilFile","cilUser","cilSettings","CDropdownDivider","onClick","console","log","setUser","setIsAuth","cilLockLocked","dispatch","useDispatch","sidebarShow","useSelector","state","CHeader","position","CContainer","fluid","CHeaderToggler","type","cilMenu","CHeaderBrand","to","logo","alt","CHeaderNav","CNavItem","CNavLink","component","NavLink","cilBell","cilList","AppHeaderDropdown","CHeaderDivider","AppSidebarNav","items","navLink","badge","_Fragment","text","navItem","rest","_objectWithoutProperties","_excluded","Component","navGroup","_item$items","_excluded2","idx","String","toggler","visible","startsWith","AppSidebar","navigation","unfoldable","sidebarUnfoldable","_useUsersContext","useUsersContext","countMessage","newProject","countMessageWork","countPretendent","CompIcon","marginRight","marginLeft","backgroundColor","CNavTitle","cilPeople","customClassName","cilEnvelopeClosed","CSidebar","onVisibleChange","CSidebarBrand","CSidebarNav","SimpleBar","CSidebarToggler","Chats","Chats2","Chats3","ChatWorker","Admin","Admin2","Notifications","MessagesBot","Reports","exact"],"sourceRoot":""}