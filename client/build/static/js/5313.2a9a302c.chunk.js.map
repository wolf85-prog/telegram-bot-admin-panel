{"version":3,"file":"static/js/5313.2a9a302c.chunk.js","mappings":"2HA0BA,MACA,EAAe,IAA0B,6D,mCC1BzC,MA+IA,EA/IiB,CACb,CACIA,GAAI,EACJC,KAAM,2BACNC,KAAM,QACNC,OAAQ,CACJ,CAACH,GAAI,EAAGC,KAAM,kFACd,CAACD,GAAI,EAAGC,KAAM,qGACd,CAACD,GAAI,EAAGC,KAAM,uDACd,CAACD,GAAI,EAAGC,KAAM,YACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,sFAGtB,CACID,GAAI,EACJC,KAAM,2BACNC,KAAM,QACNC,OAAQ,CACJ,CAACH,GAAI,EAAGC,KAAM,gGACd,CAACD,GAAI,EAAGC,KAAM,oIACd,CAACD,GAAI,EAAGC,KAAM,kCACd,CAACD,GAAI,EAAGC,KAAM,sFAGtB,CACID,GAAI,EACJC,KAAM,iCACNC,KAAM,QACNC,OAAQ,CACJ,CAACH,GAAI,EAAGC,KAAM,mDACd,CAACD,GAAI,EAAGC,KAAM,uDACd,CAACD,GAAI,EAAGC,KAAM,yDACd,CAACD,GAAI,EAAGC,KAAM,gEACd,CAACD,GAAI,EAAGC,KAAM,uHACd,CAACD,GAAI,EAAGC,KAAM,yFACd,CAACD,GAAI,EAAGC,KAAM,mFACd,CAACD,GAAI,EAAGC,KAAM,qEAGtB,CACID,GAAI,EACJC,KAAM,2BACNC,KAAM,QACNC,OAAQ,CACJ,CAACH,GAAI,EAAGC,KAAM,+FACd,CAACD,GAAI,EAAGC,KAAM,2GACd,CAACD,GAAI,EAAGC,KAAM,qGACd,CAACD,GAAI,EAAGC,KAAM,qGACd,CAACD,GAAI,EAAGC,KAAM,+HAGtB,CACID,GAAI,EACJC,KAAM,8EACNC,KAAM,QACNC,OAAQ,CACJ,CAACH,GAAI,EAAGC,KAAM,wCACd,CAACD,GAAI,EAAGC,KAAM,kCACd,CAACD,GAAI,EAAGC,KAAM,0DACd,CAACD,GAAI,EAAGC,KAAM,0CAGtB,CACID,GAAI,EACJC,KAAM,yDACNC,KAAM,WACNC,OAAQ,CACJ,CAACH,GAAI,EAAGC,KAAM,oDACd,CAACD,GAAI,EAAGC,KAAM,wCACd,CAACD,GAAI,EAAGC,KAAM,kCACd,CAACD,GAAI,EAAGC,KAAM,wCACd,CAACD,GAAI,EAAGC,KAAM,6GAGtB,CACID,GAAI,EACJC,KAAM,4GACNC,KAAM,aACNC,OAAQ,CACJ,CAACH,GAAI,EAAGC,KAAM,mGAGtB,CACID,GAAI,EACJC,KAAM,8EACNC,KAAM,mBACNC,OAAQ,CACJ,CAACH,GAAI,EAAGC,KAAM,mFACd,CAACD,GAAI,EAAGC,KAAM,6EACd,CAACD,GAAI,EAAGC,KAAM,mEACd,CAACD,GAAI,EAAGC,KAAM,4DAGtB,CACID,GAAI,EACJC,KAAM,mDACNC,KAAM,SACNC,OAAQ,CACJ,CAACH,GAAI,EAAGC,KAAM,6DACd,CAACD,GAAI,EAAGC,KAAM,oFACd,CAACD,GAAI,EAAGC,KAAM,6EACd,CAACD,GAAI,EAAGC,KAAM,qFAGtB,CACID,GAAI,GACJC,KAAM,6CACNC,KAAM,QACNC,OAAQ,CACJ,CAACH,GAAI,EAAGC,KAAM,2DACd,CAACD,GAAI,EAAGC,KAAM,mIACd,CAACD,GAAI,EAAGC,KAAM,wCACd,CAACD,GAAI,EAAGC,KAAM,8CACd,CAACD,GAAI,EAAGC,KAAM,yEACd,CAACD,GAAI,EAAGC,KAAM,sJACd,CAACD,GAAI,EAAGC,KAAM,WAGtB,CACID,GAAI,GACJC,KAAM,2BACNC,KAAM,QACNC,OAAQ,CACJ,CAACH,GAAI,EAAGC,KAAM,wCACd,CAACD,GAAI,EAAGC,KAAM,kCACd,CAACD,GAAI,EAAGC,KAAM,0DACd,CAACD,GAAI,EAAGC,KAAM,uLACd,CAACD,GAAI,EAAGC,KAAM,oKACd,CAACD,GAAI,EAAGC,KAAM,uIAGtB,CACID,GAAI,GACJC,KAAM,sHACNC,KAAM,aACNC,OAAQ,CACJ,CAACH,GAAI,EAAGC,KAAM,kHACd,CAACD,GAAI,EAAGC,KAAM,oK,mSC5H1B,MA8TA,EA9TyBG,IAKlB,IALmB,WACxBC,EAAU,WACVC,EAAU,WACVC,EAAU,WACVC,GACDJ,EAEC,OACEK,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAC,SAAA,EACHC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,eACVC,MAAM,UACNC,OACEV,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAT,SAAA,CACGN,EAAW,OAMhBgB,MAAO,2BACPC,QAAQV,EAAAA,EAAAA,KAAA,OAAKW,I,6qJAAYC,IAAI,GAAGC,MAAO,KACvCC,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,cACjBC,YAAa,wBACbC,sBAAsBC,EAAAA,EAAAA,UAAS,iBAC/BP,KAAM,CACJQ,KAAKC,MAAqB,KAAdlC,EAAW,GAAOA,GAC9BiC,KAAKC,MAAqB,KAAdlC,EAAW,GAAOA,GAC9BiC,KAAKC,MAAqB,KAAdlC,EAAW,GAAOA,GAC9BiC,KAAKC,MAAqB,KAAdlC,EAAW,GAAOA,GAC9B,EAAG,EAAG,MAIdmC,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACTK,YAAY,GAEdC,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDC,IAAK,EACLC,IAAK,IACLT,SAAS,EACTI,KAAM,CACJJ,SAAS,GAEXM,MAAO,CACLN,SAAS,KAIfU,SAAU,CACRC,KAAM,CACJC,YAAa,EACbC,QAAS,IAEXC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAQ3BhD,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,eACVC,MAAM,OACNC,OACEP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,SACGL,IAMLe,MAAO,2BACPC,QAAQV,EAAAA,EAAAA,KAAA,OAAKW,I,yjJAAYC,IAAI,GAAGC,MAAO,KACvCC,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,cACjBC,YAAa,wBACbC,sBAAsBC,EAAAA,EAAAA,UAAS,cAC/BP,KAAM,CACJQ,KAAKC,MAAsB,KAAfjC,EAAW,IAAQA,GAC/BgC,KAAKC,MAAsB,KAAfjC,EAAW,IAAQA,GAC/BgC,KAAKC,MAAsB,KAAfjC,EAAW,IAAQA,GAC/BgC,KAAKC,MAAsB,KAAfjC,EAAW,IAAQA,GAC/B,EAAG,EAAG,MAIdkC,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACTK,YAAY,GAEdC,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDC,IAAK,EACLC,IAAK,IACLT,SAAS,EACTI,KAAM,CACJJ,SAAS,GAEXM,MAAO,CACLN,SAAS,KAIfU,SAAU,CACRC,KAAM,CACJC,YAAa,GAEfE,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAQ3BhD,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,eACVC,MAAM,UACNC,OACEV,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAT,SAAA,CACGJ,EAAW,OAMhBc,MAAO,iCACPC,QAAQV,EAAAA,EAAAA,KAAA,OAAKW,I,inJAAYC,IAAI,GAAGC,MAAO,KACvCC,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,OACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,uBACjBC,YAAa,wBACbL,KAAM,CACJQ,KAAKC,MAAsB,KAAfhC,EAAW,IAAQA,GAC/B+B,KAAKC,MAAsB,KAAfhC,EAAW,IAAQA,GAC/B+B,KAAKC,MAAsB,KAAfhC,EAAW,IAAQA,GAC/B+B,KAAKC,MAAsB,KAAfhC,EAAW,IAAQA,GAC/B,EAAG,EAAG,GACRsD,MAAM,KAIZrB,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDH,SAAS,GAEXO,EAAG,CACDP,SAAS,IAGbU,SAAU,CACRC,KAAM,CACJC,YAAa,EACbC,QAAS,IAEXC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAQ3BhD,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,eACVC,MAAM,SACNC,OACEV,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAT,SAAA,CACGH,EAAW,OAMhBa,MAAO,2BACPC,QAAQV,EAAAA,EAAAA,KAAA,OAAKW,IAAKuC,EAAOtC,IAAI,GAAGC,MAAO,KACvCC,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,cACjBC,YAAa,wBACbC,sBAAsBC,EAAAA,EAAAA,UAAS,iBAC/BP,KAAM,CACJQ,KAAKC,MAAsB,KAAf/B,EAAW,IAAQA,GAC/B8B,KAAKC,MAAqB,KAAd/B,EAAW,GAAOA,GAC9B8B,KAAKC,MAAsB,KAAf/B,EAAW,IAAQA,GAC/B8B,KAAKC,MAAsB,KAAf/B,EAAW,IAAQA,GAC/B,EAAG,EAAG,MAIdgC,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACTK,YAAY,GAEdC,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDC,IAAK,EACLC,IAAK,IACLT,SAAS,EACTI,KAAM,CACJJ,SAAS,GAEXM,MAAO,CACLN,SAAS,KAIfU,SAAU,CACRC,KAAM,CACJC,YAAa,EACbC,QAAS,IAEXC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,aAQtB,E,yDCSX,EApUyBxD,IAMlB,IANmB,WACxB2D,EAAU,cACVC,EAAa,gBACbC,EAAe,YACfC,GAED9D,EAEC,OACEK,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAC,SAAA,EAEHC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,eACVC,MAAM,UACNC,OACEV,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAT,SAAA,CACGoD,EAAW,OAMhB1C,MAAO,8EACPC,QAAQV,EAAAA,EAAAA,KAAA,OAAKW,IAAK4C,EAAO3C,IAAI,GAAGC,MAAO,KACvCC,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,OACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,uBACjBC,YAAa,wBACbL,KAAM,CACY,KAAfiC,EAAW,IAAQA,EACJ,KAAfA,EAAW,IAAQA,EACJ,KAAfA,EAAW,IAAQA,EACJ,KAAfA,EAAW,IAAQA,EACpB,EAAG,EAAG,GACRF,MAAM,KAIZrB,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDH,SAAS,GAEXO,EAAG,CACDP,SAAS,IAGbU,SAAU,CACRC,KAAM,CACJC,YAAa,EACbC,QAAS,IAEXC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAU3BhD,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,eACVC,MAAM,OACNC,OACEP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,SACGqD,IAML3C,MAAO,yDACPC,QAAQV,EAAAA,EAAAA,KAAA,OAAKW,IAAK6C,EAAU5C,IAAI,GAAGC,MAAO,KAC1CC,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,cACjBC,YAAa,wBACbC,sBAAsBC,EAAAA,EAAAA,UAAS,cAC/BP,KAAM,CACJQ,KAAKC,MAAyB,KAAlByB,EAAc,IAAQA,GAClC1B,KAAKC,MAAyB,KAAlByB,EAAc,IAAQA,GAClC1B,KAAKC,MAAyB,KAAlByB,EAAc,IAAQA,GAClC1B,KAAKC,MAAyB,KAAlByB,EAAc,IAAQA,GAClC,EAAG,EAAG,MAIdxB,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACTK,YAAY,GAEdC,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDC,IAAK,EACLC,IAAK,IACLT,SAAS,EACTI,KAAM,CACJJ,SAAS,GAEXM,MAAO,CACLN,SAAS,KAIfU,SAAU,CACRC,KAAM,CACJC,YAAa,GAEfE,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAU3BhD,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,eACVC,MAAM,UACNC,OACEP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,SACGsD,IAGL5C,MAAO,4GACPC,QAAQV,EAAAA,EAAAA,KAAA,OAAKW,I,6pJAAiBC,IAAI,GAAGC,MAAO,KAC5CC,OACEd,EAAAA,EAAAA,KAACyD,EAAAA,GAAS,CACRpD,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CACN,uCACA,6CACA,2BACA,uCACA,qBACA,2BACA,2BACA,uCACA,mDACA,6CACA,uCACA,8CAEFC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,uBACjBC,YAAa,wBACbL,KAAM,CACJQ,KAAKC,MAA2B,KAApB0B,EAAgB,IAAQA,GACpC3B,KAAKC,MAA2B,KAApB0B,EAAgB,IAAQA,GACpC3B,KAAKC,MAA2B,KAApB0B,EAAgB,IAAQA,GACpC3B,KAAKC,MAA2B,KAApB0B,EAAgB,IAAQA,GACpC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACvBK,cAAe,MAIrB9B,QAAS,CACPI,qBAAqB,EACrBH,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbE,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACT4B,WAAW,GAEbtB,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDH,KAAM,CACJJ,SAAS,EACTK,YAAY,EACZuB,WAAW,GAEbtB,MAAO,CACLN,SAAS,aAWzB/B,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,eACVC,MAAM,SACNC,OACEV,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAT,SAAA,CACGuD,EAAY,OAMjB7C,MAAO,8EACPC,QAAQV,EAAAA,EAAAA,KAAA,OAAKW,I,6/IAAcC,IAAI,GAAGC,MAAO,KACzCC,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,cACjBC,YAAa,wBACbC,sBAAsBC,EAAAA,EAAAA,UAAS,iBAC/BP,KAAM,CACa,KAAhBoC,EAAY,IAAQA,EACJ,KAAhBA,EAAY,IAAQA,EACJ,KAAhBA,EAAY,IAAQA,EACJ,KAAhBA,EAAY,IAAQA,EACrB,EAAG,EAAG,MAId1B,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACTK,YAAY,GAEdC,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDC,IAAK,EACLC,IAAK,IACLT,SAAS,EACTI,KAAM,CACJJ,SAAS,GAEXM,MAAO,CACLN,SAAS,KAIfU,SAAU,CACRC,KAAM,CACJC,YAAa,EACbC,QAAS,IAEXC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,aAQtB,E,uDCTX,EAtTyBxD,IAMlB,IANmB,YACxBoE,EAAW,WACXC,EAAU,WACVC,EAAU,gBACVC,GAEDvE,EAEC,OACEK,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAC,SAAA,EAEHC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,eACVC,MAAM,UACNC,OACEP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,SACG6D,IAGLnD,MAAO,mDACPC,QAAQV,EAAAA,EAAAA,KAAA,OAAKW,I,6gJAAaC,IAAI,GAAGC,MAAO,KACxCC,OACEd,EAAAA,EAAAA,KAACyD,EAAAA,GAAS,CACRpD,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CACN,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,2BACtD,uCACA,mDACA,6CACA,uCACA,8CAEFC,SAAU,CACR,CACEC,MAAO,2GACPC,gBAAiB,uBACjBC,YAAa,wBACbL,KAAM,CACa,KAAhB0C,EAAY,IAAQA,EACJ,KAAhBA,EAAY,IAAQA,EACJ,KAAhBA,EAAY,IAAQA,EACJ,KAAhBA,EAAY,IAAQA,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACvBF,cAAe,MAIrB9B,QAAS,CACPI,qBAAqB,EACrBH,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbE,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACT4B,WAAW,GAEbtB,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDH,KAAM,CACJJ,SAAS,EACTK,YAAY,EACZuB,WAAW,GAEbtB,MAAO,CACLN,SAAS,aAWzB/B,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,eACVC,MAAM,OACNC,OACEV,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAT,SAAA,CACG8D,EAAW,OAMhBpD,MAAO,6CACPC,QAAQV,EAAAA,EAAAA,KAAA,OAAKW,IAAKqD,EAAOpD,IAAI,GAAGC,MAAO,KACvCC,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,OACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,uBACjBC,YAAa,wBACbL,KAAM,CACJQ,KAAKC,MAAsB,KAAfkC,EAAW,IAAQA,GAC/BnC,KAAKC,MAAsB,KAAfkC,EAAW,IAAQA,GAC/BnC,KAAKC,MAAsB,KAAfkC,EAAW,IAAQA,GAC/BnC,KAAKC,MAAsB,KAAfkC,EAAW,IAAQA,GAC/B,EAAG,EAAG,GACRZ,MAAM,KAIZrB,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDH,SAAS,GAEXO,EAAG,CACDP,SAAS,IAGbU,SAAU,CACRC,KAAM,CACJC,YAAa,EACbC,QAAS,IAEXC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAU3BhD,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,eACVC,MAAM,UACNC,OACEP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,SACG+D,IAGLrD,MAAO,2BACPC,QAAQV,EAAAA,EAAAA,KAAA,OAAKW,I,6yJAAYC,IAAI,GAAGC,MAAO,KACvCC,OACEd,EAAAA,EAAAA,KAACyD,EAAAA,GAAS,CACRpD,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CACN,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,2BACtD,uCACA,mDACA,6CACA,uCACA,8CAEFC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,uBACjBC,YAAa,wBACbL,KAAM,CACJQ,KAAKC,MAAsB,KAAfmC,EAAW,IAAQA,GAC/BpC,KAAKC,MAAsB,KAAfmC,EAAW,IAAQA,GAC/BpC,KAAKC,MAAsB,KAAfmC,EAAW,IAAQA,GAC/BpC,KAAKC,MAAsB,KAAfmC,EAAW,IAAQA,GAC/B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACvBJ,cAAe,MAIrB9B,QAAS,CACPI,qBAAqB,EACrBH,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbE,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACT4B,WAAW,GAEbtB,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDH,KAAM,CACJJ,SAAS,EACTK,YAAY,EACZuB,WAAW,GAEbtB,MAAO,CACLN,SAAS,aAWzB/B,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,eACVC,MAAM,SACNC,OACEP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,SACGgE,IAMLtD,MAAO,mDACPC,QAAQV,EAAAA,EAAAA,KAAA,OAAKW,I,yyJAAiBC,IAAI,GAAGC,MAAO,KAC5CC,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,cACjBC,YAAa,wBACbC,sBAAsBC,EAAAA,EAAAA,UAAS,cAC/BP,KAAM,CACJQ,KAAKC,MAA2B,KAApBoC,EAAgB,IAAQA,GACpCrC,KAAKC,MAA2B,KAApBoC,EAAgB,IAAQA,GACpCrC,KAAKC,MAA2B,KAApBoC,EAAgB,IAAQA,GACpCrC,KAAKC,MAA2B,KAApBoC,EAAgB,IAAQA,GACpC,EAAG,EAAG,MAIdnC,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACTK,YAAY,GAEdC,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDC,IAAK,EACLC,IAAK,IACLT,SAAS,EACTI,KAAM,CACJJ,SAAS,GAEXM,MAAO,CACLN,SAAS,KAIfU,SAAU,CACRC,KAAM,CACJC,YAAa,GAEfE,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,aAQtB,ECJX,EApTyBxD,IAKlB,IALmB,MACxByE,EAAK,SACLC,EAAQ,YACRC,EAAW,SACXC,GACD5E,EAEC,OACEK,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAC,SAAA,EACHC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,OACVC,MAAM,UACNC,OACEV,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAT,SAAA,CACGkE,EAAMI,OAAO,OAMlB5D,MAAO,iCACPC,OAAQ,GACRI,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,cACjBC,YAAa,wBACbC,sBAAsBC,EAAAA,EAAAA,UAAS,iBAC/BP,KAAM,CACsE,IAAzE+C,EAAMK,QAAOC,GAAiD,IAAzC,IAAIC,KAAKD,EAAKE,YAAYC,aAAmBL,OAAWJ,EAAMI,OAAO,EACjB,IAAzEJ,EAAMK,QAAOC,GAAiD,IAAzC,IAAIC,KAAKD,EAAKE,YAAYC,aAAmBL,OAAWJ,EAAMI,OAAO,EACjB,IAAzEJ,EAAMK,QAAOC,GAAiD,IAAzC,IAAIC,KAAKD,EAAKE,YAAYC,aAAmBL,OAAWJ,EAAMI,OAAO,EACjB,IAAzEJ,EAAMK,QAAOC,GAAiD,IAAzC,IAAIC,KAAKD,EAAKE,YAAYC,aAAmBL,OAAWJ,EAAMI,OAAO,EAC5F,EAAG,EAAG,MAKbzC,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACTK,YAAY,GAEdC,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDC,KAAM,EACNC,IAAK,GACLT,SAAS,EACTI,KAAM,CACJJ,SAAS,GAEXM,MAAO,CACLN,SAAS,KAIfU,SAAU,CACRC,KAAM,CACJC,YAAa,EACbC,QAAS,IAEXC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAQ3BhD,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,OACVC,MAAM,OACNC,OACEP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,SACGmE,EAASG,SAMd5D,MAAO,iCACPC,OAAQ,GACRI,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,cACjBC,YAAa,wBACbC,sBAAsBC,EAAAA,EAAAA,UAAS,cAC/BP,KAAM,CACyE,IAA5EgD,EAASI,QAAOC,GAAiD,IAAzC,IAAIC,KAAKD,EAAKE,YAAYC,aAAmBL,OAAWH,EAASG,OAAO,EACpB,IAA5EH,EAASI,QAAOC,GAAiD,IAAzC,IAAIC,KAAKD,EAAKE,YAAYC,aAAmBL,OAAWH,EAASG,OAAO,EACpB,IAA5EH,EAASI,QAAOC,GAAiD,IAAzC,IAAIC,KAAKD,EAAKE,YAAYC,aAAmBL,OAAWH,EAASG,OAAO,EACpB,IAA5EH,EAASI,QAAOC,GAAiD,IAAzC,IAAIC,KAAKD,EAAKE,YAAYC,aAAmBL,OAAWH,EAASG,OAAO,EACjG,EAAG,EAAG,MAKdzC,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACTK,YAAY,GAEdC,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDC,KAAM,EACNC,IAAK,GACLT,SAAS,EACTI,KAAM,CACJJ,SAAS,GAEXM,MAAO,CACLN,SAAS,KAIfU,SAAU,CACRC,KAAM,CACJC,YAAa,GAEfE,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAQ3BhD,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,OACVC,MAAM,UACNC,OACEV,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAT,SAAA,CACGoE,EAAYE,OAAO,OAMxB5D,MAAO,mDACPC,OAAQ,GACRI,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,OACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,uBACjBC,YAAa,wBACbL,KAAM,CAACiD,EAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GACnClB,MAAM,KAIZrB,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDH,SAAS,GAEXO,EAAG,CACDP,SAAS,IAGbU,SAAU,CACRC,KAAM,CACJC,YAAa,EACbC,QAAS,IAEXC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAQ3BhD,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,OACVC,MAAM,SACNC,OACEP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,SACGqE,EAASC,SAGd5D,MAAO,yDACPC,OAAQ,GACRI,OACEd,EAAAA,EAAAA,KAACyD,EAAAA,GAAS,CACRpD,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CACN,uCACA,6CACA,2BACA,uCACA,qBACA,2BACA,2BACA,uCACA,mDACA,6CACA,uCACA,8CAEFC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,uBACjBC,YAAa,wBACbL,KAAM,CAACkD,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/CV,cAAe,MAIrB9B,QAAS,CACPI,qBAAqB,EACrBH,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbE,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACT4B,WAAW,GAEbtB,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDH,KAAM,CACJJ,SAAS,EACTK,YAAY,EACZuB,WAAW,GAEbtB,MAAO,CACLN,SAAS,cASpB,E,8CCtTX,MAwJA,EAxJevC,IAA4C,IAA3C,KAAE0B,EAAI,MAAEyD,EAAK,MAAE9D,EAAK,OAAEI,EAAM,MAAE2D,GAAOpF,EACnD,MAAOqF,EAAaC,GAAkBC,EAAAA,SAAe,MAM/CC,GAJaC,EAAAA,IAAmBA,EAAAA,KAClBA,EAAAA,MACDA,EAAAA,MAAeC,QAAQ,IAE7BD,EAAAA,MACVE,OAAOjE,EAAKkE,KAAIb,GAAQA,EAAKlF,QAC7BuF,MAAM,CAAC,EAAG/D,KAEPwE,EAAOJ,EAAAA,MACVE,OAAO,CAAC,EAAGP,IACXA,MAAM,CAAC3D,EAAQ,IAwBZqE,EAAWL,EAAAA,MACd/C,GAAEqD,GAAKP,EAAKO,EAAElG,MAAQ2F,EAAKQ,YAAc,IACzCC,IAAGF,GAAKF,EAAKE,EAAEhF,SACfmF,IAAG,IAAML,EAAK,KACdM,MAAMV,EAAAA,IAJQA,CAIW/D,GAY5B,OACElB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,gBAAeN,UAC5BF,EAAAA,EAAAA,MAAA,OACEQ,UAAU,MACVQ,MAAOA,EACPI,OAAQA,EACR2E,YAhBmBC,IACvB,MAAM3D,EAAI2D,EAAEC,YAAYC,QAClBC,EAAQtE,KAAKC,MAAMO,EAAI8C,EAAKiB,QAClCnB,EAAekB,EAAM,EAcjBE,aAXmBC,KACvBrB,EAAe,KAAK,EAUe/E,SAAA,EAM/BC,EAAAA,EAAAA,KAAA,KACEK,UAAU,aACV+F,IA9CSA,IACf,MAAMC,EAAQpB,EAAAA,IAAcD,GAC5BC,EAAAA,GAAUmB,GAAKE,KAAKD,EAAM,EA6CpBE,UAAS,eAAAC,OAAiBnB,EAAK,GAAE,QAEnCrF,EAAAA,EAAAA,KAAA,QACEiD,KAAK,UACLsC,EAAGD,EACHmB,QAAS,IAiDTvF,EAAKkE,KAAI,CAACb,EAAMyB,KAEdnG,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,QACEa,MAAO,GACPI,OAAQA,EAASoE,EAAKd,EAAKhE,OAC3B2B,EAAG8C,EAAKT,EAAKlF,MAAQ2F,EAAKQ,YAAc,EAAI,GAC5ClD,EAAG+C,EAAKd,EAAKhE,OACb0C,KAAK,UACLyD,GAAG,IAAIC,GAAG,KANDX,IAQXhG,EAAAA,EAAAA,KAAA,QACEiD,KAAK,OACLf,EAAG8C,EAAKT,EAAKlF,MAAQ2F,EAAKQ,YAAc,EACxClD,EAAG+C,EAAKd,EAAKhE,OAAS,GACtBqG,WAAW,SAAQ7G,SAElBwE,EAAKhE,MAAQgE,EAAKhE,MAAQ,OAfvByF,SAsBV,E,eC9FV,MAkxDA,EAlxDca,KAEZ,MAAMC,GAASC,EAAAA,EAAAA,QAAO,OAEd9C,MAAO+C,IAAYC,EAAAA,EAAAA,MACnBC,SAAUC,IAAeF,EAAAA,EAAAA,MACzBG,SAAUC,IAAUJ,EAAAA,EAAAA,MACpBK,SAAUC,IAAUN,EAAAA,EAAAA,MACpBO,YAAaC,IAAcR,EAAAA,EAAAA,MAC7B,WAAES,EAAU,QAAEC,EAAO,WAAEC,IAAeX,EAAAA,EAAAA,MAErCY,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCX,EAAUY,IAAeD,EAAAA,EAAAA,UAAS,KAClCE,EAAYC,IAAiBH,EAAAA,EAAAA,UAAS,KACtCI,EAAYC,IAAiBL,EAAAA,EAAAA,UAAS,KACtCM,EAASC,IAAcP,EAAAA,EAAAA,WAAS,IAChCQ,EAAUC,IAAeT,EAAAA,EAAAA,WAAS,IAElCU,EAAaC,IAAkBX,EAAAA,EAAAA,UAAS,KACxCY,EAAYC,IAAiBb,EAAAA,EAAAA,UAAS,KACtCc,EAAcC,IAAmBf,EAAAA,EAAAA,UAAS,KAC1CgB,EAAYC,IAAiBjB,EAAAA,EAAAA,UAAS,KAEtCkB,EAAgBC,IAAqBnB,EAAAA,EAAAA,UAAS,KAE9CoB,EAAcC,KAAmBrB,EAAAA,EAAAA,UAAS,KAC1CsB,GAAaC,KAAkBvB,EAAAA,EAAAA,UAAS,KACxCwB,GAAeC,KAAmBzB,EAAAA,EAAAA,UAAS,KAC3C0B,GAAaC,KAAiB3B,EAAAA,EAAAA,UAAS,KAEvC4B,GAAUC,KAAe7B,EAAAA,EAAAA,UAAS,KAElC8B,GAAYC,KAAgB/B,EAAAA,EAAAA,UAAS,KACrCgC,GAAaC,KAAiBjC,EAAAA,EAAAA,UAAS,KACvCkC,GAAcC,KAAkBnC,EAAAA,EAAAA,UAAS,KACzCoC,GAAaC,KAAiBrC,EAAAA,EAAAA,UAAS,KACvCsC,GAAeC,KAAmBvC,EAAAA,EAAAA,UAAS,KAE3CwC,GAAaC,KAAiBzC,EAAAA,EAAAA,WAAS,IACvC0C,GAAaC,KAAiB3C,EAAAA,EAAAA,WAAS,IACvC4C,GAAaC,KAAiB7C,EAAAA,EAAAA,WAAS,IAEvC8C,GAAWC,KAAgB/C,EAAAA,EAAAA,UAAS,IAEpCgD,GAAYC,KAAiBjD,EAAAA,EAAAA,WAAS,IACtCkD,GAAaC,KAAkBnD,EAAAA,EAAAA,WAAS,IACxCoD,GAAaC,KAAkBrD,EAAAA,EAAAA,WAAS,IACxCsD,GAAaC,KAAkBvD,EAAAA,EAAAA,WAAS,IACxCwD,GAAaC,KAAkBzD,EAAAA,EAAAA,WAAS,IACxC0D,GAAaC,KAAkB3D,EAAAA,EAAAA,WAAS,IAExC4D,GAAYC,KAAgB7D,EAAAA,EAAAA,WAAS,IACrC8D,GAAaC,KAAiB/D,EAAAA,EAAAA,WAAS,IACvCgE,GAAaC,KAAiBjE,EAAAA,EAAAA,WAAS,IACvCkE,GAAaC,KAAiBnE,EAAAA,EAAAA,WAAS,IACvCoE,GAAaC,KAAiBrE,EAAAA,EAAAA,WAAS,IAEvCsE,GAAcC,KAAmBvE,EAAAA,EAAAA,WAAS,IAC1CwE,GAAUC,KAAczE,EAAAA,EAAAA,WAAS,IAEjC0E,GAAQC,KAAY3E,EAAAA,EAAAA,UAAS,KAE7B4E,GAAaC,KAAkB7E,EAAAA,EAAAA,UAAS,KACxC8E,GAAaC,KAAkB/E,EAAAA,EAAAA,UAAS,KAExCgF,GAAWC,KAAgBjF,EAAAA,EAAAA,UAAS,KACpCkF,GAASC,KAAcnF,EAAAA,EAAAA,aACvBoF,GAAaC,KAAiBrF,EAAAA,EAAAA,UAAS,IACvCsF,GAAMC,KAAUvF,EAAAA,EAAAA,UAAS,KACzBwF,GAAYC,KAAgBzF,EAAAA,EAAAA,UAAS,KACrC0F,GAAWC,KAAgB3F,EAAAA,EAAAA,UAAS,IAErC4F,GAAcC,cAGpBC,EAAAA,EAAAA,YAAU,KAERnB,GAAU,WAIVoB,YAAW,KACTtB,IAAaD,GAAS,GACrB,IAAM,KAGXsB,EAAAA,EAAAA,YAAU,KAERT,GAActG,EAAOiH,QAAUjH,EAAOiH,QAAQC,YAAc,IAAM,EAAE,GACnE,CAAClH,EAAOiH,WAIXF,EAAAA,EAAAA,YAAU,KACV,MAAMI,EAAevG,EAAWpD,QAAO4J,IAAI,IAAA1O,EAAA,OAAiD,QAAjDA,EAAI0O,EAAKC,WAAaD,EAAKE,SAAWF,EAAKG,cAAM,IAAA7O,OAAA,EAA9CA,EAAiD8O,QAAQ,kBAAS,mBAASC,cAAcC,SAASnB,GAAKiB,QAAQ,kBAAS,mBAASC,cAAc,IAC3L7F,EAAwB,KAAT2E,GAAc3F,EAAauG,GAC1CrG,EAAoB,KAATyF,GAAc1F,EAAUsG,EAAa,GAC/C,CAACZ,MAGJQ,EAAAA,EAAAA,YAAU,KACV,MAAMI,EAAelF,EAAWzE,QAAO4J,IAAI,IAAAO,EAAA,OAAiD,QAAjDA,EAAIP,EAAKC,WAAaD,EAAKE,SAAWF,EAAKG,cAAM,IAAAI,OAAA,EAA9CA,EAAiDH,QAAQ,kBAAS,mBAASC,cAAcC,SAASjB,GAAWe,QAAQ,kBAAS,mBAASC,cAAc,IACjMrF,EAAiC,KAAfqE,GAAoBxE,EAAakF,EAAa,GAC/D,CAACV,MAIJM,EAAAA,EAAAA,YAAU,KAGR,MACMa,GADc,IAAIlK,MACSE,WAG3BiK,EAAOjH,EAAWpD,QAAOC,GAAQ,IAAIC,KAAKD,EAAKE,YAAYC,aAAegK,IAChF9F,EAAc+F,GAGd,MAAMC,EAASlH,EAAWpD,QAAOC,IAAyB,IAAjBA,EAAKsK,UAC9C7F,EAAc4F,GACd1F,EAAkB0F,EAAO,GAExB,CAAClH,KAINmG,EAAAA,EAAAA,YAAU,KACR,MAAMiB,EAAa,GAEDC,WAEhB,IAAIC,QAAiBC,EAAAA,EAAAA,MAErBvH,EAAWtC,KAAI,CAAC8J,EAAQlJ,KAEFgJ,GAAWA,EAAS3K,OAAxC,MACMqK,GAAe,IAAIlK,MAAOE,WAC1ByK,EAAeH,EAASI,MAAKC,GAAMA,EAAGC,WAAaJ,EAAOb,QAAW,IAAI7J,KAAK6K,EAAGE,WAAW7K,aAAegK,SAE5Fc,IAAjBL,GACFL,EAAWW,KAAKN,EAClB,IAEFrG,EAAgBgG,EAAW,EAG7BY,EAAW,GAEV,CAAChI,KAIFmG,EAAAA,EAAAA,YAAU,KACR,MAAMiB,EAAa,GAEDC,WAGhBvG,GAAY,GAEZ,IAAIwG,QAAiBW,EAAAA,EAAAA,MAErB,MAAMzI,EAAW,IAAIC,GAGrBH,EAAQ5B,KAAI,CAAC8J,EAAQlJ,KAEnB,IAAI4J,EAAsB,OAAVzI,QAAU,IAAVA,OAAU,EAAVA,EAAY0I,WAAWC,GAAYA,EAAQC,OAASb,EAAOb,SAC3E,MAAM2B,EAAa9I,EAAS0I,GAE5B,IAAIK,EAAc1I,EAAM6H,MAAMc,GAAYA,EAAQhJ,SAASkI,MAAKe,GAAOA,EAAI/Q,MAAkB,OAAV4Q,QAAU,IAAVA,OAAU,EAAVA,EAAY5Q,QAE/F,MAAMgR,EAAyB,OAAXH,QAAW,IAAXA,OAAW,EAAXA,EAAaxP,MAC3B4P,EAAyB,OAAXJ,QAAW,IAAXA,GAAAA,EAAaK,KAAkB,OAAXL,QAAW,IAAXA,OAAW,EAAXA,EAAaK,KAAO,GAEtDC,EAAWrB,EAAOsB,KAAOtB,EAAOsB,KAAKC,MAAM,KAAO,GAClDlL,EAAI,IAAIf,KAAK+L,EAAS,IAC1BG,EAAOnL,EAAEoL,cACTC,EAAQC,OAAOtL,EAAEb,WAAW,GAAGoM,SAAS,EAAG,KAC3CC,EAAMF,OAAOtL,EAAEyL,WAAWF,SAAS,EAAG,KACtCG,EAAe,GAAAzK,OAAMuK,EAAG,KAAAvK,OAAIoK,EAAK,KAAApK,OAAIkK,GAEjCQ,EAAgBhC,EAAO7P,KAAKmP,SAAS,KAAOU,EAAO7P,KAAKoR,MAAM,OAAO,GAAKvB,EAAO7P,KAEjF8R,EAAcnC,EAAWA,EAAS3K,OAAS,GAC3C+M,EAAYpC,EAAWA,EAAS1K,QAAO+K,GAAMA,EAAGC,WAAa3B,KAAe,GAC5E0D,EAAgBrC,EAAWA,EAAS1K,QAAO+K,GAAMA,EAAGC,WAAaJ,EAAOb,SAAU,GAElFiD,EAAMtK,EAAQ1C,QAAO+K,GAAqB,KAAfA,EAAGkC,UACpCrJ,EAAcoJ,GAEd,MAAME,EAAOxK,EAAQ1C,QAAO+K,GAAqB,KAAfA,EAAGkC,UACrCnJ,EAAcoJ,GAEd,MAAMC,EAAS,CACbC,OAAQxC,EAAOwC,OACfxD,KAAM,CACJ7O,KAAM6R,EACNS,KAAK,EACLC,WAAY,cAEdC,MAAO3C,EAAOb,OACdiC,KAAMD,EACNH,QAASE,GAA4B,GACrC0B,MAAiB,OAAV9B,QAAU,IAAVA,OAAU,EAAVA,EAAY8B,MACnBC,MAAO,CACLxR,MAAOmB,KAAKsQ,MAA6B,IAAvBX,EAAchN,QAAgB8M,EAAcC,EAAU/M,SACxE4N,OAAQ,gBAAkBhB,EAC1B3Q,MAAO,WAET4R,SAAUjB,GAGZnC,EAAWW,KAAKgC,EAAO,IAGzB,MACMU,EAAa,IADK,IAAIrD,GAAYxK,QAAQ+K,GAAOA,EAAGwC,QAAUlE,MAC5ByE,MAAK,CAACC,EAAGC,IAC5CA,EAAEP,MAAMxR,MAAM8R,EAAEN,MAAMxR,QAG3BuH,EAAYqK,GAEZrE,YAAW,KACTxF,GAAW,EAAM,GAChB,OAAO,EAGZoH,EAAW,GAEV,CAAC1I,EAASU,KAIbmG,EAAAA,EAAAA,YAAU,KACR,MAAM0E,EAAc,GAEFxD,WAEhB1H,EAAMjC,KAAI2J,UACR,MAAMyD,EAAa,CACtBpT,GAAIqT,EAAQrT,GACZC,KAAMoT,EAAQhS,MACdiS,MAAOD,EAAQE,WACVC,QAASH,EAAQI,aACjBC,IAAKL,EAAQK,IACbhD,QAAS2C,EAAQ3C,QACjBI,QAASuC,EAAQvC,SAEnBqC,EAAY9C,KAAK+C,EAAW,IAG9BxK,EAAYuK,EAAY,EAG1B7C,EAAW,GAEX,CAACrI,IAIH,MAAM0L,GAAWC,IACH,YAARA,IACFtI,IAAe,GACfF,IAAe,GACfI,IAAe,GACfE,GAAa,GACbE,IAAc,GACdE,IAAe,GACfwB,GAAU,YAEA,YAARsG,IACFtI,IAAe,GACfF,IAAe,GACfI,IAAe,GACfE,GAAa,GACbE,IAAc,GACdE,IAAe,GACfwB,GAAU,YAEA,2DAARsG,IACFtI,IAAe,GACfF,IAAe,GACfI,IAAe,GACfE,GAAa,GAGb4B,GAAU,0DACZ,EAIIuG,GAAaC,IAEjB,OADA5G,IAAgB,GACR4G,GAGN,KAAK,EAAE,CACLC,QAAQC,IAAI,qFAAqBF,GACjCG,aAAapG,IAGb/B,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GAGfA,IAAe,GAEf,IAAI4H,EAAI,EACRpG,GAAWqG,aAAY,KAChBD,EAAK,IAAM,IACdpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,IAEjB4H,GAAG,GACF,MAEH1H,IAAc,GACdE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GAGf0B,YAAW,IAAKV,GAActG,EAAOiH,QAAUjH,EAAOiH,QAAQyF,YAAc,IAAM,IAAI,KAGtF,MAAMC,EAAcjP,KAAKkP,MAGnBC,GAAc,IAAInP,MAAOoP,WAC/BT,QAAQC,IAAI,gBAAiBO,GAG7B,MAAME,EAAWJ,EAA0B,KAAZE,EAE/B,IAGIG,EAHAxC,EAAM5J,EAAWpD,QAAOC,GAAQ,IAAIC,KAAKD,EAAKE,YAAYsP,UAAYF,IAEtEG,EAAa,GAKjBC,EAAAA,EAAS7O,KAAK8O,IACZJ,EAAY,EAEZxC,EAAIlM,KAAKb,IACH4P,KAAKC,MAAM7P,EAAK8P,UAAUjF,MAAKkF,GAAQA,EAAKC,MAAQL,EAAS5U,QAC/DwU,GACF,IAGF,MAAMU,EAAM,CACVD,IAAKL,EAAS7U,KACdoV,MAAOX,GAETE,EAAWvE,KAAK+E,EAAI,IAItB5K,GAAYoK,GAGZtL,EAAe4I,GACf1J,EAAW0J,GAGX,MAAMoD,EAAShN,EAAWpD,QAAOC,GAAQ,IAAIC,KAAKD,EAAKE,YAAYsP,UAAYF,IAC/EvK,GAAeoL,GAOf,MAAM9F,EAAS7F,EAAWzE,QAAOC,IAAyB,IAAjBA,EAAKsK,SAAoB,IAAIrK,KAAKD,EAAKE,YAAYsP,UAAYF,IACxGnK,GAAekF,GAEf,IAAI+F,EAAQ,GACRC,EAAY,EAIhB,IAAK,IAAItB,EAAE,EAAGA,GAAG,GAAIA,IAAK,CAGxBsB,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,IAAI9O,KAAKD,EAAKE,YAAYmP,YAAcN,IAAK,IAAI9O,MAAOoP,aAC7EvP,OAEpB,MAAMoN,EAAQ,CACZpS,KAAMiU,EAAE,GAAK,IAAKA,EAAI,MAAYA,EAAI,MACtC/S,MAAOqU,GAGTD,EAAMlF,KAAKgC,EACb,CAEA3H,GAAc6K,GAEd,KACF,CAGA,KAAK,EAAE,CACLtB,aAAapG,IAEb/B,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GAGdA,IAAe,GAEf,IAAI4H,EAAI,EACRpG,GAAWqG,aAAY,KACfD,EAAK,IAAM,IACdpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,IAEjB4H,GAAG,GACF,MAEL1H,IAAc,GACdE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GAGf0B,YAAW,IAAKV,GAActG,EAAOiH,QAAUjH,EAAOiH,QAAQyF,YAAc,IAAM,IAAI,KAGtF,MAKMK,EALcrP,KAAKkP,MAKM,OAFb,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAG,IAAIlP,MAAOqQ,UAAW,GAG9D7H,GAAa,IAAIxI,KAAKqP,GAAUiB,sBAIhC,IAEIhB,EAFAxC,EAAM5J,EAAWpD,QAAOC,GAAQ,IAAIC,KAAKD,EAAKE,YAAYsP,UAAYF,IACtEG,EAAa,GAGjBb,QAAQC,IAAI,SAAU9B,GACtB6B,QAAQC,IAAI,aAAca,EAAAA,GAE1BA,EAAAA,EAAS7O,KAAK8O,IACZJ,EAAY,EAEZxC,EAAIlM,KAAKb,IACH4P,KAAKC,MAAM7P,EAAK8P,UAAUjF,MAAKkF,GAAQA,EAAKC,MAAQL,EAAS5U,QAC/DwU,GACF,IAGF,MAAMU,EAAM,CACVD,IAAKL,EAAS7U,KACdoV,MAAOX,GAETE,EAAWvE,KAAK+E,EAAI,IAGtBrB,QAAQC,IAAI,eAAgBY,GAC5BpK,GAAYoK,GAEZtL,EAAe4I,GACf1J,EAAW0J,GAGX,MAAMoD,EAAShN,EAAWpD,QAAOC,GAAQ,IAAIC,KAAKD,EAAKE,YAAYsP,UAAYF,IAC/EvK,GAAeoL,GAOf,MAAM9F,EAAS7F,EAAWzE,QAAOC,IAAyB,IAAjBA,EAAKsK,SAAoB,IAAIrK,KAAKD,EAAKE,YAAYsP,UAAYF,IACxGnK,GAAekF,GAEf,IAAImG,EAAQ,GACRC,EAAU,GACVJ,EAAY,EAChB,IAAK,IAAItB,EAAE,EAAGA,GAAG,EAAGA,IAAK,CACvB,GAAQ,IAAJA,EAAO,CACT0B,EAAU,eAIVJ,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,IAAI9O,KAAKD,EAAKE,YAAYoQ,WAAcvB,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAG,IAAI9O,MAAOqQ,YACzHxQ,MACtB,CACA,GAAQ,IAAJiP,EAAO,CACT0B,EAAU,eAEVJ,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,IAAI9O,KAAKD,EAAKE,YAAYoQ,WAAcvB,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAG,IAAI9O,MAAOqQ,YACzHxQ,MACtB,CACA,GAAQ,IAAJiP,EAAO,CACT0B,EAAU,eAEVJ,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,IAAI9O,KAAKD,EAAKE,YAAYoQ,WAAcvB,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAG,IAAI9O,MAAOqQ,YACzHxQ,MACtB,CACA,GAAQ,IAAJiP,EAAO,CACT0B,EAAU,eAEVJ,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,IAAI9O,KAAKD,EAAKE,YAAYoQ,WAAcvB,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAG,IAAI9O,MAAOqQ,YACzHxQ,MACtB,CACA,GAAQ,IAAJiP,EAAO,CACT0B,EAAU,eAEVJ,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,IAAI9O,KAAKD,EAAKE,YAAYoQ,WAAcvB,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAG,IAAI9O,MAAOqQ,YACzHxQ,MACtB,CACA,GAAQ,IAAJiP,EAAO,CACT0B,EAAU,eAEVJ,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,IAAI9O,KAAKD,EAAKE,YAAYoQ,WAAcvB,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAG,IAAI9O,MAAOqQ,YACzHxQ,MACtB,CACA,GAAQ,IAAJiP,EAAO,CACT0B,EAAU,eAEVJ,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,IAAI9O,KAAKD,EAAKE,YAAYoQ,WAAavB,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAG,IAAI9O,MAAOqQ,YACxHxQ,MACtB,CAEA,MAAMoN,EAAQ,CACRpS,KAAM2V,EACNzU,MAAOqU,GAEbG,EAAMtF,KAAKgC,EACb,CACA0B,QAAQC,IAAI,SAAU2B,GACtB/K,GAAe+K,GACf,KACF,CAGA,KAAK,EAAE,CACL1B,aAAapG,IAGb/B,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GAGdA,IAAe,GAEf,IAAI4H,EAAI,EACRpG,GAAWqG,aAAY,KACjBD,EAAK,IAAM,IACdpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,IAEhB4H,GAAG,GACF,MAEJ1H,IAAc,GACdE,IAAe,GACfE,IAAe,GACfE,IAAe,GAGf4B,YAAW,IAAKV,GAActG,EAAOiH,QAAUjH,EAAOiH,QAAQyF,YAAc,IAAM,IAAI,KAGtF,MAKMK,EALcrP,KAAKkP,MAKgB,QAFvB,IAAIlP,MAAOwM,UAAY,GAMzC,IAEI8C,EAFAxC,EAAM5J,EAAWpD,QAAOC,GAAQ,IAAIC,KAAKD,EAAKE,YAAYsP,UAAYF,IACtEG,EAAa,GAGjBb,QAAQC,IAAI,SAAU9B,GAEtB2C,EAAAA,EAAS7O,KAAK8O,IACZJ,EAAY,EAEZxC,EAAIlM,KAAKb,IACH4P,KAAKC,MAAM7P,EAAK8P,UAAUjF,MAAKkF,GAAQA,EAAKC,MAAQL,EAAS5U,QAC/DwU,GACF,IAGF,MAAMU,EAAM,CACVD,IAAKL,EAAS7U,KACdoV,MAAOX,GAETE,EAAWvE,KAAK+E,EAAI,IAGtBrB,QAAQC,IAAI,eAAgBY,GAC5BpK,GAAYoK,GAEZtL,EAAe4I,GAEf1J,EAAW0J,GAGX,MAAMoD,EAAShN,EAAWpD,QAAOC,GAAQ,IAAIC,KAAKD,EAAKE,YAAYsP,UAAYF,IAC/EvK,GAAeoL,GAOf,MAAM9F,EAAS7F,EAAWzE,QAAOC,IAAyB,IAAjBA,EAAKsK,SAAoB,IAAIrK,KAAKD,EAAKE,YAAYsP,UAAYF,IACxGnK,GAAekF,GAEf,IAAIgG,EAAY,EACZK,EAAS,GAEb,IAAK,IAAI3B,EAAE,EAAGA,GAAG,GAAIA,IAAK,CAExBsB,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,IAAI9O,KAAKD,EAAKE,YAAYuM,YAAa,IAAIxM,MAAOE,aAAe,IAAIF,KAAKD,EAAKE,YAAYC,aAChHL,OACpB,MAAMoN,EAAQ,CACZpS,KAAMiU,EAAE,GAAK,IAAKA,EAAI,GAAIA,EAC1B/S,MAAOqU,EAAY,EAAIA,EAAY,IAErCK,EAAOxF,KAAKgC,EACd,CACA0B,QAAQC,IAAI,WAAY6B,GACxB/K,GAAgB+K,GAChB,KACF,CAGA,KAAK,EAAE,CACL5B,aAAapG,IAGb/B,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GAGdA,IAAe,GAEf,IAAI4H,EAAI,EACRpG,GAAWqG,aAAY,KACjBD,EAAK,IAAM,IACdpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,IAEhB4H,GAAG,GACF,MAEJ1H,IAAc,GACdE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GAGf0B,YAAW,IAAKV,GAActG,EAAOiH,QAAUjH,EAAOiH,QAAQyF,YAAc,IAAM,IAAI,KAGtF,IAEIM,EAFAxC,EAAM5J,EAAWpD,QAAOC,GAAwD,SAAhDA,EAAKE,WAAWgM,MAAM,KAAK,GAAGA,MAAM,KAAK,KACzEuD,EAAa,GAGjBb,QAAQC,IAAI,aAAc9B,GAE1B2C,EAAAA,EAAS7O,KAAK8O,IACZJ,EAAY,EAEZxC,EAAIlM,KAAKb,IACH4P,KAAKC,MAAM7P,EAAK8P,UAAUjF,MAAKkF,GAAQA,EAAKC,MAAQL,EAAS5U,QAC/DwU,GACF,IAGF,MAAMU,EAAM,CACVD,IAAKL,EAAS7U,KACdoV,MAAOX,GAETE,EAAWvE,KAAK+E,EAAI,IAGtBrB,QAAQC,IAAI,eAAgBY,GAC5BpK,GAAYoK,GAEZtL,EAAe4I,GACf1J,EAAW0J,GAKV,MAAMoD,EAAShN,EAAWpD,QAAOC,GAAwD,SAAhDA,EAAKE,WAAWgM,MAAM,KAAK,GAAGA,MAAM,KAAK,KAClFnH,GAAeoL,GAGhB,MAAM9F,EAAS7F,EAAWzE,QAAOC,IAAyB,IAAjBA,EAAKsK,SAAoE,SAAhDtK,EAAKE,WAAWgM,MAAM,KAAK,GAAGA,MAAM,KAAK,KAC3G/G,GAAekF,GAEf0C,EAAIlM,KAAKb,GAAO4O,QAAQC,IAAI,UAAW,IAAI5O,KAAKD,EAAKE,YAAYC,WAAW,KAG5E,IAAIwQ,EAAQ,GACRC,EAAY,GACZP,EAAY,EAChB,IAAK,IAAItB,EAAE,EAAGA,GAAG,GAAIA,IAAK,CACxB,GAAQ,IAAJA,EAAO,CACT6B,EAAY,uCAEZP,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,IAAI9O,KAAKD,EAAKE,YAAYC,WAAW,IAC1DL,MACtB,CACA,GAAQ,IAAJiP,EAAO,CACT6B,EAAY,6CAEZP,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,IAAI9O,KAAKD,EAAKE,YAAYC,WAAW,IAC1DL,MACtB,CACA,GAAQ,IAAJiP,EAAO,CACT6B,EAAY,2BAEZP,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,IAAI9O,KAAKD,EAAKE,YAAYC,WAAW,IAC1DL,MACtB,CACA,GAAQ,IAAJiP,EAAO,CACT6B,EAAY,uCAEZP,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,IAAI9O,KAAKD,EAAKE,YAAYC,WAAW,IAC1DL,MACtB,CACA,GAAQ,IAAJiP,EAAO,CACT6B,EAAY,qBAEZP,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,IAAI9O,KAAKD,EAAKE,YAAYC,WAAW,IAC1DL,MACtB,CACA,GAAQ,IAAJiP,EAAO,CACT6B,EAAY,2BAEZP,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,IAAI9O,KAAKD,EAAKE,YAAYC,WAAW,IAC1DL,MACtB,CACA,GAAQ,IAAJiP,EAAO,CACT6B,EAAY,2BAEZP,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,IAAI9O,KAAKD,EAAKE,YAAYC,WAAW,IAC1DL,MACtB,CACA,GAAQ,IAAJiP,EAAO,CACT6B,EAAY,uCAEZP,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,IAAI9O,KAAKD,EAAKE,YAAYC,WAAW,IAC1DL,MACtB,CACA,GAAQ,IAAJiP,EAAO,CACT6B,EAAY,mDAEZP,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,IAAI9O,KAAKD,EAAKE,YAAYC,WAAW,IAC1DL,MACtB,CACA,GAAQ,KAAJiP,EAAQ,CACV6B,EAAY,6CAEZP,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,IAAI9O,KAAKD,EAAKE,YAAYC,WAAW,IAC1DL,MACtB,CACA,GAAQ,KAAJiP,EAAQ,CACV6B,EAAY,uCAEZP,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,IAAI9O,KAAKD,EAAKE,YAAYC,WAAW,IAC1DL,MACtB,CACA,GAAQ,KAAJiP,EAAQ,CACV6B,EAAY,6CAEZP,EADgBtD,EAAIhN,QAAOC,GAAQ+O,IAAM,IAAI9O,KAAKD,EAAKE,YAAYC,WAAW,IAC1DL,MACtB,CAEA,MAAMoN,EAAQ,CACRpS,KAAM8V,EACN5U,MAAOqU,EAAY,EAAIA,EAAY,IAErCM,EAAMzF,KAAKgC,EACjB,CACA0B,QAAQC,IAAI,UAAW8B,GACvB9K,GAAe8K,GACf,KACF,CAGA,KAAK,EAAE,CACL/B,QAAQC,IAAI,oDAAazG,GAAaE,IAEtCwG,aAAapG,IAGb/B,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GAGfA,IAAe,GAEd,IAAI4H,EAAI,EACTpG,GAAWqG,aAAY,KAChBD,EAAK,IAAM,IACdpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,KAEZ4H,EAAE,GAAK,IAAM,IAChBpI,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,IAEhB4H,GAAG,GACH,MAEH1H,IAAc,GACdE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GAGf0B,YAAW,IAAKV,GAActG,EAAOiH,QAAUjH,EAAOiH,QAAQyF,YAAc,IAAM,IAAI,KAEtF,IAAI4B,EAAU,IAAI5Q,KAAKmI,GAAY8D,MAAM,KAAK,GAAI9D,GAAY8D,MAAM,KAAK,GAAG,EAAG9D,GAAY8D,MAAM,KAAK,IAClG4E,EAAS,IAAI7Q,KAAKqI,GAAY4D,MAAM,KAAK,GAAI5D,GAAY4D,MAAM,KAAK,GAAG,EAAG5D,GAAY4D,MAAM,KAAK,IAGjG6E,EAAO5N,EAAWpD,QAAOC,GAAQ,IAAIC,KAAKD,EAAKE,YAAc2Q,GAAW,IAAI5Q,KAAKD,EAAKE,YAAc4Q,IACxG3M,EAAe4M,GAIf,MAAMZ,EAAShN,EAAWpD,QAAOC,GAAQ,IAAIC,KAAKD,EAAKE,YAAc2Q,GAAW,IAAI5Q,KAAKD,EAAKE,YAAc4Q,IAC5G/L,GAAeoL,GAKf,MAAM9F,EAAS7F,EAAWzE,QAAOC,GAAQ,IAAIC,KAAKD,EAAKE,YAAc2Q,GAAW,IAAI5Q,KAAKD,EAAKE,YAAc4Q,IAC5G3L,GAAekF,GAEf,IACIkF,EADAE,EAAa,GAGjBb,QAAQC,IAAI,gBAAiBkC,GAE7BrB,EAAAA,EAAS7O,KAAK8O,IACZJ,EAAY,EAEZwB,EAAKlQ,KAAKb,IACJ4P,KAAKC,MAAM7P,EAAK8P,UAAUjF,MAAKkF,GAAQA,EAAKC,MAAQL,EAAS5U,QAC/DwU,GACF,IAGF,MAAMU,EAAM,CACVD,IAAKL,EAAS7U,KACdoV,MAAOX,GAETE,EAAWvE,KAAK+E,EAAI,IAGtBrB,QAAQC,IAAI,eAAgBY,GAC5BpK,GAAYoK,GACZtL,EAAe4M,GACf1N,EAAW0N,GAKX,IAAIC,EAAU,GACVX,EAAY,EAEhB,KAAOQ,EAAQrB,UAAYsB,EAAOtB,WAAW,CAE3Ca,EADgBU,EAAKhR,QAAOC,GAAQ6Q,EAAQN,uBAAyB,IAAItQ,KAAKD,EAAKE,YAAYqQ,uBAC3EzQ,OACpB,MAAMoN,EAAQ,CACZpS,KAAM+V,EAAQpE,UAAUwE,WAAWnR,OAAS,EAAI,IAAI+Q,EAAQpE,UAAYoE,EAAQpE,UAAUwE,WAC1FjV,MAAOqU,EAAY,EAAIA,EAAY,IAErCW,EAAQ9F,KAAKgC,GAEb2D,EAAQK,QAAQL,EAAQpE,UAAY,EACtC,CAEAmC,QAAQC,IAAI,YAAamC,GACzBjL,GAAiBiL,GAEjB,KACF,EACF,EAGIG,GAAe7P,IACnB+G,GAAe/G,EAAE8P,OAAOpV,MAAM,EAG1BqV,GAAe/P,IACnBiH,GAAejH,EAAE8P,OAAOpV,MAAM,EAI1BsV,GAAaA,KACjBjK,IAAc,GACdE,IAAe,GACfE,IAAe,GACfE,IAAe,GAEfmH,aAAapG,IAEb/B,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,GACfE,IAAe,EAAM,EAIjBoK,GAAe5C,IACnBC,QAAQC,IAAIF,EAAKzF,GAAUyF,IAE3BxF,IAAaqI,IAAc,IACpBA,EACH,CAAC7C,IAAO6C,EAAe7C,MACtB,EAwCP,OACErT,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,aAAYN,SAAA,EACzBC,EAAAA,EAAAA,KAACgW,EAAAA,GAAU,KACXnW,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,gDAA+CN,SAAA,EAC5DC,EAAAA,EAAAA,KAACiW,EAAAA,GAAS,CAACC,KAAMzJ,MACjBzM,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wBAAuBN,UAElCC,EAAAA,EAAAA,KAACmW,EAAAA,GAAU,CAAChW,IAAE,EAAAJ,UACZC,EAAAA,EAAAA,KAACoW,EAAAA,SAAQ,CAACC,UAAUrW,EAAAA,EAAAA,KAACsW,EAAAA,GAAQ,CAAChW,MAAM,YAAaP,UAE/CF,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAT,SAAA,CACCgL,IACA/K,EAAAA,EAAAA,KAACuW,EAAAA,EAAe,CACftS,MAAO+C,EAAQ3C,OAAO,EACtB+C,SAAUA,EAAS/C,OACnBiD,SAAUC,EAAMlD,SAEjB,GAEA4G,IACAjL,EAAAA,EAAAA,KAACwW,EAAAA,EAAgB,CAChBvS,MAAOyD,EACPxD,SAAUyE,EACVxE,YAAa0E,EACbzE,SAAU2E,IAEX,GAEAoC,IACAnL,EAAAA,EAAAA,KAACyW,EAAgB,CAChBhX,WAAYkK,GAAS,GAAG8K,MACxB/U,WAAYiK,GAAS,GAAG8K,MACxB9U,WAAYgK,GAAS,GAAG8K,MACxB7U,WAAY+J,GAAS,GAAG8K,QAEzB,GAEApJ,IACArL,EAAAA,EAAAA,KAAC0W,EAAgB,CAChBvT,WAAYwG,GAAS,GAAG8K,MACxBrR,cAAeuG,GAAS,GAAG8K,MAC3BpR,gBAAiBsG,GAAS,GAAG8K,MAC7BnR,YAAaqG,GAAS,GAAG8K,QAEzB,GAEDlJ,IACAvL,EAAAA,EAAAA,KAAC2W,EAAgB,CAChB/S,YAAa+F,GAAS,GAAG8K,MACzB5Q,WAAY8F,GAAS,GAAG8K,MACxB3Q,WAAY6F,GAAS,IAAI8K,MACzB1Q,gBAAiB4F,GAAS,IAAI8K,QAE9B,GAEDhJ,IACAzL,EAAAA,EAAAA,KAAC4W,EAAgB,CAChB3S,MAAOyD,EACPxD,SAAUmF,GACVlF,YAAa0E,EACbzE,SAAUqF,KAEX,GAIfkC,IAAc3L,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZgG,IAAKU,EACLzG,UAAU,WACVC,MAAM,OACNC,OAAOP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,IACPC,OAAO,IAAI+D,MAAOsQ,qBAClBpU,QAAQV,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,UAAEC,EAAAA,EAAAA,KAAC6W,EAAAA,EAAK,CAACvX,KAAMwX,EAAAA,EAAMC,QAASlB,GAAYxV,UAAU,6BAA6BW,MAAO,CAACgW,OAAQ,eACzGlW,OACEd,EAAAA,EAAAA,KAACiX,EAAQ,CACPrS,MAAO,EACP1D,KAAM2I,GACNlF,MAAO,GA6BP9D,MAAOsM,GAAalM,OAAQ,QAKhD,GAID4K,IAAe7L,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZgG,IAAKU,EACLzG,UAAU,WACVC,MAAM,OACNC,OAAOP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,IACPC,MAAOsM,GAAY,MAAQ,IAAIvI,KAAK,IAAIA,KAAKuI,GAAU0D,MAAM,KAAK,GAAI1D,GAAU0D,MAAM,KAAK,GAAG,EAAG1D,GAAU0D,MAAM,KAAK,IAAIgF,QAAQ,IAAIjR,KAAKuI,GAAU0D,MAAM,KAAK,GAAI1D,GAAU0D,MAAM,KAAK,GAAG,EAAG1D,GAAU0D,MAAM,KAAK,IAAIO,UAAY,IAAI8D,qBACxOpU,QAAQV,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,UAAEC,EAAAA,EAAAA,KAAC6W,EAAAA,EAAK,CAACvX,KAAMwX,EAAAA,EAAMC,QAASlB,GAAYxV,UAAU,6BAA6BW,MAAO,CAACgW,OAAQ,eACzGlW,OACEd,EAAAA,EAAAA,KAACiX,EAAQ,CACPrS,MAAO,GACP1D,KAAM6I,GACNpF,MAAO,GAYP9D,MAAOsM,GAAalM,OAAQ,QAIhD,GAID8K,IAAe/L,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZgG,IAAKU,EACLzG,UAAU,WACVC,MAAM,OACNC,OAAOP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,IACPC,OAAO,IAAI+D,MAAO0S,eAAe,UAAW,CAAEtG,MAAO,SACrDlQ,QAAQV,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,UAAEC,EAAAA,EAAAA,KAAC6W,EAAAA,EAAK,CAACvX,KAAMwX,EAAAA,EAAMC,QAASlB,GAAYxV,UAAU,6BAA6BW,MAAO,CAACgW,OAAQ,eACzGlW,OACEd,EAAAA,EAAAA,KAACmX,EAAAA,EAAK,CACJvS,MAAO,GACP1D,KAAM+I,GAmCNtF,MAAO,GACP9D,MAAOsM,GAAalM,OAAQ,QAGhD,GAIDgL,IAAejM,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZgG,IAAKU,EACLzG,UAAU,WACVC,MAAM,OACNC,OAAOP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,IACPC,OAAO,IAAI+D,MAAOmM,cAClBjQ,QAAQV,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,UAAEC,EAAAA,EAAAA,KAAC6W,EAAAA,EAAK,CAACvX,KAAMwX,EAAAA,EAAMC,QAASlB,GAAYxV,UAAU,6BAA6BW,MAAO,CAACgW,OAAQ,eACzGlW,OACEd,EAAAA,EAAAA,KAACmX,EAAAA,EAAK,CACJvS,MAAO,IACP1D,KAAMiJ,GACNxF,MAAO,GAiBP9D,MAAOsM,GAAalM,OAAQ,QAIhD,GAIDkL,IAAenM,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZgG,IAAKU,EACLzG,UAAU,WACVC,MAAM,OACNC,OAAOP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,IACPC,MAAOkM,GAAc,MAAQE,GAC7BnM,QAAQV,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,UAAEC,EAAAA,EAAAA,KAAC6W,EAAAA,EAAK,CAACvX,KAAMwX,EAAAA,EAAMC,QAASlB,GAAYxV,UAAU,6BAA6BW,MAAO,CAACgW,OAAQ,eACzGlW,OACEd,EAAAA,EAAAA,KAACmX,EAAAA,EAAK,CACJvS,MAAO,IACP1D,KAAMmJ,GACN1F,MAAO,GACP9D,MAAOsM,GACPlM,OAAQ,QAI5B,IAGcpB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACO,UAAU,QAAON,SAAA,EAErBC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAEH,UAEVF,EAAAA,EAAAA,MAACuX,EAAAA,GAAI,CAACC,QAAQ,OAAOhX,UAAU,aAAYN,SAAA,EACrCC,EAAAA,EAAAA,KAACsX,EAAAA,GAAQ,CAAAvX,UACPC,EAAAA,EAAAA,KAACuX,EAAAA,GAAQ,CACPvW,MAAO,CAACwW,WAA0B,IAAd3M,GAAkB,YAAc,GAAImM,OAAQ,WAChED,QAASA,IAAMhE,GAAQ,WACvB0E,OAAsB,IAAd5M,GAAgB9K,SAAC,eAI7BC,EAAAA,EAAAA,KAACsX,EAAAA,GAAQ,CAAAvX,UACPC,EAAAA,EAAAA,KAACuX,EAAAA,GAAQ,CACPvW,MAAO,CAACwW,WAA0B,IAAd3M,GAAkB,YAAc,GAAImM,OAAQ,WAChED,QAASA,IAAMhE,GAAQ,WACvB0E,OAAsB,IAAd5M,GAAgB9K,SAAC,oBAOrCC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAEH,UAEVC,EAAAA,EAAAA,KAACoX,EAAAA,GAAI,CAACC,QAAQ,OAAOhX,UAAU,aAAaW,MAAO,CAAC0W,eAAgB,YAAY3X,UAC1EC,EAAAA,EAAAA,KAACsX,EAAAA,GAAQ,CAAAvX,UACPC,EAAAA,EAAAA,KAACuX,EAAAA,GAAQ,CACPvW,MAAO,CAACwW,WAA0B,IAAd3M,GAAkB,YAAc,GAAImM,OAAQ,WAChED,QAASA,IAAMhE,GAAQ,0DACvB0E,OAAsB,IAAd5M,GAAgB9K,SAAC,qEASvCF,EAAAA,EAAAA,MAAC8X,EAAAA,GAAK,CAACtX,UAAU,iBAAiBW,MAAO,CAAC4W,aAAc,MAAOrW,YAAa,UAAWsW,qBAAsB,YAAY9X,SAAA,EACvHC,EAAAA,EAAAA,KAAC8X,EAAAA,GAAS,CAAC1Y,GAAG,UAAU4B,MAAO,CAACe,QAASwI,GAAc,QAAU,QAAQxK,UACvEC,EAAAA,EAAAA,KAACF,EAAAA,GAAI,CAAAC,UACHC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAC8X,IAAE,EAAAhY,UACNF,EAAAA,EAAAA,MAAC8X,EAAAA,GAAK,CAACtX,UAAU,OAAMN,SAAA,EACrBF,EAAAA,EAAAA,MAACmY,EAAAA,GAAW,CAAChX,MAAO,CAACiX,UAAW,QAAQlY,SAAA,CAAC,sGAAoBiH,EAAQ3C,OAAS,EAAE,QAChFxE,EAAAA,EAAAA,MAACiY,EAAAA,GAAS,CAAA/X,SAAA,EACRF,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAC,SAAA,EACHC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAC8X,GAAI,GAAIG,GAAI,EAAGC,GAAI,EAAEpY,UACzBF,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAC,SAAA,EACHC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAEH,UACVF,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,0DAAyDN,SAAA,EACtEC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,6BAA4BN,SAAC,+EAC5CC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mBAAkBN,SAAEkI,EAAW5D,eAGlDrE,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAEH,UACVF,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,iEAAgEN,SAAA,EAC7EC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,6BAA4BN,SAAC,6GAC5CC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mBAAkBN,SAAEoI,EAAW9D,OAAO,eAM7DxE,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CAAC8X,GAAI,GAAIG,GAAI,EAAGC,GAAI,EAAEpY,SAAA,EACzBF,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAC,SAAA,EACHC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAEH,UACVF,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,kEAAiEN,SAAA,EAC9EC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,6BAA4BN,SAAC,4DAC5CC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mBAAkBN,SAAC,YAGtCC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAEH,UACVF,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,kEAAiEN,SAAA,EAC9EC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,6BAA4BN,SAAC,0CAC5CC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mBAAkBN,SAAC,eAKxCC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,eAKpBgI,GAECrI,EAAAA,EAAAA,KAACsW,EAAAA,GAAQ,KAETzW,EAAAA,EAAAA,MAACuY,EAAAA,GAAM,CAACC,MAAM,SAAShY,UAAU,cAAciY,OAAK,EAACC,YAAU,EAAAxY,SAAA,EAC7DC,EAAAA,EAAAA,KAACwY,EAAAA,EAAU,CAACnY,UAAU,aAAYN,UAChCF,EAAAA,EAAAA,MAAC4Y,EAAAA,GAAS,CAAA1Y,SAAA,EACRC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAAC1X,MAAO,CAACH,MAAO,QAAQd,SAAC,YAC1CC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACH,MAAO,SAASd,UAChEC,EAAAA,EAAAA,KAAC6W,EAAAA,EAAK,CAACvX,KAAMqZ,EAAAA,OAEf3Y,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAAC1X,MAAO,CAACH,MAAO,SAASd,SAAC,8EAC3CC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACH,MAAO,SAASd,SAAC,wEACnEC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACH,MAAO,SAASd,SAAC,gDACnEC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACH,MAAO,QAAQd,SAAC,oCAClEC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACH,MAAO,SAASd,SAAC,WACnEC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAAC1X,MAAO,CAACH,MAAO,SAASd,SAAC,oFAC3CC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAAC1X,MAAO,CAACH,MAAO,SAASd,SAAC,uEAG/CC,EAAAA,EAAAA,KAAC4Y,EAAAA,GAAU,CAAA7Y,SACR8H,EAASzC,KAAI,CAACb,EAAMyB,KACnBnG,EAAAA,EAAAA,MAAC4Y,EAAAA,GAAS,CAAC,QAAM,qBAAoB1Y,SAAA,EACnCC,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAaN,SACpCiG,EAAM,KAEThG,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAaN,UACnCC,EAAAA,EAAAA,KAAC8Y,EAAAA,GAAO,CAACC,KAAK,KAAKpY,IAAK4D,EAAKmN,OAt4CtD9D,+BAs4CsErJ,EAAKmN,OAASsH,EAASpY,IAAI,QAE5Ef,EAAAA,EAAAA,MAACgZ,EAAAA,GAAc,CAAA9Y,SAAA,EACbC,EAAAA,EAAAA,KAAA,OAAAD,SAAMwE,EAAK2J,KAAK7O,QAChBW,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mCAGjBL,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAaN,SACpCwE,EAAK2L,SAAUlQ,EAAAA,EAAAA,KAAA,OAAAD,SAAMwE,EAAK2L,UAAiB,MAE9ClQ,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAaN,UACrCC,EAAAA,EAAAA,KAAA,OAAAD,SAAMwE,EAAKuN,WAEb9R,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAaN,UACrCC,EAAAA,EAAAA,KAAA,OAAAD,SAAMwE,EAAK+L,UAEbtQ,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAaN,UACrCC,EAAAA,EAAAA,KAAA,OAAAD,SAAMwE,EAAKsN,WAEbhS,EAAAA,EAAAA,MAACgZ,EAAAA,GAAc,CAAA9Y,SAAA,EACbF,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,WAAUN,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,cAAaN,UAC1BF,EAAAA,EAAAA,MAAA,UAAAE,SAAA,CAASwE,EAAKwN,MAAMxR,MAAM,UAE5BP,EAAAA,EAAAA,KAAA,OAAKK,UAAU,YAAWN,UACxBC,EAAAA,EAAAA,KAAA,SAAOK,UAAU,uBAAsBN,SAAEwE,EAAKwN,MAAME,eAGxDjS,EAAAA,EAAAA,KAACiZ,EAAAA,GAAS,CAACC,MAAI,EAAC5Y,MAAOiE,EAAKwN,MAAMzR,MAAOC,MAAOgE,EAAKwN,MAAMxR,YAE7DV,EAAAA,EAAAA,MAACgZ,EAAAA,GAAc,CAAA9Y,SAAA,EACbC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,6BAA4BN,SAAC,qFAC5CC,EAAAA,EAAAA,KAAA,UAAAD,SAASwE,EAAK2N,gBArCyBlM,uBAoD3DhG,EAAAA,EAAAA,KAAC8X,EAAAA,GAAS,CAAC1Y,GAAG,UAAU4B,MAAO,CAACe,QAAS0I,GAAc,QAAU,QAAQ1K,UACvEC,EAAAA,EAAAA,KAACF,EAAAA,GAAI,CAAAC,UACHF,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CAAC8X,IAAE,EAAAhY,SAAA,EACFF,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAC,SAAA,EACHF,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CAACiY,GAAI,EAAGlX,MAAO,CAACiX,UAAW,QAAQlY,SAAA,EACtCC,EAAAA,EAAAA,KAACmZ,EAAAA,GAAO,CAAC7Y,MAAM,OAAOyW,QAASA,IAAI9D,GAAU,GAAIjS,MAAO,CAACoY,YAAa,OAAQvY,MAAO,SAASd,SAAC,oCAC/FC,EAAAA,EAAAA,KAACmZ,EAAAA,GAAO,CAAC7Y,MAAM,OAAOyW,QAASA,IAAI9D,GAAU,GAAIjS,MAAO,CAACoY,YAAa,OAAQvY,MAAO,SAASd,SAAC,0CAC/FC,EAAAA,EAAAA,KAACmZ,EAAAA,GAAO,CAAC7Y,MAAM,OAAOyW,QAASA,IAAI9D,GAAU,GAAIjS,MAAO,CAACoY,YAAa,OAAQvY,MAAO,SAASd,SAAC,oCAC/FC,EAAAA,EAAAA,KAACmZ,EAAAA,GAAO,CAAC7Y,MAAM,OAAOyW,QAASA,IAAI9D,GAAU,GAAIjS,MAAO,CAACoY,YAAa,OAAQvY,MAAO,SAASd,SAAC,2BAEjGF,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CAACiY,GAAI,EAAGlX,MAAO,CAACiX,UAAW,SAAUlW,QAAS,QAAQhC,SAAA,EACzDC,EAAAA,EAAAA,KAACqZ,IAAS,CACRC,KAAK,aACL/Y,MAAOoM,GACP4M,SAAU7D,GAAY3V,SACpByZ,IAAexZ,EAAAA,EAAAA,KAACyZ,EAAAA,GAAU,IACND,EACJE,YAAY,aACZC,kBAAgB,EAChB,aAAW,mBACX3Y,MAAO,CAAC4Y,WAAY,aAIxC5Z,EAAAA,EAAAA,KAACqZ,IAAS,CACRC,KAAK,aACL/Y,MAAOsM,GACP0M,SAAU3D,GAAY7V,SACpByZ,IAAexZ,EAAAA,EAAAA,KAACyZ,EAAAA,GAAU,IACND,EACJE,YAAY,aACZC,kBAAgB,EAChB,aAAW,mBACX3Y,MAAO,CAAC4Y,WAAY,aAIxC5Z,EAAAA,EAAAA,KAACmZ,EAAAA,GAAO,CAAC7Y,MAAM,OAAOyW,QAASA,IAAI9D,GAAU,GAAIjS,MAAO,CAAC4Y,WAAY,QAAQ7Z,SAAC,kEAIlFC,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACO,UAAU,OAAMN,SAAA,EACpBC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAEH,UACVC,EAAAA,EAAAA,KAACyZ,EAAAA,GAAU,CAACC,YAAY,uGAAuBH,SAAW1T,GAAIyH,GAAQzH,EAAE8P,OAAOpV,OAAQ,aAAW,eAEpGP,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,KAEVF,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGc,MAAO,CAACiX,UAAW,QAAS4B,SAAU,WAAYC,IAAK,SAAUC,MAAO,IAAKX,YAAa,cAKzGpZ,EAAAA,EAAAA,KAACF,EAAAA,GAAI,CAAAC,UACHC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACe,MAAO,CAACiX,UAAW,UAAUlY,SAClCwI,GAECvI,EAAAA,EAAAA,KAACsW,EAAAA,GAAQ,KAETzW,EAAAA,EAAAA,MAACuY,EAAAA,GAAM,CAACC,MAAM,SAAShY,UAAU,cAAciY,OAAK,EAACC,YAAU,EAACvX,MAAO,CAACgZ,SAAU,QAAQja,SAAA,EACxFC,EAAAA,EAAAA,KAACwY,EAAAA,EAAU,CAACnY,UAAU,cAAaN,UACjCF,EAAAA,EAAAA,MAAC4Y,EAAAA,GAAS,CAAA1Y,SAAA,EACRC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACH,MAAO,QAAQd,SAAC,8BAClEC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACH,MAAO,QAAQd,SAAC,oCAClEC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACiZ,SAAU,SAASla,SAAC,wBACtEC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACH,MAAO,SAASd,SAAC,oCACnEC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAaN,SAAE,oFAC3CC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACiZ,SAAU,QAAQla,SAAC,8BACrEC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACiZ,SAAU,SAASla,SAAC,gDACtEC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACiZ,SAAU,SAASla,SAAGwM,GAAW,qBAAQ,8DAG/FvM,EAAAA,EAAAA,KAAC4Y,EAAAA,GAAU,CAAA7Y,SACR4H,EAAQvC,KAAI,CAACb,EAAMyB,KAAK,IAAAkU,EAAAC,EAAA,OACvBta,EAAAA,EAAAA,MAAC4Y,EAAAA,GAAS,CAAC,QAAM,qBAAoB1Y,SAAA,EACnCC,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAaN,SACpC8Q,OAAO,IAAIrM,KAAKD,EAAKE,YAAYuM,WAAWF,SAAS,EAAG,KAAM,IAAKD,OAAO,IAAIrM,KAAKD,EAAKE,YAAYC,WAAW,GAAGoM,SAAS,EAAG,KAAO,IAAK,IAAItM,KAAKD,EAAKE,YAAYkM,iBAEvK3Q,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAaN,SACpC,IAAIyE,KAAKD,EAAKE,YAAYmP,WAAa,MAAO/C,OAAO,IAAIrM,KAAKD,EAAKE,YAAY2V,cAActJ,SAAS,EAAG,QAE5GjR,EAAAA,EAAAA,MAACgZ,EAAAA,GAAc,CAACxY,UAAU,cAAcW,MAAO,CAACV,MAAOiE,EAAK8V,UAAY,MAA4B,uEAApB9V,EAAK4J,WAA+B,MAAQ,IAAIpO,SAAA,CAC3HwE,EAAK4J,WAAa5J,EAAK4J,WAAa,GAAG,IAAE5J,EAAK6J,SAAW7J,EAAK6J,SAAW,GAAG,IAAuD,QAArD8L,EAAAzS,EAAU2H,MAAMlB,GAASA,EAAKG,SAAW9J,EAAK8J,gBAAO,IAAA6L,GAArDA,EAAuDI,MAAQ,MAAQ,OAE1Jta,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAaN,SACpCwE,EAAK+L,KAAO/L,EAAK+L,KAAO,MAE3BzQ,EAAAA,EAAAA,MAACgZ,EAAAA,GAAc,CAAC7X,MAAO,CAACiX,UAAW,QAAQlY,SAAA,EACzCC,EAAAA,EAAAA,KAAA,OAAK+W,QAASA,IAAIjB,GAAY9P,GAAQhF,MAAO,CAACgW,OAAQ,UAAWiB,UAAW,UAAUlY,SAAG0N,GAAUzH,IAAwBhG,EAAAA,EAAAA,KAAA,SAAf,kEAC5GA,EAAAA,EAAAA,KAACua,EAAAA,GAAS,CAACC,QAAS/M,GAAUzH,GAAOjG,UACnCC,EAAAA,EAAAA,KAAA,SAAAD,UACEC,EAAAA,EAAAA,KAAA,SAAAD,SACqB,KAAlBwE,EAAK8P,SAAmBF,KAAKC,MAAM7P,EAAK8P,UAAWjP,KAAI,CAACqV,EAAMzU,KAC3DhG,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAmB,KAAd0a,EAAKA,KAAc,KAAOA,EAAKA,KAAO,MADpCzU,KAGR,aAKbhG,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAcW,MAAO,CAACV,MAAOiE,EAAK8V,UAAY,KAAO,MAAQ,IAAIta,SACxFwE,EAAK8V,SAAW9V,EAAK8V,SAAW,MAEnCra,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAaN,UACrCC,EAAAA,EAAAA,KAAA,OAAAD,SAAMwE,EAAKuN,MAAQvN,EAAKuN,MAAQ,QAElC9R,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAaN,UACrCC,EAAAA,EAAAA,KAAA,OAAKgB,MAAO,CAACgZ,SAAUzN,GAAW,OAAS,QAAQxM,SAAEwM,GAAgE,QAAxD4N,EAAG1S,EAAU2H,MAAMlB,GAASA,EAAKG,SAAW9J,EAAK8J,gBAAO,IAAA8L,OAAA,EAArDA,EAAuD/L,SAAW7J,EAAK8J,aAlChGrI,EAoC/B,cAetBhG,EAAAA,EAAAA,KAAA,OAAKgB,MAAO,CAACe,QAAS,OAAQ2V,eAAgB,UAAW3X,UACvDC,EAAAA,EAAAA,KAAA,OAAKW,IAAK+Z,EAAAA,EAAW9Z,IAAI,GAAGmW,QAASA,IAlkB/ChI,WAGlB,IAAI4L,QAAiBC,EAAAA,EAAAA,IAAgB,IAAKjT,EAAQtD,QAChD8O,QAAQC,IAAI,iBAAkBzL,EAAQtD,QAEtC,MAAMwW,EAAc,GAErBF,EAASG,UAAU1V,KAAI2J,UACtB,MAAMgM,EAAY,CAChB3b,GAAI8O,EAAK9O,GACT+O,WAAYD,EAAKC,WACjBC,SAAUF,EAAKE,SACf0D,MAAO5D,EAAK4D,MACZuI,SAAUnM,EAAKmM,SACf/J,KAAMpC,EAAKoC,KACXhJ,SAAU4G,EAAK5G,SACf0T,KAAM9M,EAAK8M,KACX3G,SAAWnG,EAAKmG,SAChBhG,OAAQH,EAAKG,OACb5J,WAAYyJ,EAAKqB,UACjBmC,OAAQxD,EAAKwD,OACbuJ,KAAM/M,EAAK+M,KACXC,QAAShN,EAAKgN,QACdZ,MAAOpM,EAAKoM,MACZzL,QAASX,EAAKW,SAGhBgM,EAAYpL,KAAKsL,EAAU,IAGzB5H,QAAQC,IAAI,wEAAkByH,EAAYxW,QAE1CuD,EAAWiT,GACX1H,QAAQC,IAAI,uBAASyH,EAAYxW,OAAO,EAgiByB8W,GAAana,MAAO,CAACH,MAAO,OAAQua,UAAW,OAAQpE,OAAQ,uBAQpHhX,EAAAA,EAAAA,KAAC8X,EAAAA,GAAS,CAAC1Y,GAAG,UAAU4B,MAAO,CAACe,QAAS4I,GAAc,QAAU,QAAQ5K,UACvEC,EAAAA,EAAAA,KAACF,EAAAA,GAAI,CAAAC,UACHF,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CAAC8X,IAAE,EAAAhY,SAAA,EACFF,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAC,SAAA,EACHF,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CAACiY,GAAI,EAAGlX,MAAO,CAACiX,UAAW,QAAQlY,SAAA,EACtCC,EAAAA,EAAAA,KAACmZ,EAAAA,GAAO,CAAC7Y,MAAM,OAAOyW,QAASA,IAAI9D,GAAU,GAAIjS,MAAO,CAACoY,YAAa,OAAQvY,MAAO,SAASd,SAAC,oCAC/FC,EAAAA,EAAAA,KAACmZ,EAAAA,GAAO,CAAC7Y,MAAM,OAAOyW,QAASA,IAAI9D,GAAU,GAAIjS,MAAO,CAACoY,YAAa,OAAQvY,MAAO,SAASd,SAAC,0CAC/FC,EAAAA,EAAAA,KAACmZ,EAAAA,GAAO,CAAC7Y,MAAM,OAAOyW,QAASA,IAAI9D,GAAU,GAAIjS,MAAO,CAACoY,YAAa,OAAQvY,MAAO,SAASd,SAAC,oCAC/FC,EAAAA,EAAAA,KAACmZ,EAAAA,GAAO,CAAC7Y,MAAM,OAAOyW,QAASA,IAAI9D,GAAU,GAAIjS,MAAO,CAACoY,YAAa,OAAQvY,MAAO,SAASd,SAAC,2BAEjGF,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CAACiY,GAAI,EAAGlX,MAAO,CAACiX,UAAW,SAAUlW,QAAS,QAAQhC,SAAA,EACzDC,EAAAA,EAAAA,KAACqZ,IAAS,CACRC,KAAK,aACL/Y,MAAOoM,GACP4M,SAAU7D,GAAY3V,SACpByZ,IAAexZ,EAAAA,EAAAA,KAACyZ,EAAAA,GAAU,IACND,EACJE,YAAY,aACZC,kBAAgB,EAChB,aAAW,mBACX3Y,MAAO,CAAC4Y,WAAY,aAIxC5Z,EAAAA,EAAAA,KAACqZ,IAAS,CACRC,KAAK,aACL/Y,MAAOsM,GACP0M,SAAU3D,GAAY7V,SACpByZ,IAAexZ,EAAAA,EAAAA,KAACyZ,EAAAA,GAAU,IACND,EACJE,YAAY,aACZC,kBAAgB,EAChB,aAAW,mBACX3Y,MAAO,CAAC4Y,WAAY,aAIxC5Z,EAAAA,EAAAA,KAACmZ,EAAAA,GAAO,CAAC7Y,MAAM,OAAOyW,QAASA,IAAI9D,GAAU,GAAIjS,MAAO,CAAC4Y,WAAY,QAAQ7Z,SAAC,kEAIlFC,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACO,UAAU,OAAMN,SAAA,EACpBC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAEH,UACVC,EAAAA,EAAAA,KAACyZ,EAAAA,GAAU,CAACC,YAAY,uGAAuBH,SAAW1T,GAAI2H,GAAc3H,EAAE8P,OAAOpV,OAAQ,aAAW,eAE1GP,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,KAEVF,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGc,MAAO,CAACiX,UAAW,QAAS4B,SAAU,WAAYC,IAAK,SAAUC,MAAO,IAAKX,YAAa,QAAQrZ,SAC5GsM,GAAe5D,EAAYpE,OAAS,SAIzCrE,EAAAA,EAAAA,KAACF,EAAAA,GAAI,CAAAC,UACHC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACe,MAAO,CAACiX,UAAW,UAAUlY,SAClCwI,GAECvI,EAAAA,EAAAA,KAACsW,EAAAA,GAAQ,KAETzW,EAAAA,EAAAA,MAACuY,EAAAA,GAAM,CAACC,MAAM,SAAShY,UAAU,cAAciY,OAAK,EAACC,YAAU,EAACvX,MAAO,CAACgZ,SAAU,QAAQja,SAAA,EACxFC,EAAAA,EAAAA,KAACwY,EAAAA,EAAU,CAACnY,UAAU,cAAaN,UACjCF,EAAAA,EAAAA,MAAC4Y,EAAAA,GAAS,CAAA1Y,SAAA,EACRC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACH,MAAO,QAAQd,SAAC,8BAClEC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACH,MAAO,QAAQd,SAAC,oCAClEC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACiZ,SAAU,SAASla,SAAC,wBACtEC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACH,MAAO,SAASd,SAAC,oCACnEC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAaN,SAAE,oFAC3CC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACiZ,SAAU,QAAQla,SAAC,8BACrEC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACiZ,SAAU,SAASla,SAAC,gDACtEC,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAgB,CAACrY,UAAU,cAAcW,MAAO,CAACiZ,SAAU,SAASla,SAAGwM,GAAW,qBAAQ,8DAG/FvM,EAAAA,EAAAA,KAAC4Y,EAAAA,GAAU,CAAA7Y,SACRkJ,EAAe7D,KAAI,CAACb,EAAMyB,KAAK,IAAAqV,EAAAC,EAAA,OAC9Bzb,EAAAA,EAAAA,MAAC4Y,EAAAA,GAAS,CAAC,QAAM,qBAAoB1Y,SAAA,EACnCC,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAaN,SACpC8Q,OAAO,IAAIrM,KAAKD,EAAKE,YAAYuM,WAAWF,SAAS,EAAG,KAAM,IAAKD,OAAO,IAAIrM,KAAKD,EAAKE,YAAYC,WAAW,GAAGoM,SAAS,EAAG,KAAO,IAAK,IAAItM,KAAKD,EAAKE,YAAYkM,iBAEvK3Q,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAaN,SACpC,IAAIyE,KAAKD,EAAKE,YAAYmP,WAAa,MAAO/C,OAAO,IAAIrM,KAAKD,EAAKE,YAAY2V,cAActJ,SAAS,EAAG,QAE5GjR,EAAAA,EAAAA,MAACgZ,EAAAA,GAAc,CAACxY,UAAU,cAAcW,MAAO,CAACV,MAAOiE,EAAK8V,UAAY,MAA4B,uEAApB9V,EAAK4J,WAA+B,MAAQ,IAAIpO,SAAA,CAC3HwE,EAAK4J,WAAa5J,EAAK4J,WAAa,GAAG,IAAE5J,EAAK6J,SAAW7J,EAAK6J,SAAW,GAAG,IAAuD,QAArDiN,EAAA5T,EAAU2H,MAAMlB,GAASA,EAAKG,SAAW9J,EAAK8J,gBAAO,IAAAgN,GAArDA,EAAuDf,MAAQ,MAAQ,OAE1Jta,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAaN,SACpCwE,EAAK+L,KAAO/L,EAAK+L,KAAO,MAE3BzQ,EAAAA,EAAAA,MAACgZ,EAAAA,GAAc,CAAC7X,MAAO,CAACiX,UAAW,QAAQlY,SAAA,EACzCC,EAAAA,EAAAA,KAAA,OAAK+W,QAASA,IAAIjB,GAAY9P,GAAQhF,MAAO,CAACgW,OAAQ,UAAWiB,UAAW,UAAUlY,SAAG0N,GAAUzH,IAAwBhG,EAAAA,EAAAA,KAAA,SAAf,kEAC5GA,EAAAA,EAAAA,KAACua,EAAAA,GAAS,CAACC,QAAS/M,GAAUzH,GAAOjG,UACnCC,EAAAA,EAAAA,KAAA,SAAAD,UACEC,EAAAA,EAAAA,KAAA,SAAAD,SACqB,KAAlBwE,EAAK8P,SAAmBF,KAAKC,MAAM7P,EAAK8P,UAAWjP,KAAI,CAACqV,EAAMzU,KAC3DhG,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAmB,KAAd0a,EAAKA,KAAc,KAAOA,EAAKA,KAAO,MADpCzU,KAGR,aAKbhG,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAcW,MAAO,CAACV,MAAOiE,EAAK8V,UAAY,KAAO,MAAQ,IAAIta,SACxFwE,EAAK8V,SAAW9V,EAAK8V,SAAW,MAEnCra,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAaN,UACrCC,EAAAA,EAAAA,KAAA,OAAAD,SAAMwE,EAAKuN,MAAQvN,EAAKuN,MAAQ,QAElC9R,EAAAA,EAAAA,KAAC6Y,EAAAA,GAAc,CAACxY,UAAU,cAAaN,UACrCC,EAAAA,EAAAA,KAAA,OAAKgB,MAAO,CAACgZ,SAAUzN,GAAW,OAAS,QAAQxM,SAAEwM,GAAgE,QAAxD+O,EAAG7T,EAAU2H,MAAMlB,GAASA,EAAKG,SAAW9J,EAAK8J,gBAAO,IAAAiN,OAAA,EAArDA,EAAuDlN,SAAW7J,EAAK8J,aAlChGrI,EAoC/B,cAUtBhG,EAAAA,EAAAA,KAACF,EAAAA,GAAI,wBAgBzBE,EAAAA,EAAAA,KAACub,EAAAA,GAAS,SAER,C,2HCvzDV,MAqVA,EArVwB/b,IAAkC,IAAjC,MAACyE,EAAK,SAAEmD,EAAQ,SAAEE,GAAS9H,EAClD,OACEK,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAC,SAAA,EACHC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,OACVC,MAAM,UACNC,OACEV,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAT,SAAA,CACGkE,EAAM,OAMXxD,MAAM,yDACNC,QACEb,EAAAA,EAAAA,MAAC2b,EAAAA,GAAS,CAACC,UAAU,MAAK1b,SAAA,EACxBC,EAAAA,EAAAA,KAAC0b,EAAAA,GAAe,CAACpb,MAAM,cAAcqb,OAAO,EAAOtb,UAAU,MAAKN,UAChEC,EAAAA,EAAAA,KAAC6W,EAAAA,EAAK,CAACvX,KAAMsc,EAAAA,EAAYvb,UAAU,kCAErCR,EAAAA,EAAAA,MAACgc,EAAAA,GAAa,CAAA9b,SAAA,EACZC,EAAAA,EAAAA,KAAC8b,EAAAA,GAAa,CAAA/b,SAAC,kEACfC,EAAAA,EAAAA,KAAC8b,EAAAA,GAAa,CAAA/b,SAAC,sDACfC,EAAAA,EAAAA,KAAC8b,EAAAA,GAAa,CAACC,UAAQ,EAAAhc,SAAC,+CAI9Be,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,mBACPC,gBAAiB,cACjBC,YAAa,wBACbC,sBAAsBC,EAAAA,EAAAA,UAAS,iBAC/BP,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAIrCU,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACTK,YAAY,GAEdC,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDC,IAAK,GACLC,IAAK,GACLT,SAAS,EACTI,KAAM,CACJJ,SAAS,GAEXM,MAAO,CACLN,SAAS,KAIfU,SAAU,CACRC,KAAM,CACJC,YAAa,EACbC,QAAS,IAEXC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAQ3BhD,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,OACVC,MAAM,OACNC,OACEP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,SACGqH,IAML3G,MAAM,6CACNC,QACEb,EAAAA,EAAAA,MAAC2b,EAAAA,GAAS,CAACC,UAAU,MAAK1b,SAAA,EACxBC,EAAAA,EAAAA,KAAC0b,EAAAA,GAAe,CAACpb,MAAM,cAAcqb,OAAO,EAAOtb,UAAU,MAAKN,UAChEC,EAAAA,EAAAA,KAAC6W,EAAAA,EAAK,CAACvX,KAAMsc,EAAAA,EAAYvb,UAAU,kCAErCR,EAAAA,EAAAA,MAACgc,EAAAA,GAAa,CAAA9b,SAAA,EACZC,EAAAA,EAAAA,KAAC8b,EAAAA,GAAa,CAAA/b,SAAC,kEACfC,EAAAA,EAAAA,KAAC8b,EAAAA,GAAa,CAAA/b,SAAC,sDACfC,EAAAA,EAAAA,KAAC8b,EAAAA,GAAa,CAACC,UAAQ,EAAAhc,SAAC,+CAI9Be,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEC,SAAU,CACR,CACEC,MAAO,mBACPC,gBAAiB,cACjBC,YAAa,wBACbC,sBAAsBC,EAAAA,EAAAA,UAAS,cAC/BP,KAAM,CAAC,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,OAInCU,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACTK,YAAY,GAEdC,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDC,KAAM,EACNC,IAAK,GACLT,SAAS,EACTI,KAAM,CACJJ,SAAS,GAEXM,MAAO,CACLN,SAAS,KAIfU,SAAU,CACRC,KAAM,CACJC,YAAa,GAEfE,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAQ3BhD,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,OACVC,MAAM,UACNC,OACEV,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAT,SAAA,CACGuH,EAAU,OAMf7G,MAAM,mDACNC,QACEb,EAAAA,EAAAA,MAAC2b,EAAAA,GAAS,CAACC,UAAU,MAAK1b,SAAA,EACxBC,EAAAA,EAAAA,KAAC0b,EAAAA,GAAe,CAACpb,MAAM,cAAcqb,OAAO,EAAOtb,UAAU,MAAKN,UAChEC,EAAAA,EAAAA,KAAC6W,EAAAA,EAAK,CAACvX,KAAMsc,EAAAA,EAAYvb,UAAU,kCAErCR,EAAAA,EAAAA,MAACgc,EAAAA,GAAa,CAAA9b,SAAA,EACZC,EAAAA,EAAAA,KAAC8b,EAAAA,GAAa,CAAA/b,SAAC,kEACfC,EAAAA,EAAAA,KAAC8b,EAAAA,GAAa,CAAA/b,SAAC,sDACfC,EAAAA,EAAAA,KAAC8b,EAAAA,GAAa,CAACC,UAAQ,EAAAhc,SAAC,+CAI9Be,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,OACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEC,SAAU,CACR,CACEC,MAAO,mBACPC,gBAAiB,uBACjBC,YAAa,wBACbL,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/B+B,MAAM,KAIZrB,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDH,SAAS,GAEXO,EAAG,CACDP,SAAS,IAGbU,SAAU,CACRC,KAAM,CACJC,YAAa,EACbC,QAAS,IAEXC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAQ3BhD,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,OACVC,MAAM,SACNC,OACEV,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAT,SAAA,CAAE,KACG,KACHF,EAAAA,EAAAA,MAAA,QAAMQ,UAAU,iBAAgBN,SAAA,CAAC,YACvBC,EAAAA,EAAAA,KAAC6W,EAAAA,EAAK,CAACvX,KAAM0c,EAAAA,IAAkB,UAI7Cvb,MAAM,6DACNC,QACEb,EAAAA,EAAAA,MAAC2b,EAAAA,GAAS,CAACC,UAAU,MAAK1b,SAAA,EACxBC,EAAAA,EAAAA,KAAC0b,EAAAA,GAAe,CAACpb,MAAM,cAAcqb,OAAO,EAAOtb,UAAU,MAAKN,UAChEC,EAAAA,EAAAA,KAAC6W,EAAAA,EAAK,CAACvX,KAAMsc,EAAAA,EAAYvb,UAAU,kCAErCR,EAAAA,EAAAA,MAACgc,EAAAA,GAAa,CAAA9b,SAAA,EACZC,EAAAA,EAAAA,KAAC8b,EAAAA,GAAa,CAAA/b,SAAC,kEACfC,EAAAA,EAAAA,KAAC8b,EAAAA,GAAa,CAAA/b,SAAC,sDACfC,EAAAA,EAAAA,KAAC8b,EAAAA,GAAa,CAACC,UAAQ,EAAAhc,SAAC,+CAI9Be,OACEd,EAAAA,EAAAA,KAACyD,EAAAA,GAAS,CACRpD,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CACN,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,WACA,UACA,WACA,QACA,SAEFC,SAAU,CACR,CACEC,MAAO,mBACPC,gBAAiB,uBACjBC,YAAa,wBACbL,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACnEwC,cAAe,MAIrB9B,QAAS,CACPI,qBAAqB,EACrBH,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbE,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACT4B,WAAW,GAEbtB,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDH,KAAM,CACJJ,SAAS,EACTK,YAAY,EACZuB,WAAW,GAEbtB,MAAO,CACLN,SAAS,cASpB,C,4FCvVX,MAoTA,EApTyBvC,IAKlB,IALmB,MACxByE,EAAK,SACLC,EAAQ,YACRC,EAAW,SACXC,GACD5E,EAEC,OACEK,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAC,SAAA,EACHC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,OACVC,MAAM,UACNC,OACEV,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAT,SAAA,CACGkE,EAAMI,OAAO,OAMlB5D,MAAO,iCACPC,OAAQ,GACRI,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,cACjBC,YAAa,wBACbC,sBAAsBC,EAAAA,EAAAA,UAAS,iBAC/BP,KAAM,CACsE,IAAzE+C,EAAMK,QAAOC,GAAiD,IAAzC,IAAIC,KAAKD,EAAKE,YAAYC,aAAmBL,OAAWJ,EAAMI,OAAO,EACjB,IAAzEJ,EAAMK,QAAOC,GAAiD,IAAzC,IAAIC,KAAKD,EAAKE,YAAYC,aAAmBL,OAAWJ,EAAMI,OAAO,EACjB,IAAzEJ,EAAMK,QAAOC,GAAiD,IAAzC,IAAIC,KAAKD,EAAKE,YAAYC,aAAmBL,OAAWJ,EAAMI,OAAO,EACjB,IAAzEJ,EAAMK,QAAOC,GAAiD,IAAzC,IAAIC,KAAKD,EAAKE,YAAYC,aAAmBL,OAAWJ,EAAMI,OAAO,EAC5F,EAAG,EAAG,MAKbzC,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACTK,YAAY,GAEdC,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDC,KAAM,EACNC,IAAK,GACLT,SAAS,EACTI,KAAM,CACJJ,SAAS,GAEXM,MAAO,CACLN,SAAS,KAIfU,SAAU,CACRC,KAAM,CACJC,YAAa,EACbC,QAAS,IAEXC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAQ3BhD,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,OACVC,MAAM,OACNC,OACEP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,SACGmE,EAASG,SAMd5D,MAAO,iCACPC,OAAQ,GACRI,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,cACjBC,YAAa,wBACbC,sBAAsBC,EAAAA,EAAAA,UAAS,cAC/BP,KAAM,CACyE,IAA5EgD,EAASI,QAAOC,GAAiD,IAAzC,IAAIC,KAAKD,EAAKE,YAAYC,aAAmBL,OAAWH,EAASG,OAAO,EACpB,IAA5EH,EAASI,QAAOC,GAAiD,IAAzC,IAAIC,KAAKD,EAAKE,YAAYC,aAAmBL,OAAWH,EAASG,OAAO,EACpB,IAA5EH,EAASI,QAAOC,GAAiD,IAAzC,IAAIC,KAAKD,EAAKE,YAAYC,aAAmBL,OAAWH,EAASG,OAAO,EACpB,IAA5EH,EAASI,QAAOC,GAAiD,IAAzC,IAAIC,KAAKD,EAAKE,YAAYC,aAAmBL,OAAWH,EAASG,OAAO,EACjG,EAAG,EAAG,MAKdzC,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACTK,YAAY,GAEdC,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDC,KAAM,EACNC,IAAK,GACLT,SAAS,EACTI,KAAM,CACJJ,SAAS,GAEXM,MAAO,CACLN,SAAS,KAIfU,SAAU,CACRC,KAAM,CACJC,YAAa,GAEfE,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAQ3BhD,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,OACVC,MAAM,UACNC,OACEV,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAT,SAAA,CACGoE,EAAYE,OAAO,OAMxB5D,MAAO,mDACPC,OAAQ,GACRI,OACEd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTV,UAAU,OACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,uBACjBC,YAAa,wBACbL,KAAM,CAACiD,EAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GACnClB,MAAM,KAIZrB,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDH,SAAS,GAEXO,EAAG,CACDP,SAAS,IAGbU,SAAU,CACRC,KAAM,CACJC,YAAa,EACbC,QAAS,IAEXC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAQ3BhD,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAEJ,UACjBC,EAAAA,EAAAA,KAACI,EAAAA,GAAa,CACZC,UAAU,OACVC,MAAM,SACNC,OACEP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,SACGqE,EAASC,SAGd5D,MAAO,yDACPC,OAAQ,GACRI,OACEd,EAAAA,EAAAA,KAACyD,EAAAA,GAAS,CACRpD,UAAU,YACVW,MAAO,CAAEC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CACN,uCACA,6CACA,2BACA,uCACA,qBACA,2BACA,2BACA,uCACA,mDACA,6CACA,uCACA,8CAEFC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,uBACjBC,YAAa,wBACbL,KAAM,CAACkD,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/CV,cAAe,MAIrB9B,QAAS,CACPI,qBAAqB,EACrBH,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbE,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACT4B,WAAW,GAEbtB,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDH,KAAM,CACJJ,SAAS,EACTK,YAAY,EACZuB,WAAW,GAEbtB,MAAO,CACLN,SAAS,cASpB,C","sources":["assets/images/arrowDown.svg","data/specData.js","views/widgets/WidgetsDropdown3.js","views/widgets/WidgetsDropdown4.js","views/widgets/WidgetsDropdown5.js","views/widgets/WidgetsDropdown6.js","components/Chart2.js","pages/Admin.js","views/widgets/WidgetsDropdown.js","views/widgets/WidgetsDropdown2.js"],"sourcesContent":["var _metadata, _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowDown(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 256 256\",\n    enableBackground: \"new 0 0 256 256\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _metadata || (_metadata = /*#__PURE__*/React.createElement(\"metadata\", null, \" Svg Vector Icons : http://www.onlinewebfonts.com/icon \")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"M128,10C62.9,10,10,62.9,10,128c0,65.1,52.9,118,118,118c65.1,0,118-52.9,118-118C246,62.9,193.1,10,128,10z M173.8,148.4l-37,31.4c-2.5,2.1-5.6,3.2-8.7,3.2s-6.2-1.1-8.7-3.2l-37-31.4c-5.7-4.8-6.4-13.3-1.5-19c4.8-5.7,13.3-6.4,19-1.5l14.9,12.6V86.4c0-7.4,6-13.5,13.5-13.5s13.5,6,13.5,13.5v54.2l14.9-12.6c5.7-4.8,14.2-4.1,19,1.5C180.1,135.1,179.4,143.6,173.8,148.4z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowDown);\nexport default __webpack_public_path__ + \"static/media/arrowDown.de82dd32eecdb5b4cb2e3b8d4d1e1b89.svg\";\nexport { ForwardRef as ReactComponent };","\nconst specData = [\n    {\n        id: 1,\n        name: 'Звук',\n        icon: 'Sound',\n        models: [\n            {id: 1, name: 'Звукорежиссер',},\n            {id: 2, name: 'Системный инженер',},\n            {id: 3, name: 'RF-Менеджер',},\n            {id: 4, name: 'Backline',},\n            {id: 5, name: 'Roadie',},\n            {id: 6, name: 'Техник по звуку',},\n        ]\n    },\n    {\n        id: 2,\n        name: 'Свет',\n        icon: 'Light',\n        models: [\n            {id: 1, name: 'Художник по свету',},\n            {id: 2, name: 'Оператор световой пушки',},\n            {id: 3, name: 'Гафер',},\n            {id: 4, name: 'Техник по свету',},\n        ]\n    },\n    {\n        id: 3,\n        name: 'Видео',\n        icon: 'Video',\n        models: [\n            {id: 1, name: 'Инженер VMix',},\n            {id: 2, name: 'Инженер Resolume',},\n            {id: 3, name: 'Оператор Zoom',},\n            {id: 4, name: 'Оператор [cameraman]',},\n            {id: 5, name: 'Оператор-постановщик',},\n            {id: 6, name: 'Режиссер эфиров',},\n            {id: 7, name: 'Техник монтажа',},\n            {id: 8, name: 'IT-специалист',},   \n        ]\n    },\n    {\n        id: 4,\n        name: 'Фото',\n        icon: 'Photo',\n        models: [\n            {id: 1, name: 'Свадебная съемка',},\n            {id: 2, name: 'Репортажная съемка',},\n            {id: 3, name: 'Портретная съемка',},\n            {id: 4, name: 'Предметная съемка',},\n            {id: 5, name: 'Документальная съемка',},\n        ]\n    },\n    {\n        id: 5,\n        name: 'Промо \\/ Кастинг',\n        icon: 'Promo',\n        models: [\n            {id: 1, name: 'Модель',},\n            {id: 2, name: 'Актер',},\n            {id: 3, name: 'Промоутер',},\n            {id: 4, name: 'Гример',},\n        ]\n    },\n    {\n        id: 6,\n        name: 'Кейтеринг',\n        icon: 'Catering',\n        models: [\n            {id: 1, name: 'Официант',},\n            {id: 2, name: 'Бармен',},\n            {id: 3, name: 'Повар',}, \n            {id: 4, name: 'Хостес',},\n            {id: 5, name: 'Банкетный менеджер',},    \n        ]\n    },  \n    {\n        id: 7,\n        name: 'Помощники \\/ Грузчики',\n        icon: 'Stagehands',\n        models: [\n            {id: 1, name: 'Помощник \\/ Грузчик',},\n        ]\n    },\n    {\n        id: 8,\n        name: 'Риггер \\/ Граунд',\n        icon: 'Riggers \\/ Ground',\n        models: [\n            {id: 1, name: 'Верхний Риггер',},\n            {id: 2, name: 'Нижний Риггер',},\n            {id: 3, name: 'Монтажник [Ground]',},\n            {id: 4, name: 'Декоратор',},\n        ]\n    }, \n    {\n        id: 9,\n        name: 'Водители',\n        icon: 'Trucks',\n        models: [\n            {id: 1, name: 'C личным ТС [B\\/C]',},\n            {id: 2, name: 'Без личного ТС [B\\/C]',},\n            {id: 3, name: 'С гидролифтом',},\n            {id: 4, name: 'Без гидролифта',},\n        ]\n    },\n    {\n        id: 10,\n        name: 'Артисты',\n        icon: 'Party',\n        models: [\n            {id: 1, name: 'Кавер-бенд',},\n            {id: 2, name: 'Танцевальный коллектив',},\n            {id: 3, name: 'Диджей',},\n            {id: 4, name: 'Ведущий',},\n            {id: 5, name: 'Певец \\/ певица',},\n            {id: 6, name: 'Артист оригинального жанра',},\n            {id: 7, name: 'Go-Go',},\n        ]\n    },\n    {\n        id: 11,\n        name: 'Игры',\n        icon: 'Games',\n        models: [\n            {id: 1, name: 'Квесты',},\n            {id: 2, name: 'Квизы',},\n            {id: 3, name: 'Аниматоры',},\n            {id: 4, name: 'Настольные игры \\/ игровые автоматы',},\n            {id: 5, name: 'Пневмокостюмы \\/ ростовые куклы',},\n            {id: 6, name: 'Активности \\/ аттракционы',},\n        ]\n    },\n    {\n        id: 12,\n        name: 'Технический продакшн',\n        icon: 'Production',\n        models: [\n            {id: 1, name: 'Мероприятие под ключ',},\n            {id: 2, name: 'Отдельные технические задачи',},\n        ]\n    },\n];\n\nexport default specData;","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nimport Sound from \"./../../assets/images/spec/1_sound.png\";\nimport Light from \"./../../assets/images/spec/2_light.png\";\nimport Video from \"./../../assets/images/spec/3_video.png\";\nimport Photo from \"./../../assets/images/spec/4_photo.png\";\n\n\nconst WidgetsDropdown3 = ({\n  soundUsers, \n  lightUsers, \n  videoUsers, \n  photoUsers,\n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"primary\"\n          value={\n            <>\n              {soundUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Звук\"}\n          action={<img src={Sound} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      Math.floor((soundUsers+2)*100/soundUsers), \n                      Math.floor((soundUsers+3)*100/soundUsers), \n                      Math.floor((soundUsers+1)*100/soundUsers), \n                      Math.floor((soundUsers+3)*100/soundUsers), \n                      0, 0, 0], //min: -5, max: 89,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"info\"\n          value={\n            <>\n              {lightUsers} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Свет\"}\n          action={<img src={Light} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      Math.floor((lightUsers-30)*100/lightUsers), \n                      Math.floor((lightUsers-20)*100/lightUsers), \n                      Math.floor((lightUsers-10)*100/lightUsers), \n                      Math.floor((lightUsers-10)*100/lightUsers), \n                      0, 0, 0], //min: -5 max: 39\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"warning\"\n          value={\n            <>\n              {videoUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Видео\"}\n          action={<img src={Video} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      Math.floor((videoUsers-30)*100/videoUsers), \n                      Math.floor((videoUsers-30)*100/videoUsers), \n                      Math.floor((videoUsers-30)*100/videoUsers), \n                      Math.floor((videoUsers-30)*100/videoUsers), \n                      0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"danger\"\n          value={\n            <>\n              {photoUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Фото\"}\n          action={<img src={Photo} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      Math.floor((photoUsers-10)*100/photoUsers), \n                      Math.floor((photoUsers-5)*100/photoUsers), \n                      Math.floor((photoUsers-10)*100/photoUsers), \n                      Math.floor((photoUsers-10)*100/photoUsers), \n                      0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown3\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nimport Promo from \"./../../assets/images/spec/6_catering.png\";\nimport Catering from \"./../../assets/images/spec/6_catering.png\";\nimport Stagehands from \"./../../assets/images/spec/7_stagehands.png\";\nimport Riggers from \"./../../assets/images/spec/8_riggers.png\";\n\nconst WidgetsDropdown4 = ({\n  promoUsers,\n  cateringUsers,\n  stagehandsUsers, \n  riggerUsers,\n  \n}) => {\n\n  return (\n    <CRow>\n      {/* Promo */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"primary\"\n          value={\n            <>\n              {promoUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Промо / Кастинг\"}\n          action={<img src={Promo} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      (promoUsers-10)*100/promoUsers, \n                      (promoUsers-10)*100/promoUsers, \n                      (promoUsers-10)*100/promoUsers, \n                      (promoUsers-10)*100/promoUsers, \n                      0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Catering */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"info\"\n          value={\n            <>\n              {cateringUsers} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Кейтеринг\"}\n          action={<img src={Catering} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      Math.floor((cateringUsers-10)*100/cateringUsers), \n                      Math.floor((cateringUsers-10)*100/cateringUsers), \n                      Math.floor((cateringUsers-10)*100/cateringUsers), \n                      Math.floor((cateringUsers-10)*100/cateringUsers), \n                      0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Stagehands */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"warning\"\n          value={\n            <>\n              {stagehandsUsers}\n            </>\n          }\n          title={\"Помощники / Грузчики\"}\n          action={<img src={Stagehands} alt='' width={35}/>}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', \n                  'Февраль', \n                  'Март', \n                  'Апрель', \n                  'Май', \n                  'Июнь', \n                  'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      Math.floor((stagehandsUsers-30)*100/stagehandsUsers), \n                      Math.floor((stagehandsUsers-30)*100/stagehandsUsers), \n                      Math.floor((stagehandsUsers-30)*100/stagehandsUsers), \n                      Math.floor((stagehandsUsers-30)*100/stagehandsUsers), \n                      0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Rigger */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"danger\"\n          value={\n            <>\n              {riggerUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Риггер / Граунд\"}\n          action={<img src={Riggers} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      (riggerUsers-10)*100/riggerUsers, \n                      (riggerUsers-10)*100/riggerUsers, \n                      (riggerUsers-10)*100/riggerUsers, \n                      (riggerUsers-10)*100/riggerUsers, \n                      0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown4\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nimport Trucks from \"./../../assets/images/spec/9_trucks.png\";          //9\nimport Party from \"./../../assets/images/spec/10_party.png\";           //10\nimport Games from \"./../../assets/images/spec/11_stage_ground.png\";           //11\nimport Production from \"./../../assets/images/spec/12_production.png\"; //12\n\n\nconst WidgetsDropdown5 = ({\n  trucksUsers,\n  partyUsers,\n  gamesUsers,\n  productionUsers,\n  \n}) => {\n\n  return (\n    <CRow>\n      {/* Trucks */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"primary\"\n          value={\n            <>\n              {trucksUsers}\n            </>\n          }\n          title={\"Водители\"}\n          action={<img src={Trucks} alt='' width={35}/>}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Кол-во специалистов',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      (trucksUsers-10)*100/trucksUsers, \n                      (trucksUsers-10)*100/trucksUsers, \n                      (trucksUsers-10)*100/trucksUsers, \n                      (trucksUsers-10)*100/trucksUsers, \n                      0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Party */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"info\"\n          value={\n            <>\n              {partyUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Артисты\"}\n          action={<img src={Party} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      Math.floor((partyUsers-10)*100/partyUsers), \n                      Math.floor((partyUsers-10)*100/partyUsers), \n                      Math.floor((partyUsers-10)*100/partyUsers), \n                      Math.floor((partyUsers-10)*100/partyUsers), \n                      0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Games */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"warning\"\n          value={\n            <>\n              {gamesUsers}\n            </>\n          }\n          title={\"Игры\"}\n          action={<img src={Games} alt='' width={35}/>}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      Math.floor((gamesUsers-10)*100/gamesUsers), \n                      Math.floor((gamesUsers-10)*100/gamesUsers), \n                      Math.floor((gamesUsers-10)*100/gamesUsers), \n                      Math.floor((gamesUsers-10)*100/gamesUsers), \n                      0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Production */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"danger\"\n          value={\n            <>\n              {productionUsers} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Продакшн\"}\n          action={<img src={Production} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      Math.floor((productionUsers-10)*100/productionUsers), \n                      Math.floor((productionUsers-10)*100/productionUsers), \n                      Math.floor((productionUsers-10)*100/productionUsers), \n                      Math.floor((productionUsers-10)*100/productionUsers), \n                      0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol> \n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown5\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nconst WidgetsDropdown6 = ({\n  users, \n  newUsers, \n  activeUsers, \n  delUsers, \n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              {users.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Всего\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      (users.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/users.length-5, \n                     0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {newUsers.length} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Новые\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/newUsers.length-5, \n                      0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {activeUsers.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Активные\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [activeUsers, 0, 0, 0, 0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              {delUsers.length}\n            </>\n          }\n          title={\"Удаленные\"}\n          action={\"\"}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', \n                  'Февраль', \n                  'Март', \n                  'Апрель', \n                  'Май', \n                  'Июнь', \n                  'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [delUsers, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown6\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nconst Chart2 = ({ data, data2, width, height, range }) => {\n  const [activeIndex, setActiveIndex] = React.useState(null);\n\n  const scaleColor = d3.scaleSequential(d3.interpolateViridis);\n  const scaleHeight = d3.scaleLinear();\n  const scaleWidth = d3.scaleBand().padding(0.1);\n  \n  const getX = d3.scaleBand()\n    .domain(data.map(item => item.name))\n    .range([0, width]);\n\n  const getY = d3.scaleLinear()\n    .domain([0, range])\n    .range([height, 0]);\n  \n  const getYAxis = ref => {\n    const yAxis = d3.axisLeft(getY)\n      .tickSize(-width)\n      .tickPadding(7);\n    d3.select(ref).call(yAxis);\n  };\n\n  const getXAxis = ref => {\n    const xAxis = d3.axisBottom(getX);\n    d3.select(ref).call(xAxis);\n  };\n\n  // const linePath = d3.line()\n  //   .x(d => getX(d.name) + getX.bandwidth() / 2)\n  //   .y(d => getY(d.value))\n  //   .curve(d3.curveMonotoneX)(data)\n\n  // const linePath2 = d3.line()\n  //   .x(d => getX(d.name) + getX.bandwidth() / 2)\n  //   .y(d => getY(d.value))\n  //   .curve(d3.curveMonotoneX)(data2)\n\n  const areaPath = d3.area()\n    .x(d => getX(d.name) + getX.bandwidth() / 2)\n    .y0(d => getY(d.value))\n    .y1(() => getY(0))\n    .curve(d3.curveMonotoneX)(data);\n\n  const handleMouseMove = (e) => {\n    const x = e.nativeEvent.offsetX;\n    const index = Math.floor(x / getX.step());\n    setActiveIndex(index);\n  };\n\n  const handleMouseLeave = () => {\n    setActiveIndex(null);\n  };\n  \n  return (\n    <div className=\"wrapper-chart\">\n      <svg\n        className=\"svg\"\n        width={width}\n        height={height}\n        onMouseMove={handleMouseMove}\n        onMouseLeave={handleMouseLeave}\n      >\n        {/* ось y */}\n        {/* <g className=\"axis\" ref={getYAxis} /> */}\n\n        {/* ось x */}\n        <g\n          className=\"axis xAxis\"\n          ref={getXAxis}\n          transform={`translate(0,${getY(0)})`}\n        />\n        <path\n          fill=\"#4b0082\"\n          d={areaPath}\n          opacity={0}\n        />\n\n        {/* {data.map((item, index) => {\n          return (\n            <g key={index}>\n              <circle\n                cx={getX(item.name) + getX.bandwidth() / 2}\n                cy={getY(item.value)}\n                r={index === activeIndex ? 6 : 4}\n                fill=\"#7cb5ec\"\n                strokeWidth={index === activeIndex ? 2 : 0}\n                stroke=\"#fff\"\n                style={{ transition: `ease-out .1s` }}\n              />\n              <text\n                fill=\"#fff\"\n                x={getX(item.name) + getX.bandwidth() / 2}\n                y={getY(item.value) - 10}\n                textAnchor=\"middle\"\n              >\n                {item.value}\n              </text>\n            </g>\n          );\n        })}\n        {data2.map((item, index) => {\n          return (\n            <g key={index}>\n              <circle\n                cx={getX(item.name) + getX.bandwidth() / 2}\n                cy={getY(item.value)}\n                r={index === activeIndex ? 6 : 4}\n                fill=\"#7cb5ec\"\n                strokeWidth={index === activeIndex ? 2 : 0}\n                stroke=\"#fff\"\n                style={{ transition: `ease-out .1s` }}\n              />\n              <text\n                fill=\"#fff\"\n                x={getX(item.name) + getX.bandwidth() / 2}\n                y={getY(item.value) - 10}\n                textAnchor=\"middle\"\n              >\n                {item.value}\n              </text>\n            </g>\n          );\n        })} */}\n        { data.map((item, index) => {\n          return (\n            <g key={index}>\n              <rect key={index}\n                width={40}\n                height={height - getY(item.value)}\n                x={getX(item.name) + getX.bandwidth() / 2 - 20}\n                y={getY(item.value)}\n                fill='#4b0082'\n                rx=\"2\" ry=\"2\"\n              />\n              <text\n                fill=\"#fff\"\n                x={getX(item.name) + getX.bandwidth() / 2}\n                y={getY(item.value) - 10}\n                textAnchor=\"middle\"\n              >\n                {item.value ? item.value : ''}\n              </text>\n            </g>\n          );\n        })}\n\n      </svg>\n    </div>\n  );\n};\n\n\nexport default Chart2","import React, { Suspense, useState, useEffect, useRef } from 'react'\nimport { CContainer, CSpinner } from '@coreui/react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport {\n  CAvatar,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CFormInput,\n  CButton,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CCollapse,\n  CToast,\n  CToastBody,\n  CToastClose,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilPeople, cilX,\n} from '@coreui/icons'\n\nimport {\n  CWidgetStatsA,\n} from '@coreui/react'\n\nimport avatar2 from 'src/assets/images/avatars/blank-avatar.png'\nimport arrowDown from 'src/assets/images/arrowDown.svg'\n\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\nimport { getAllMessages, getMessages } from './../http/chatAPI.js'\nimport { getAllWMessages, getWorkersCount } from './../http/workerAPI.js'\n\nimport WidgetsDropdown from '../views/widgets/WidgetsDropdown'\nimport WidgetsDropdown2 from '../views/widgets/WidgetsDropdown2'\nimport WidgetsDropdown3 from '../views/widgets/WidgetsDropdown3'\nimport WidgetsDropdown4 from '../views/widgets/WidgetsDropdown4'\nimport WidgetsDropdown5 from '../views/widgets/WidgetsDropdown5'\nimport WidgetsDropdown6 from '../views/widgets/WidgetsDropdown6'\n\nimport InputMask from 'react-input-mask';\n\nimport Chart from './../components/Chart'\nimport ChartBar from './../components/Chart2'\nimport specData from 'src/data/specData'\n\nconst Admin = () => {\n\n  const grafik = useRef(null);\n\n  const { users: clients } = useUsersContext();\n  const { managers: zakazchiki } = useUsersContext();\n  const { projects: projs } = useUsersContext();\n  const { companys: comps } = useUsersContext();\n  const { userWorkers: specusers } = useUsersContext();\n  const { workersAll, workers, setWorkers } = useUsersContext();\n\n  const [contacts, setContacts] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [newClients, setNewClients] = useState([]);\n  const [oldClients, setOldClients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  \n  const [sortWorkers, setSortWorkers] = useState([]);\n  const [newWorkers, setNewWorkers] = useState([]);\n  const [activWorkers, setActivWorkers] = useState([]);\n  const [delWorkers, setDelWorkers] = useState([]);\n\n  const [sortDelWorkers, setSortDelWorkers] = useState([]);\n\n  const [sortWorkers2, setSortWorkers2] = useState([]);\n  const [newWorkers2, setNewWorkers2] = useState([]);\n  const [activWorkers2, setActivWorkers2]= useState([]);\n  const [delWorkers2, setDelWorkers2]= useState([]);\n\n  const [catCount, setCatCount] = useState([])\n\n  const [dayWorkers, setDayWorkers]= useState([]);\n  const [weekWorkers, setWeekWorkers]= useState([]);\n  const [monthWorkers, setMonthWorkers]= useState([]);\n  const [yearWorkers, setYearWorkers]= useState([]);\n  const [periodWorkers, setPeriodWorkers]= useState([]);\n\n  const [showRenthub, setShowRenthub]= useState(false);\n  const [showWorkhub, setShowWorkhub]= useState(true);\n  const [showDeleted, setShowDeleted]= useState(false);\n\n  const [activeKey, setActiveKey] = useState(2)\n\n  const [showWidget, setShowWidget] = useState(false)\n  const [showWidget2, setShowWidget2] = useState(true)\n  const [showWidget3, setShowWidget3] = useState(false)\n  const [showWidget4, setShowWidget4] = useState(false)\n  const [showWidget5, setShowWidget5] = useState(false)\n  const [showWidget6, setShowWidget6] = useState(false)\n\n  const [showCharts, setShowCharts]= useState(false);\n  const [showCharts2, setShowCharts2]= useState(false);\n  const [showCharts3, setShowCharts3]= useState(false);\n  const [showCharts4, setShowCharts4]= useState(false);\n  const [showCharts5, setShowCharts5]= useState(false);\n\n  const [showCountAll, setShowCountAll] = useState(false);\n  const [showNick, setShowNick]= useState(false);\n\n  const [tabhub, setTabhub]= useState('');\n\n  const [periodDate1, setPeriodDate1] = useState(\"\")\n  const [periodDate2, setPeriodDate2] = useState(\"\")\n\n  const [startWeek, setStartWeek] = useState(\"\")\n  const [timerId, setTimerId] = useState()\n  const [widthGrafik, setWdthGrafik] = useState(0);\n  const [text, setText]= useState(\"\");\n  const [textDelete, setTextDelete]= useState(\"\");\n  const [showTable, setShowTable] = useState([])\n\n  const chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID\n  const host = process.env.REACT_APP_API_URL\n  \n  useEffect(() => {\n    //set tab\n    setTabhub('Workhub')\n\n    //console.log(\"specusers: \", specusers)\n\n    setTimeout(()=> {\n      setShowNick(!showNick)\n    }, 10000)\n  })\n\n  useEffect(() => {\n    //get width\n    setWdthGrafik(grafik.current ? grafik.current.offsetWidth - 100 : 0)\n  }, [grafik.current]);\n//--------------------------------------------------------------------------------------------------\n\n  //поиск\n  useEffect(() => {\n\t\tconst filteredData = workersAll.filter(user=> (user.userfamily + user.username + user.chatId)?.replace(/[её]/g, '(е|ё)').toLowerCase().includes(text.replace(/[её]/g, '(е|ё)').toLowerCase()));\n    setSortWorkers(text === '' ? workersAll : filteredData); \n    setWorkers(text === '' ? workers : filteredData);  \n  }, [text]);\n\n  //поиск удаленных специалистов\n  useEffect(() => {\n\t\tconst filteredData = delWorkers.filter(user=> (user.userfamily + user.username + user.chatId)?.replace(/[её]/g, '(е|ё)').toLowerCase().includes(textDelete.replace(/[её]/g, '(е|ё)').toLowerCase()));\n    setSortDelWorkers(textDelete === '' ? delWorkers : filteredData);  \n  }, [textDelete]);\n\n\n  //get filter workers\n  useEffect(() => {\n    //setSortWorkers(workers)\n\n    const currentDate = new Date()\n    const currentMonth = currentDate.getMonth()\n\n    //массив новых пользователей за текущий месяц\n    const arr1 = workersAll.filter(item => new Date(item.createDate).getMonth() === currentMonth)\n    setNewWorkers(arr1)\n\n    //массив удаленных пользователей\n    const arrDel = workersAll.filter(item => item.deleted === true)\n    setDelWorkers(arrDel)\n    setSortDelWorkers(arrDel)\n\n  }, [workersAll])\n//--------------------------------------------------------------------------------------------------\n\n//get workers active\nuseEffect(() => {\n  const arrClients = []\n\n  const fetchData = async() => {\n\n    let messages = await getAllWMessages()\n\n    workersAll.map((client, index) => {\n\n      const allMessages = messages ? messages.length : [] //всего сообщений\n      const currentMonth = new Date().getMonth()\n      const messagesUser = messages.find(el => el.senderId === client.chatId  && new Date(el.createdAt).getMonth() === currentMonth);\n      //массив активных пользователей за текущий месяц\n      if (messagesUser !== undefined) {\n        arrClients.push(messagesUser)\n      }  \n    })\n    setActivWorkers(arrClients)\n  }\n  \n  fetchData();\n  \n}, [workersAll]);\n//---------------------------------------------------------------------------------------------------------\n\n  //get Contacts\n  useEffect(() => {\n    const arrClients = []\n\n    const fetchData = async() => {\n\n      //console.log(\"workers (admin): \", workers.length)\n      setLoading2(false)\n\n      let messages = await getAllMessages()\n\n      const managers = [...zakazchiki];\n      //console.log(\"zakazchiki: \", zakazchiki)\n\n      clients.map((client, index) => {\n        \n        let userIndex = zakazchiki?.findIndex((manager) => manager.tgID === client.chatId);  \n        const userObject = managers[userIndex];\n\n        let userObject2 = comps.find((company) => company.managers.find(man => man.id ===  userObject?.id)) //company.managers.map((manager) => manager.id === userObject?.id));  \n\n        const companyName = userObject2?.title\n        const companyCity = userObject2?.city ? userObject2?.city : ''\n\n        const lastDate = client.date ? client.date.split('T') : ''\n        const d = new Date(lastDate[0]);\n\t\t\t\tconst year = d.getFullYear();\n\t\t\t\tconst month = String(d.getMonth()+1).padStart(2, \"0\");\n\t\t\t\tconst day = String(d.getDate()).padStart(2, \"0\");\n\t\t\t\tconst newDateActivity = `${day}.${month}.${year}`\n\n        const newClientName = client.name.includes(\"|\") ? client.name.split(\" | \")[1] : client.name\n         \n        const allMessages = messages ? messages.length : [] //всего сообщений\n        const fromAdmin = messages ? messages.filter(el => el.senderId === chatAdminId) : [];\n        const messagesUsers = messages ? messages.filter(el => el.senderId === client.chatId) : [];\n\n        const arr = clients.filter(el => el.message === '');\n        setNewClients(arr)\n\n        const arr2 = clients.filter(el => el.message !== '');\n        setOldClients(arr2)\n        \n        const newObj = {\n          avatar: client.avatar,\n          user: {\n            name: newClientName,\n            new: true,\n            registered: '01.01.2023',\n          },\n          TG_ID: client.chatId,\n          city: companyCity,\n          company: companyName ? companyName : '',\n          phone: userObject?.phone,\n          usage: {\n            value: Math.round(messagesUsers.length * 100 / (allMessages - fromAdmin.length)), \n            period: '01.04.2023 - ' + newDateActivity,\n            color: 'success',\n          },\n          activity: newDateActivity,\n        }\n\n        arrClients.push(newObj)\n      })\n\n      const filteredClients = [...arrClients].filter((el) => el.TG_ID !== chatAdminId); //без админского пользователя  \n      const clientSort = [...filteredClients].sort((a, b) => {       \n\t\t\t\treturn b.usage.value-a.usage.value  //сортировка по убывающей активности  \n\t\t\t}) \n \n      setContacts(clientSort)  \n      \n      setTimeout(() => {\n        setLoading(false)\n      }, \"6000\")\n    }\n    \n    fetchData();\n    \n  }, [clients, workersAll]);\n//---------------------------------------------------------------------------------------------\n\n//get Projects\n  useEffect(() => {\n    const arrProjects = []\n\n    const fetchData = async () => {\n\t\t\t\n      projs.map(async (project) => {\n        const newProject = {\n\t\t\t\t\tid: project.id,\n\t\t\t\t\tname: project.title,\n\t\t\t\t\tstart: project.time_start,\n          created: project.time_created,\n          teh: project.teh,\n          manager: project.manager,\n          company: project.company,\n\t\t\t\t}\n        arrProjects.push(newProject)\n      })\n\n      setProjects(arrProjects) \n    }\n\n    fetchData();\n    \n  },[projs])\n\n//-----------------------------------------------------------------------------------------------\n\n  const openHub = (hub) => {\n    if (hub === 'Workhub') { \n      setShowWorkhub(true)\n      setShowRenthub(false)\n      setShowDeleted(false)\n      setActiveKey(2)\n      setShowWidget(false)\n      setShowWidget2(true)\n      setTabhub('Workhub')\n    }\n    if (hub === 'Renthub') { \n      setShowWorkhub(false)\n      setShowRenthub(true)\n      setShowDeleted(false)\n      setActiveKey(1)\n      setShowWidget(true)\n      setShowWidget2(false)\n      setTabhub('Renthub')\n    }\n    if (hub === 'Удаленные') { \n      setShowWorkhub(false)\n      setShowRenthub(false)\n      setShowDeleted(true)\n      setActiveKey(3)\n      // setShowWidget(true)\n      // setShowWidget2(false)\n      setTabhub('Удаленные')\n    }\n  }\n\n  //нажатия на кнопки\n  const showBlock = (ind) => {\n    setShowCountAll(true)\n    switch (ind) {\n\n      //за сутки\n      case 1:{\n        console.log(\"Фильтр за сутки: \", ind)\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n        setShowWidget6(false)\n\n        //открыть стартовые плашки\n        setShowWidget6(true)\n\n        let i = 0\n        setTimerId(setInterval(() => {\n          if ((i) % 4 === 0) {\n            setShowWidget2(true) //2\n            setShowWidget3(false) \n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+1) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(true) //3\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false) \n          }\n          if ((i+2) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(true) //4\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+3) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true) //5\n            setShowWidget6(false)\n          }  \n          if ((i+4) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(true) //6\n          }\n          i++\n        }, 3000));\n\n        setShowCharts(true)\n        setShowCharts2(false)\n        setShowCharts3(false)\n        setShowCharts4(false)\n        setShowCharts5(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за сутки\n        const carrentDate = Date.now()\n\n        //кол-во часов\n        const currentChas = new Date().getHours()\n        console.log(\"currentChas: \", currentChas)\n        \n        //за несколько часов\n        const needDate = carrentDate - currentChas*3600000\n\n        let arr = workersAll.filter(item => new Date(item.createDate).getTime() > needDate);\n\n        let categories = []\n        let count_cat\n\n        //console.log(\"arr1: \", arr)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.icon)) { //category.name\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        //console.log(\"categories: \", categories)\n        setCatCount(categories)\n\n        //всего пользователей\n        setSortWorkers(arr)\n        setWorkers(arr)\n\n        //массив новых пользователей за сутки\n        const arrNew = workersAll.filter(item => new Date(item.createDate).getTime() > needDate)\n        setNewWorkers2(arrNew)\n\n        //массив активных пользователей\n        // const arrActiv = activWorkers2.filter(item => new Date(item.createDate).getTime() > needDate)\n        // setActivWorkers2(arrActiv)\n\n        //массив удаленных пользователей\n        const arrDel = delWorkers.filter(item => item.deleted === true && new Date(item.createDate).getTime() > needDate)\n        setDelWorkers2(arrDel)\n        \n        let days1 = []\n        let countSpec = 0\n\n        //arr.map(item => console.log(\"arr: \", new Date(item.createDate)));\n\n        for (let i=0; i<=23; i++) {\n\n          const arrSpec = arr.filter(item => i === new Date(item.createDate).getHours() && i <= new Date().getHours());\n          countSpec = arrSpec.length\n          \n          const newObj= {\n            name: i<10 ? '0'+ i + ':00' : ''+ i + ':00', \n            value: countSpec,\n          }\n\n          days1.push(newObj)\n        }       \n\n        setDayWorkers(days1)\n\n        break;\n      }\n\n      //за неделю\n      case 2:{\n        clearTimeout(timerId);\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n        setShowWidget6(false)\n\n         //открыть стартовые плашки\n         setShowWidget6(true)\n\n         let i = 0\n         setTimerId(setInterval(() => {\n            if ((i) % 4 === 0) {\n              setShowWidget2(true) //2\n              setShowWidget3(false) \n              setShowWidget4(false)\n              setShowWidget5(false)\n              setShowWidget6(false)\n            }\n            if ((i+1) % 4 === 0) {\n              setShowWidget2(false)\n              setShowWidget3(true) //3\n              setShowWidget4(false)\n              setShowWidget5(false)\n              setShowWidget6(false) \n            }\n            if ((i+2) % 4 === 0) {\n              setShowWidget2(false)\n              setShowWidget3(false)\n              setShowWidget4(true) //4\n              setShowWidget5(false)\n              setShowWidget6(false)\n            }\n            if ((i+3) % 4 === 0) {\n              setShowWidget2(false)\n              setShowWidget3(false)\n              setShowWidget4(false)\n              setShowWidget5(true) //5\n              setShowWidget6(false)\n            }  \n            if ((i+4) % 4 === 0) {\n              setShowWidget2(false)\n              setShowWidget3(false)\n              setShowWidget4(false)\n              setShowWidget5(false)\n              setShowWidget6(true) //6\n            }\n            i++\n          }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(true)\n        setShowCharts3(false)\n        setShowCharts4(false)\n        setShowCharts5(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за неделю\n        const carrentDate = Date.now()\n        //console.log(\"carrentDate: \", carrentDate)\n\n        const dayNumber = [7, 1, 2, 3, 4, 5, 6][new Date().getDay()] -1\n\n        const needDate = carrentDate - 86400000*dayNumber //604800000\n        setStartWeek(new Date(needDate).toLocaleDateString())\n        //console.log(\"needDate: \", needDate)\n        \n        \n        let arr = workersAll.filter(item => new Date(item.createDate).getTime() > needDate);\n        let categories = []\n        let count_cat\n\n        console.log(\"arr2: \", arr)\n        console.log(\"specData: \", specData)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.icon)) { //category.name\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n\n        setSortWorkers(arr)\n        setWorkers(arr)\n\n        //массив новых пользователей за неделю\n        const arrNew = workersAll.filter(item => new Date(item.createDate).getTime() > needDate)\n        setNewWorkers2(arrNew)\n\n        //массив активных пользователей\n        // const arrActiv = workersAll.filter(item => new Date(item.createDate).getTime() > needDate)\n        // setActivWorkers2(arrActiv)\n\n        //массив удаленных пользователей\n        const arrDel = delWorkers.filter(item => item.deleted === true && new Date(item.createDate).getTime() > needDate)\n        setDelWorkers2(arrDel)\n\n        let week2 = []\n        let nameDay = ''\n        let countSpec = 0\n        for (let i=1; i<=7; i++) {\n          if (i===1) {\n            nameDay = 'Пн'\n            //let date = new Date(item.createDate);\n            //let dayWeek = [7, 1, 2, 3, 4, 5, 6][date.getDay()];\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===2) {\n            nameDay = 'Вт'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===3) {\n            nameDay = 'Ср'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===4) {\n            nameDay = 'Чт'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===5) {\n            nameDay = 'Пт'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===6) {\n            nameDay = 'Сб'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===7) {\n            nameDay = 'Вс'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()] && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n\n          const newObj= {\n                name: nameDay, \n                value: countSpec,\n              }\n          week2.push(newObj)\n        }  \n        console.log(\"week: \", week2)     \n        setWeekWorkers(week2)\n        break;\n      }\n\n      //за месяц\n      case 3:{\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n        setShowWidget6(false)\n\n         //открыть стартовые плашки\n         setShowWidget6(true)\n\n         let i = 0\n         setTimerId(setInterval(() => {\n          if ((i) % 4 === 0) {\n            setShowWidget2(true) //2\n            setShowWidget3(false) \n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+1) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(true) //3\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false) \n          }\n          if ((i+2) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(true) //4\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+3) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true) //5\n            setShowWidget6(false)\n          }  \n          if ((i+4) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(true) //6\n          }\n           i++\n         }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(false)\n        setShowCharts3(true)\n        setShowCharts4(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за месяц\n        const carrentDate = Date.now()\n        //console.log(\"carrentDate: \", carrentDate)\n\n        const dayNumber = new Date().getDate() - 1\n        \n        const needDate = carrentDate - dayNumber*86400000 //2592000000\n        //console.log(\"needDate: \", new Date(needDate))\n        \n        //кол-во специалистов за период на начало месяца по текущее число\n        let arr = workersAll.filter(item => new Date(item.createDate).getTime() > needDate);\n        let categories = []\n        let count_cat\n\n        console.log(\"arr3: \", arr)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.icon)) { //category.name\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n\n        setSortWorkers(arr)\n        //setMonthWorkers(arr)\n        setWorkers(arr)\n\n        //массив новых пользователей за месяц\n        const arrNew = workersAll.filter(item => new Date(item.createDate).getTime() > needDate)\n        setNewWorkers2(arrNew)\n\n        //массив активных пользователей\n        // const arrActiv = activWorkers2.filter(item => new Date(item.createDate).getTime() > needDate)\n        // setActivWorkers2(arrActiv)\n\n        //массив удаленных пользователей\n        const arrDel = delWorkers.filter(item => item.deleted === true && new Date(item.createDate).getTime() > needDate)\n        setDelWorkers2(arrDel)\n\n        let countSpec = 0\n        let month3 = []\n\n        for (let i=1; i<=31; i++) {\n          const arrSpec = arr.filter(item => i === new Date(item.createDate).getDate() && new Date().getMonth() === new Date(item.createDate).getMonth());\n          countSpec = arrSpec.length\n          const newObj= {\n            name: i<10 ? '0'+ i : ''+ i, \n            value: countSpec > 0 ? countSpec : '',\n          }\n          month3.push(newObj)\n        }  \n        console.log(\"month3: \", month3)     \n        setMonthWorkers(month3)\n        break;\n      }\n\n      //за год\n      case 4:{\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n        setShowWidget6(false)\n\n         //открыть стартовые плашки\n         setShowWidget6(true)\n\n         let i = 0\n         setTimerId(setInterval(() => {\n          if ((i) % 4 === 0) {\n            setShowWidget2(true) //2\n            setShowWidget3(false) \n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+1) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(true) //3\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false) \n          }\n          if ((i+2) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(true) //4\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+3) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true) //5\n            setShowWidget6(false)\n          }  \n          if ((i+4) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(true) //6\n          }\n           i++\n         }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(false)\n        setShowCharts3(false)\n        setShowCharts4(true)\n        setShowCharts5(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за год\n        let arr = workersAll.filter(item => item.createDate.split('T')[0].split('-')[0] === '2024');\n        let categories = []\n        let count_cat\n\n        console.log(\"arr year: \", arr)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.icon)) { //category.name\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n\n        setSortWorkers(arr)\n        setWorkers(arr)\n\n        //массив новых пользователей\n\n         //массив новых пользователей за год\n         const arrNew = workersAll.filter(item => item.createDate.split('T')[0].split('-')[0] === '2024')\n         setNewWorkers2(arrNew)\n\n        //массив удаленных пользователей\n        const arrDel = delWorkers.filter(item => item.deleted === true && item.createDate.split('T')[0].split('-')[0] === '2024')\n        setDelWorkers2(arrDel)\n\n        arr.map((item)=>console.log(\"month: \", new Date(item.createDate).getMonth()+1))\n\n        //график\n        let year4 = []\n        let nameMonth = ''\n        let countSpec = 0\n        for (let i=1; i<=12; i++) {\n          if (i===1) {\n            nameMonth = 'Январь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===2) {\n            nameMonth = 'Февраль'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===3) {\n            nameMonth = 'Март'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===4) {\n            nameMonth = 'Апрель'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===5) {\n            nameMonth = 'Май'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===6) {\n            nameMonth = 'Июнь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===7) {\n            nameMonth = 'Июль'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===8) {\n            nameMonth = 'Август'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===9) {\n            nameMonth = 'Сентябрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===10) {\n            nameMonth = 'Октябрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===11) {\n            nameMonth = 'Ноябрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===12) {\n            nameMonth = 'Декабрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          \n          const newObj= {\n                name: nameMonth, \n                value: countSpec > 0 ? countSpec : '',\n              }\n              year4.push(newObj)\n        }  \n        console.log(\"year4: \", year4)     \n        setYearWorkers(year4)\n        break;\n      }\n\n      //за период\n      case 5:{\n        console.log(\"за период\", periodDate1, periodDate2)\n\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n        setShowWidget6(false)\n\n        //открыть стартовые плашки\n        setShowWidget6(true)\n\n         let i = 0\n        setTimerId(setInterval(() => {\n          if ((i) % 4 === 0) {\n            setShowWidget2(true) //2\n            setShowWidget3(false) \n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+1) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(true) //3\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false) \n          }\n          if ((i+2) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(true) //4\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+3) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true) //5\n            setShowWidget6(false)\n          }  \n          if ((i+4) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(true) //6\n          }\n           i++\n        }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(false)\n        setShowCharts3(false)\n        setShowCharts4(false)\n        setShowCharts5(true)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        let nextDay = new Date(periodDate1.split('.')[2], periodDate1.split('.')[1]-1, periodDate1.split('.')[0])\n        let endDay = new Date(periodDate2.split('.')[2], periodDate2.split('.')[1]-1, periodDate2.split('.')[0])\n\n        //фильтрация таблицы за период\n        let arr5 = workersAll.filter(item => new Date(item.createDate) > nextDay && new Date(item.createDate) < endDay);\n        setSortWorkers(arr5)\n\n\n        //массив новых пользователей за период\n        const arrNew = workersAll.filter(item => new Date(item.createDate) > nextDay && new Date(item.createDate) < endDay)\n        setNewWorkers2(arrNew)\n\n        //массив активных пользователей\n\n        //массив удаленных пользователей\n        const arrDel = delWorkers.filter(item => new Date(item.createDate) > nextDay && new Date(item.createDate) < endDay)\n        setDelWorkers2(arrDel)\n\n        let categories = []\n        let count_cat\n\n        console.log(\"arr5 period: \", arr5)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr5.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.icon)) { //category.name\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n        setSortWorkers(arr5)\n        setWorkers(arr5)\n\n        //arr5.map((item)=>console.log(\"period: \", item))\n\n        //график\n        let period5 = []\n        let countSpec = 0\n\n        while (nextDay.getTime() < endDay.getTime()) { // выводит 0, затем 1, затем 2\n          const arrSpec = arr5.filter(item => nextDay.toLocaleDateString() === new Date(item.createDate).toLocaleDateString());\n          countSpec = arrSpec.length\n          const newObj= {\n            name: nextDay.getDate().toString().length < 2 ? '0'+nextDay.getDate() : nextDay.getDate().toString(), \n            value: countSpec > 0 ? countSpec : '',\n          }\n          period5.push(newObj)\n          //nextDay = nextDay + j\n          nextDay.setDate(nextDay.getDate() + 1);\n        }\n        \n        console.log(\"period5: \", period5)     \n        setPeriodWorkers(period5)\n\n        break;\n      }\n    }\n  }\n\n  const changeDate1 = (e) => {\n    setPeriodDate1(e.target.value)\n  }\n\n  const changeDate2 = (e) => {\n    setPeriodDate2(e.target.value)\n  }\n\n\n  const hideCharts = () => {\n    setShowCharts(false)\n    setShowCharts2(false)\n    setShowCharts3(false)\n    setShowCharts4(false)\n    \n    clearTimeout(timerId);\n\n    setShowWidget2(true) //всего\n    setShowWidget3(false) //категория 1\n    setShowWidget4(false) //категория 2\n    setShowWidget5(false) //категория 3\n    setShowWidget6(false) //категория 3\n    \n  }\n\n  const handleClick = (ind) => {\n    console.log(ind, showTable[ind])\n\n    setShowTable(prevShownTable => ({\n        ...prevShownTable,\n        [ind]: !prevShownTable[ind]\n      }));\n  }\n\n  const clickNext = async() => {\n\n    //1 все специалисты\n\t\tlet response = await getWorkersCount(100, workers.length);\n    console.log(\"workers size: \", workers.length)\n\n    const arrayWorker = []\n\t\t\n\t\t\tresponse.reverse().map(async (user) => {\n\t\t\t\tconst newWorker = {\n\t\t\t\t  id: user.id,\n\t\t\t\t  userfamily: user.userfamily,\n\t\t\t\t  username: user.username,\n\t\t\t\t  phone: user.phone,\n\t\t\t\t  dateborn: user.dateborn,\n\t\t\t\t  city: user.city, \n\t\t\t\t  companys: user.companys,\n\t\t\t\t  stag: user.stag,\n\t\t\t\t  worklist:  user.worklist,\n\t\t\t\t  chatId: user.chatId,\n\t\t\t\t  createDate: user.createdAt,\n\t\t\t\t  avatar: user.avatar,\n\t\t\t\t  from: user.from,\n\t\t\t\t  promoId: user.promoId,\n\t\t\t\t  block: user.block,\n\t\t\t\t  deleted: user.deleted,\n\t\t\t\t}\n\t\t\n\t\t\t\tarrayWorker.push(newWorker)\n\t\t\t})    \n\n      console.log(\"Всего сейчас: \", arrayWorker.length)\n\t\t\t\n      setWorkers(arrayWorker)\t\n      console.log(\"Ещё: \", arrayWorker.length)\n  }\n  \n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader tabs={tabhub}/>\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n              <Suspense fallback={<CSpinner color=\"primary\" />}>\n\n                <>\n                {showWidget \n                ?<WidgetsDropdown\n                  users={clients.length-1} \n                  projects={projects.length} \n                  companys={comps.length} \n                />\n                :\"\"}\n\n                {showWidget2 \n                ?<WidgetsDropdown2\n                  users={workersAll}\n                  newUsers={newWorkers} \n                  activeUsers={activWorkers} \n                  delUsers={delWorkers}\n                />\n                :\"\"}\n\n                {showWidget3 \n                ?<WidgetsDropdown3\n                  soundUsers={catCount[0].count}\n                  lightUsers={catCount[1].count}\n                  videoUsers={catCount[2].count}\n                  photoUsers={catCount[3].count}\n                />\n                :\"\"}\n\n                {showWidget4 \n                ?<WidgetsDropdown4                \n                  promoUsers={catCount[4].count}\n                  cateringUsers={catCount[5].count}\n                  stagehandsUsers={catCount[6].count}\n                  riggerUsers={catCount[7].count}\n                />\n                : \"\"}\n\n                {showWidget5 \n                ?<WidgetsDropdown5\n                  trucksUsers={catCount[8].count}\n                  partyUsers={catCount[9].count}\n                  gamesUsers={catCount[10].count}\n                  productionUsers={catCount[11].count}\n                />\n                : \"\"}\n\n                {showWidget6 \n                ?<WidgetsDropdown6\n                  users={workersAll}\n                  newUsers={newWorkers2} \n                  activeUsers={activWorkers} \n                  delUsers={delWorkers2}\n                />\n                :\"\"}\n                \n\n{/* График Сутки */}\n {showCharts ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title={new Date().toLocaleDateString()}\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}} /></>}\n                  chart={            \n                    <ChartBar\n                      range={8}\n                      data={dayWorkers} \n                      data2={[]}\n                      // data2={\n                      //   [\n                      //     { name: '0:00', value: 1 },\n                      //     { name: '01:00', value: 0 },\n                      //     { name: '02:00', value: 0 },\n                      //     { name: '03:00', value: 0 },\n                      //     { name: '04:00', value: 0 },\n                      //     { name: '05:00', value: 0 },\n                      //     { name: '06:00', value: 0 },\n                      //     { name: '07:00', value: 1 },\n                      //     { name: '08:00', value: 0 },\n                      //     { name: '09:00', value: 0 },\n                      //     { name: '10:00', value: 0 },\n                      //     { name: '11:00', value: 0 },\n                      //     { name: '12:00', value: 0 },\n                      //     { name: '13:00', value: 0 },\n                      //     { name: '14:00', value: 0 },\n                      //     { name: '15:00', value: 0 },\n                      //     { name: '16:00', value: 0 },\n                      //     { name: '17:00', value: 2 },\n                      //     { name: '18:00', value: 1 },\n                      //     { name: '19:00', value: 0 },\n                      //     { name: '20:00', value: 0 },\n                      //     { name: '21:00', value: 0 },\n                      //     { name: '22:00', value: 0 },\n                      //     { name: '23:00', value: 0 },\n                      //   ]\n                      // }\n                      width={widthGrafik} height={350} \n                    />\n\n                  }\n                />\n: \"\"\n}\n\n{/* График Неделя */}\n{showCharts2 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title={startWeek + ' - ' + new Date(new Date(startWeek.split('.')[2], startWeek.split('.')[1]-1, startWeek.split('.')[0]).setDate(new Date(startWeek.split('.')[2], startWeek.split('.')[1]-1, startWeek.split('.')[0]).getDate() + 6)).toLocaleDateString()}\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}}/></>}\n                  chart={\n                    <ChartBar \n                      range={40}\n                      data={weekWorkers} \n                      data2={[]} //удаленные пользователи\n                      // data2={\n                      //   [\n                      //     { name: 'Пн', value: 0 },\n                      //     { name: 'Вт', value: 0 },\n                      //     { name: 'Ср', value: 0 },\n                      //     { name: 'Чт', value: 0 },\n                      //     { name: 'Пт', value: 0 },\n                      //     { name: 'Сб', value: 0 },\n                      //     { name: 'Вс', value: 0 },\n                      //   ]\n                      // }\n                      width={widthGrafik} height={350} \n                    />\n                  }\n                />\n: \"\"\n}\n\n{/* График Месяц */}\n{showCharts3 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title={new Date().toLocaleString('default', { month: 'long' })}\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}}/></>}\n                  chart={\n                    <Chart \n                      range={20}\n                      data={monthWorkers} \n                      // data={\n                      //   [\n                      //     { name: '01', value: 1 },\n                      //     { name: '02', value: 0 },\n                      //     { name: '03', value: 0 },\n                      //     { name: '04', value: 0 },\n                      //     { name: '05', value: 0 },\n                      //     { name: '06', value: 0 },\n                      //     { name: '07', value: 0 },\n                      //     { name: '08', value: 0 },\n                      //     { name: '09', value: 0 },\n                      //     { name: '10', value: 0 },\n                      //     { name: '11', value: 0 },\n                      //     { name: '12', value: 1 },\n                      //     { name: '13', value: 1 },\n                      //     { name: '14', value: 0 },\n                      //     { name: '15', value: 0 },\n                      //     { name: '16', value: 0 },\n                      //     { name: '17', value: 0 },\n                      //     { name: '18', value: 0 },\n                      //     { name: '19', value: 0 },\n                      //     { name: '20', value: 0 },\n                      //     { name: '21', value: 0 },\n                      //     { name: '22', value: 0 },\n                      //     { name: '23', value: 0 },\n                      //     { name: '24', value: 1 },\n                      //     { name: '25', value: 1 },\n                      //     { name: '26', value: 0 },\n                      //     { name: '27', value: 0 },\n                      //     { name: '28', value: 0 },\n                      //     { name: '29', value: 0 },\n                      //     { name: '30', value: 0 },\n                      //   ]\n                      // }\n                      data2={[]} //удаленные пользователи\n                      width={widthGrafik} height={350} />\n                  }\n                />\n: \"\"\n}\n\n{/* График Год */}\n{showCharts4 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title={new Date().getFullYear()}\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}} /></>}\n                  chart={\n                    <Chart \n                      range={800}\n                      data={yearWorkers}\n                      data2={[]} \n                      // data2={\n                      //   [\n                      //     { name: 'Январь', value: 0 },\n                      //     { name: 'Февраль', value: 0 },\n                      //     { name: 'Март', value: 0 },\n                      //     { name: 'Апрель', value: 0 },\n                      //     { name: 'Май', value: 1 },\n                      //     { name: 'Июнь', value: 0 },\n                      //     { name: 'Июль', value: 0 },\n                      //     { name: 'Август', value: 2 },\n                      //     { name: 'Сентябрь', value: 2 },\n                      //     { name: 'Октябрь', value: 0 },\n                      //     { name: 'Ноябрь', value: 0 },\n                      //     { name: 'Декабрь', value: 0 },\n                      //   ]\n                      // }\n                      width={widthGrafik} height={350} \n                    />             \n                  }\n                />\n: \"\"\n}\n\n{/* График Период */}\n{showCharts5 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title={periodDate1 + ' - ' + periodDate2}\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}} /></>}\n                  chart={\n                    <Chart \n                      range={800}\n                      data={periodWorkers} \n                      data2={[]}                  \n                      width={widthGrafik} \n                      height={350} \n                    />             \n                  }\n                />\n: \"\"\n}\n\n                <CRow className=\"mb-12\">\n                  {/* Вкладки */}\n                  <CCol sm={6}>\n                    {/* Renthub Workhub */} \n                    <CNav variant=\"tabs\" className='dark-theme'>\n                          <CNavItem>\n                            <CNavLink \n                              style={{background: activeKey !== 2 ? '#08080869' : '', cursor: 'pointer'}} \n                              onClick={() => openHub('Workhub')} \n                              active={activeKey === 2}>\n                                Workhub\n                            </CNavLink>\n                          </CNavItem>\n                          <CNavItem>\n                            <CNavLink \n                              style={{background: activeKey !== 1 ? '#08080869' : '', cursor: 'pointer'}} \n                              onClick={() => openHub('Renthub')} \n                              active={activeKey === 1}>\n                                Renthub\n                            </CNavLink>\n                          </CNavItem>\n                    </CNav>\n                  </CCol>\n\n                  <CCol sm={6}>\n                    {/* Удаленные */} \n                    <CNav variant=\"tabs\" className='dark-theme' style={{justifyContent: 'flex-end'}}>\n                          <CNavItem>\n                            <CNavLink \n                              style={{background: activeKey !== 3 ? '#08080869' : '', cursor: 'pointer'}} \n                              onClick={() => openHub('Удаленные')} \n                              active={activeKey === 3}>\n                                Удаленные\n                            </CNavLink>\n                          </CNavItem>\n                    </CNav>\n                  </CCol> \n                </CRow>\n                \n{/*---------------------------------------- Renthub ------------------------------------  */} \n                <CCard className='rounded-bottom' style={{borderRadius: '0px', borderColor: '#131c21', borderTopRightRadius: '0.375rem'}}>\n                  <CCardBody id=\"Renthub\" style={{display: showRenthub ? 'block' : 'none'}}>\n                    <CRow>\n                      <CCol xs>\n                        <CCard className=\"mb-4\">\n                          <CCardHeader style={{textAlign: 'left'}}>Пользователи бота ({clients.length - 1})</CCardHeader>\n                          <CCardBody>\n                            <CRow>\n                              <CCol xs={12} md={6} xl={6}>\n                                <CRow>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                                      <div className=\"text-medium-emphasis small\">Новые клиенты</div>\n                                      <div className=\"fs-5 fw-semibold\">{newClients.length}</div>\n                                    </div>\n                                  </CCol>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Постоянные клиенты</div>\n                                      <div className=\"fs-5 fw-semibold\">{oldClients.length-1}</div>\n                                    </div>\n                                  </CCol>\n                                </CRow>\n                              </CCol>\n\n                              <CCol xs={12} md={6} xl={6}>\n                                <CRow>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Просмотры</div>\n                                      <div className=\"fs-5 fw-semibold\">-</div>\n                                    </div>\n                                  </CCol>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Другое</div>\n                                      <div className=\"fs-5 fw-semibold\">-</div>\n                                    </div>\n                                  </CCol>\n                                </CRow>\n\n                                <div className=\"mb-5\"></div>\n\n                              </CCol>\n                            </CRow>\n\n                          {loading ? \n                                      \n                            <CSpinner/> :\n\n                            <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                              <CTableHead className='table-dark'>\n                                <CTableRow>\n                                  <CTableHeaderCell style={{width: '30px'}}>№</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>\n                                    <CIcon icon={cilPeople} />\n                                  </CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '160px'}}>Пользователь</CTableHeaderCell>                             \n                                  <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Организация</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Телефон</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '80px'}}>Город</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>TG ID</CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '100px'}}>Использование</CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '100px'}}>Активность</CTableHeaderCell>\n                                </CTableRow>\n                              </CTableHead>\n                              <CTableBody>\n                                {contacts.map((item, index) => (\n                                  <CTableRow v-for=\"item in tableItems\" key={index}>\n                                    <CTableDataCell className=\"text-center\">\n                                      {index+1}\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                        <CAvatar size=\"md\" src={item.avatar ? host + item.avatar : avatar2} alt='' />\n                                    </CTableDataCell>\n                                    <CTableDataCell>\n                                      <div>{item.user.name}</div>\n                                      <div className=\"small text-medium-emphasis\">\n                                      </div>\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      {item.company ? <div>{item.company}</div> : ''}\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      <div>{item.phone}</div>\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      <div>{item.city}</div>\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      <div>{item.TG_ID}</div>\n                                    </CTableDataCell>\n                                    <CTableDataCell>\n                                      <div className=\"clearfix\">\n                                        <div className=\"float-start\">\n                                          <strong>{item.usage.value}%</strong>\n                                        </div>\n                                        <div className=\"float-end\">\n                                          <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                                        </div>\n                                      </div>\n                                      <CProgress thin color={item.usage.color} value={item.usage.value} />\n                                    </CTableDataCell>\n                                    <CTableDataCell>\n                                      <div className=\"small text-medium-emphasis\">Последний вход</div>\n                                      <strong>{item.activity}</strong>\n                                    </CTableDataCell>\n                                  </CTableRow>\n                                ))}\n                              </CTableBody>\n                            </CTable>\n                          }\n                          </CCardBody>\n                        </CCard>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n\n{/*----------------------------------------- Workhub ----------------------------------------  */}\n     \n                  <CCardBody id=\"Workhub\" style={{display: showWorkhub ? 'block' : 'none'}}>\n                    <CRow>\n                      <CCol xs>\n                            <CRow>\n                              <CCol md={6} style={{textAlign: 'left'}}>\n                                <CButton color=\"dark\" onClick={()=>showBlock(1)} style={{marginRight: '20px', width: '100px'}}>Сутки</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(2)} style={{marginRight: '20px', width: '100px'}}>Неделя</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(3)} style={{marginRight: '20px', width: '100px'}}>Месяц</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(4)} style={{marginRight: '20px', width: '100px'}}>Год</CButton>\n                              </CCol>\n                              <CCol md={6} style={{textAlign: 'center', display: 'flex'}}>\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate1}\n                                  onChange={changeDate1}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"01.01.2024\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}}    \n                                                  />}\n                                </InputMask>\n\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate2}\n                                  onChange={changeDate2}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"31.12.2024\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}} \n                                                  />}\n                                </InputMask>                             \n                                            \n                                <CButton color=\"dark\" onClick={()=>showBlock(5)} style={{marginLeft: '10px'}}>Применить</CButton>\n                              </CCol>      \n                            </CRow>\n                            \n                            <br/>\n                            <CRow className=\"mb-3\">\n                              <CCol sm={3} >\n                                <CFormInput placeholder=\"Поиск специалиста...\" onChange={(e)=>setText(e.target.value)} aria-label=\"workers\"/>\n                              </CCol>\n                              <CCol sm={6}></CCol>\n\n                              <CCol sm={3} style={{textAlign: 'right', position: 'absolute', top: '-538px', right: '0', marginRight: '35px'}}>\n                                {/* {showCountAll ? sortWorkers.length : ''} */}\n                              </CCol>\n                            </CRow>\n                            \n                            <CRow>\n                              <CCol style={{textAlign: 'center'}}>\n                              {loading2 ? \n                                      \n                                <CSpinner/> :\n\n                                <CTable align=\"middle\" className=\"mb-0 border\" hover responsive style={{fontSize: '14px'}}>\n                                  <CTableHead className='table-light'>\n                                    <CTableRow>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '90px'}}>Дата</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '70px'}}>Время</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '240px'}}>ФИО</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '130px'}}>Город</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" >Специальность</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '90px'}}>Дата</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '160px'}}>Телефон</CTableHeaderCell>                         \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '200px'}}>{ showNick ? 'Ник' : 'Телеграм ID' }</CTableHeaderCell>\n                                    </CTableRow>\n                                  </CTableHead>\n                                  <CTableBody>                                  \n                                    {workers.map((item, index) => (\n                                      <CTableRow v-for=\"item in tableItems\" key={index}>\n                                        <CTableDataCell className=\"text-center\">\n                                          {String(new Date(item.createDate).getDate()).padStart(2, \"0\")+ \".\"+ String(new Date(item.createDate).getMonth()+1).padStart(2, \"0\") + \".\" +new Date(item.createDate).getFullYear()}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {new Date(item.createDate).getHours() + ' : '+ String(new Date(item.createDate).getMinutes()).padStart(2, \"0\")}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 || item.userfamily === 'Неизвестный' ? 'red' : ''}}>\n                                            {item.userfamily ? item.userfamily : ''} {item.username ? item.username : ''} {specusers.find((user) => user.chatId === item.chatId)?.block ? \"[U]\" : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {item.city ? item.city : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{textAlign: 'left'}}>\n                                          <div onClick={()=>handleClick(index)} style={{cursor: 'pointer', textAlign: 'center'}}>{!showTable[index] ? 'Посмотреть' : <br/>}</div>\n                                          <CCollapse visible={showTable[index]}>\n                                            <table>\n                                              <tbody>\n                                                {item.worklist !== '' ? (JSON.parse(item.worklist)).map((spec, index)=>( \n                                                    <tr key={index}>\n                                                      <td>{spec.spec !== '' ? \"- \" + spec.spec : ''}</td>\n                                                    </tr>          \n                                                )) : \"\"}\n                                              </tbody> \n                                            </table>\n                                          </CCollapse>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 ? 'red' : ''}}>\n                                          {item.dateborn ? item.dateborn : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div>{item.phone ? item.phone : ''}</div>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div style={{fontSize: showNick ? '12px' : '14px'}}>{showNick ? specusers.find((user) => user.chatId === item.chatId)?.username : item.chatId}</div>\n                                        </CTableDataCell> \n                                      </CTableRow>\n                                      ))\n                                    }\n                                    {/* <CTableRow>\n                                      <CTableDataCell className=\"text-center\">\n                                        <CButton color=\"dark\" onClick={()=>clickNext()} style={{width: '100px'}}>Ещё</CButton>\n                                      </CTableDataCell>\n                                    </CTableRow> */}\n                                </CTableBody>                   \n                              </CTable>\n                              \n                            }\n                            \n                              </CCol>\n                            </CRow>\n                            <div style={{display: 'flex', justifyContent: 'center' }}>\n                              <img src={arrowDown} alt='' onClick={()=>clickNext()} style={{width: '50px', marginTop: '15px', cursor: 'pointer'}}></img>\n                            </div>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n\n{/*----------------------------------------- Удаленные -----------------------------------------  */}\n     \n                  <CCardBody id=\"Deleted\" style={{display: showDeleted ? 'block' : 'none'}}>\n                    <CRow>\n                      <CCol xs>\n                            <CRow>\n                              <CCol md={6} style={{textAlign: 'left'}}>\n                                <CButton color=\"dark\" onClick={()=>showBlock(1)} style={{marginRight: '20px', width: '100px'}}>Сутки</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(2)} style={{marginRight: '20px', width: '100px'}}>Неделя</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(3)} style={{marginRight: '20px', width: '100px'}}>Месяц</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(4)} style={{marginRight: '20px', width: '100px'}}>Год</CButton>\n                              </CCol>\n                              <CCol md={6} style={{textAlign: 'center', display: 'flex'}}>\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate1}\n                                  onChange={changeDate1}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"01.01.2024\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}}    \n                                                  />}\n                                </InputMask>\n\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate2}\n                                  onChange={changeDate2}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"31.12.2024\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}} \n                                                  />}\n                                </InputMask>                             \n                                            \n                                <CButton color=\"dark\" onClick={()=>showBlock(5)} style={{marginLeft: '10px'}}>Применить</CButton>\n                              </CCol>      \n                            </CRow>\n                            \n                            <br/>\n                            <CRow className=\"mb-3\">\n                              <CCol sm={3} >\n                                <CFormInput placeholder=\"Поиск специалиста...\" onChange={(e)=>setTextDelete(e.target.value)} aria-label=\"workers\"/>\n                              </CCol>\n                              <CCol sm={6}></CCol>\n\n                              <CCol sm={3} style={{textAlign: 'right', position: 'absolute', top: '-538px', right: '0', marginRight: '35px'}}>\n                                {showCountAll ? sortWorkers.length : ''}\n                              </CCol>\n                            </CRow>\n                            \n                            <CRow>\n                              <CCol style={{textAlign: 'center'}}>\n                              {loading2 ? \n                                      \n                                <CSpinner/> :\n\n                                <CTable align=\"middle\" className=\"mb-0 border\" hover responsive style={{fontSize: '14px'}}>\n                                  <CTableHead className='table-light'>\n                                    <CTableRow>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '90px'}}>Дата</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '70px'}}>Время</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '240px'}}>ФИО</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '130px'}}>Город</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" >Специальность</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '90px'}}>Дата</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '160px'}}>Телефон</CTableHeaderCell>                         \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '200px'}}>{ showNick ? 'Ник' : 'Телеграм ID' }</CTableHeaderCell>\n                                    </CTableRow>\n                                  </CTableHead>\n                                  <CTableBody>                                  \n                                    {sortDelWorkers.map((item, index) => (\n                                      <CTableRow v-for=\"item in tableItems\" key={index}>\n                                        <CTableDataCell className=\"text-center\">\n                                          {String(new Date(item.createDate).getDate()).padStart(2, \"0\")+ \".\"+ String(new Date(item.createDate).getMonth()+1).padStart(2, \"0\") + \".\" +new Date(item.createDate).getFullYear()}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {new Date(item.createDate).getHours() + ' : '+ String(new Date(item.createDate).getMinutes()).padStart(2, \"0\")}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 || item.userfamily === 'Неизвестный' ? 'red' : ''}}>\n                                            {item.userfamily ? item.userfamily : ''} {item.username ? item.username : ''} {specusers.find((user) => user.chatId === item.chatId)?.block ? \"[U]\" : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {item.city ? item.city : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{textAlign: 'left'}}>\n                                          <div onClick={()=>handleClick(index)} style={{cursor: 'pointer', textAlign: 'center'}}>{!showTable[index] ? 'Посмотреть' : <br/>}</div>\n                                          <CCollapse visible={showTable[index]}>\n                                            <table>\n                                              <tbody>\n                                                {item.worklist !== '' ? (JSON.parse(item.worklist)).map((spec, index)=>( \n                                                    <tr key={index}>\n                                                      <td>{spec.spec !== '' ? \"- \" + spec.spec : ''}</td>\n                                                    </tr>          \n                                                )) : \"\"}\n                                              </tbody> \n                                            </table>\n                                          </CCollapse>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 ? 'red' : ''}}>\n                                          {item.dateborn ? item.dateborn : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div>{item.phone ? item.phone : ''}</div>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div style={{fontSize: showNick ? '12px' : '14px'}}>{showNick ? specusers.find((user) => user.chatId === item.chatId)?.username : item.chatId}</div>\n                                        </CTableDataCell> \n                                      </CTableRow>\n                                      ))\n                                    }\n                                </CTableBody>                   \n                              </CTable>\n                              \n                            }\n                            \n                              </CCol>\n                            </CRow>\n                            <CRow>\n                              {/* <CCol>\n                                Всего: {sortWorkers.length}\n                              </CCol> */}\n                            </CRow>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n\n                </CCard>\n\n                </>\n\n                </Suspense>\n            </CContainer>\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Admin\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = ({users, projects, companys}) => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              {users} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title=\"Заказчики\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {projects} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title=\"Проекты\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {companys}{' '}\n              {/* <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title=\"Компании\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              44{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Часы [за год]\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nconst WidgetsDropdown2 = ({\n  users, \n  newUsers, \n  activeUsers, \n  delUsers, \n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              {users.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Всего\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      (users.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/users.length-5, \n                     0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {newUsers.length} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Новые\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/newUsers.length-5, \n                      0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {activeUsers.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Активные\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [activeUsers, 0, 0, 0, 0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              {delUsers.length}\n            </>\n          }\n          title={\"Удаленные\"}\n          action={\"\"}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', \n                  'Февраль', \n                  'Март', \n                  'Апрель', \n                  'Май', \n                  'Июнь', \n                  'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [delUsers, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown2\n"],"names":["id","name","icon","models","_ref","soundUsers","lightUsers","videoUsers","photoUsers","_jsxs","CRow","children","_jsx","CCol","sm","lg","CWidgetStatsA","className","color","value","_Fragment","title","action","src","alt","width","chart","CChartLine","style","height","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","Math","floor","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","fill","Photo","promoUsers","cateringUsers","stagehandsUsers","riggerUsers","Promo","Catering","CChartBar","barPercentage","drawTicks","trucksUsers","partyUsers","gamesUsers","productionUsers","Party","users","newUsers","activeUsers","delUsers","length","filter","item","Date","createDate","getMonth","data2","range","activeIndex","setActiveIndex","React","getX","d3","padding","domain","map","getY","areaPath","d","bandwidth","y0","y1","curve","onMouseMove","e","nativeEvent","offsetX","index","step","onMouseLeave","handleMouseLeave","ref","xAxis","call","transform","concat","opacity","rx","ry","textAnchor","Admin","grafik","useRef","clients","useUsersContext","managers","zakazchiki","projects","projs","companys","comps","userWorkers","specusers","workersAll","workers","setWorkers","contacts","setContacts","useState","setProjects","newClients","setNewClients","oldClients","setOldClients","loading","setLoading","loading2","setLoading2","sortWorkers","setSortWorkers","newWorkers","setNewWorkers","activWorkers","setActivWorkers","delWorkers","setDelWorkers","sortDelWorkers","setSortDelWorkers","sortWorkers2","setSortWorkers2","newWorkers2","setNewWorkers2","activWorkers2","setActivWorkers2","delWorkers2","setDelWorkers2","catCount","setCatCount","dayWorkers","setDayWorkers","weekWorkers","setWeekWorkers","monthWorkers","setMonthWorkers","yearWorkers","setYearWorkers","periodWorkers","setPeriodWorkers","showRenthub","setShowRenthub","showWorkhub","setShowWorkhub","showDeleted","setShowDeleted","activeKey","setActiveKey","showWidget","setShowWidget","showWidget2","setShowWidget2","showWidget3","setShowWidget3","showWidget4","setShowWidget4","showWidget5","setShowWidget5","showWidget6","setShowWidget6","showCharts","setShowCharts","showCharts2","setShowCharts2","showCharts3","setShowCharts3","showCharts4","setShowCharts4","showCharts5","setShowCharts5","showCountAll","setShowCountAll","showNick","setShowNick","tabhub","setTabhub","periodDate1","setPeriodDate1","periodDate2","setPeriodDate2","startWeek","setStartWeek","timerId","setTimerId","widthGrafik","setWdthGrafik","text","setText","textDelete","setTextDelete","showTable","setShowTable","chatAdminId","process","useEffect","setTimeout","current","offsetWidth","filteredData","user","userfamily","username","chatId","replace","toLowerCase","includes","_ref2","currentMonth","arr1","arrDel","deleted","arrClients","async","messages","getAllWMessages","client","messagesUser","find","el","senderId","createdAt","undefined","push","fetchData","getAllMessages","userIndex","findIndex","manager","tgID","userObject","userObject2","company","man","companyName","companyCity","city","lastDate","date","split","year","getFullYear","month","String","padStart","day","getDate","newDateActivity","newClientName","allMessages","fromAdmin","messagesUsers","arr","message","arr2","newObj","avatar","new","registered","TG_ID","phone","usage","round","period","activity","clientSort","sort","a","b","arrProjects","newProject","project","start","time_start","created","time_created","teh","openHub","hub","showBlock","ind","console","log","clearTimeout","i","setInterval","clientWidth","carrentDate","now","currentChas","getHours","needDate","count_cat","getTime","categories","specData","category","JSON","parse","worklist","work","cat","obj","count","arrNew","days1","countSpec","getDay","toLocaleDateString","week2","nameDay","month3","year4","nameMonth","nextDay","endDay","arr5","period5","toString","setDate","changeDate1","target","changeDate2","hideCharts","handleClick","prevShownTable","AppSidebar","AppHeader","tabs","CContainer","Suspense","fallback","CSpinner","WidgetsDropdown","WidgetsDropdown2","WidgetsDropdown3","WidgetsDropdown4","WidgetsDropdown5","WidgetsDropdown6","CIcon","cilX","onClick","cursor","ChartBar","toLocaleString","Chart","CNav","variant","CNavItem","CNavLink","background","active","justifyContent","CCard","borderRadius","borderTopRightRadius","CCardBody","xs","CCardHeader","textAlign","md","xl","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","cilPeople","CTableBody","CTableDataCell","CAvatar","size","avatar2","CProgress","thin","CButton","marginRight","InputMask","mask","onChange","inputProps","CFormInput","placeholder","disableUnderline","marginLeft","position","top","right","fontSize","minWidth","_specusers$find","_specusers$find2","getMinutes","dateborn","block","CCollapse","visible","spec","arrowDown","response","getWorkersCount","arrayWorker","reverse","newWorker","stag","from","promoId","clickNext","marginTop","_specusers$find3","_specusers$find4","AppFooter","CDropdown","alignment","CDropdownToggle","caret","cilOptions","CDropdownMenu","CDropdownItem","disabled","cilArrowBottom"],"sourceRoot":""}