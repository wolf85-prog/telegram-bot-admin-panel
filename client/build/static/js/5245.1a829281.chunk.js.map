{"version":3,"file":"static/js/5245.1a829281.chunk.js","mappings":"yPA8BA,MAqLA,EArLgBA,KAEd,MAAQC,MAAOC,IAAYC,EAAAA,EAAAA,MACnBC,SAAUC,IAAeF,EAAAA,EAAAA,MACzBG,SAAUC,IAAUJ,EAAAA,EAAAA,MACpBK,SAAUC,IAAUN,EAAAA,EAAAA,MAErBO,EAAUC,IAAcC,EAAAA,EAAAA,UAAS,KACjCN,EAAUO,IAAcD,EAAAA,EAAAA,UAAS,KACjCE,EAAYC,IAAgBH,EAAAA,EAAAA,UAAS,KACrCI,EAAYC,IAAgBL,EAAAA,EAAAA,UAAS,KACrCM,EAASC,IAAaP,EAAAA,EAAAA,WAAS,GAmBtC,OAZAQ,EAAAA,EAAAA,YAAU,KACa,GAEpB,KAIHA,EAAAA,EAAAA,YAAU,KACc,GAEtB,KAGAC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,KACXJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gDAA+CC,SAAA,EAC5DC,EAAAA,EAAAA,KAACE,EAAAA,GAAS,KACVF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UAElCC,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CAACC,IAAE,EAAAL,UACVC,EAAAA,EAAAA,KAACK,EAAAA,SAAQ,CAACC,UAAUN,EAAAA,EAAAA,KAACO,EAAAA,GAAQ,CAACC,MAAM,YAAaT,UAEjDF,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAV,SAAA,EACAC,EAAAA,EAAAA,KAACU,EAAAA,EAAe,CAACjC,MAAOC,EAAQiC,OAAO,EAAG7B,SAAUA,EAAS6B,OAAQ3B,SAAUC,EAAM0B,UAErFX,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAAAb,UACHC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,IAAE,EAAAf,UACNF,EAAAA,EAAAA,MAACkB,EAAAA,GAAK,CAACjB,UAAU,OAAMC,SAAA,EACrBF,EAAAA,EAAAA,MAACmB,EAAAA,GAAW,CAAAjB,SAAA,CAAC,sGAAoBrB,EAAQiC,OAAS,EAAE,QACpDd,EAAAA,EAAAA,MAACoB,EAAAA,GAAS,CAAAlB,SAAA,EACRF,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAAAb,SAAA,EACHC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,GAAI,GAAII,GAAI,EAAGC,GAAI,EAAEpB,UACzBF,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAAAb,SAAA,EACHC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACO,GAAI,EAAErB,UACVF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0DAAyDC,SAAA,EACtEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,SAAC,+EAC5CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAAET,EAAWqB,eAGlDX,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACO,GAAI,EAAErB,UACVF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iEAAgEC,SAAA,EAC7EC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,SAAC,6GAC5CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAAEP,EAAWmB,OAAO,eAM7Dd,EAAAA,EAAAA,MAACgB,EAAAA,GAAI,CAACC,GAAI,GAAII,GAAI,EAAGC,GAAI,EAAEpB,SAAA,EACzBF,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAAAb,SAAA,EACHC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACO,GAAI,EAAErB,UACVF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAiEC,SAAA,EAC9EC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,SAAC,4DAC5CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAAC,YAGtCC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACO,GAAI,EAAErB,UACVF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kEAAiEC,SAAA,EAC9EC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,SAAC,0CAC5CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAAC,eAKxCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAKpBJ,GAECM,EAAAA,EAAAA,KAACO,EAAAA,GAAQ,KAETV,EAAAA,EAAAA,MAACwB,EAAAA,GAAM,CAACC,MAAM,SAASxB,UAAU,cAAcyB,OAAK,EAACC,YAAU,EAAAzB,SAAA,EAC7DC,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAAC3B,UAAU,aAAYC,UAChCF,EAAAA,EAAAA,MAAC6B,EAAAA,GAAS,CAAA3B,SAAA,EACRC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAgB,CAACC,MAAO,CAACC,MAAO,QAAQ9B,SAAC,YAC1CC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAgB,CAAC7B,UAAU,cAAc8B,MAAO,CAACC,MAAO,SAAS9B,UAChEC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACC,KAAMC,EAAAA,OAEfhC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAgB,CAACC,MAAO,CAACC,MAAO,SAAS9B,SAAC,8EAC3CC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAgB,CAAC7B,UAAU,cAAc8B,MAAO,CAACC,MAAO,SAAS9B,SAAC,wEACnEC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAgB,CAAC7B,UAAU,cAAc8B,MAAO,CAACC,MAAO,SAAS9B,SAAC,gDACnEC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAgB,CAAC7B,UAAU,cAAc8B,MAAO,CAACC,MAAO,QAAQ9B,SAAC,oCAClEC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAgB,CAAC7B,UAAU,cAAc8B,MAAO,CAACC,MAAO,SAAS9B,SAAC,WACnEC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAgB,CAACC,MAAO,CAACC,MAAO,SAAS9B,SAAC,oFAC3CC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAgB,CAACC,MAAO,CAACC,MAAO,SAAS9B,SAAC,uEAI/CC,EAAAA,EAAAA,KAACiC,EAAAA,GAAU,CAAAlC,SACRb,EAASgD,KAAI,CAACC,EAAMC,KACnBvC,EAAAA,EAAAA,MAAC6B,EAAAA,GAAS,CAAC,QAAM,qBAAoB3B,SAAA,EACnCC,EAAAA,EAAAA,KAACqC,EAAAA,GAAc,CAACvC,UAAU,cAAaC,SACpCqC,EAAM,KAETpC,EAAAA,EAAAA,KAACqC,EAAAA,GAAc,CAACvC,UAAU,cAAaC,UACnCC,EAAAA,EAAAA,KAACsC,EAAAA,GAAO,CAACC,KAAK,KAAKC,IAAKL,EAAKM,OArGlDC,+BAqGkEP,EAAKM,OAASE,EAASC,IAAI,QAE5E/C,EAAAA,EAAAA,MAACwC,EAAAA,GAAc,CAAAtC,SAAA,EACbC,EAAAA,EAAAA,KAAA,OAAAD,SAAMoC,EAAKU,KAAKC,QAChB9C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mCAKjBE,EAAAA,EAAAA,KAACqC,EAAAA,GAAc,CAACvC,UAAU,cAAaC,SACpCoC,EAAKY,SAAU/C,EAAAA,EAAAA,KAAA,OAAAD,SAAMoC,EAAKY,UAAiB,MAE9C/C,EAAAA,EAAAA,KAACqC,EAAAA,GAAc,CAACvC,UAAU,cAAaC,UACrCC,EAAAA,EAAAA,KAAA,OAAAD,SAAMoC,EAAKa,WAEbhD,EAAAA,EAAAA,KAACqC,EAAAA,GAAc,CAACvC,UAAU,cAAaC,UACrCC,EAAAA,EAAAA,KAAA,OAAAD,SAAMoC,EAAKc,UAEbjD,EAAAA,EAAAA,KAACqC,EAAAA,GAAc,CAACvC,UAAU,cAAaC,UACrCC,EAAAA,EAAAA,KAAA,OAAAD,SAAMoC,EAAKe,WAEbrD,EAAAA,EAAAA,MAACwC,EAAAA,GAAc,CAAAtC,SAAA,EACbF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,MAAA,UAAAE,SAAA,CAASoC,EAAKgB,MAAMC,MAAM,UAE5BpD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,uBAAsBC,SAAEoC,EAAKgB,MAAME,eAGxDrD,EAAAA,EAAAA,KAACsD,EAAAA,GAAS,CAACC,MAAI,EAAC/C,MAAO2B,EAAKgB,MAAM3C,MAAO4C,MAAOjB,EAAKgB,MAAMC,YAE7DvD,EAAAA,EAAAA,MAACwC,EAAAA,GAAc,CAAAtC,SAAA,EACbC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,SAAC,qFAC5CC,EAAAA,EAAAA,KAAA,UAAAD,SAASoC,EAAKqB,gBAvCyBpB,8BAiEjEpC,EAAAA,EAAAA,KAACyD,EAAAA,GAAS,SAER,C,4FCtMV,MAoTA,EApTyBC,IAKlB,IALmB,MACxBjF,EAAK,SACLkF,EAAQ,YACRC,EAAW,SACXC,GACDH,EAEC,OACE7D,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAAAb,SAAA,EACHC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACO,GAAI,EAAGhB,GAAI,EAAEL,UACjBC,EAAAA,EAAAA,KAAC8D,EAAAA,GAAa,CACZhE,UAAU,OACVU,MAAM,UACN4C,OACEvD,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAV,SAAA,CACGtB,EAAMkC,OAAO,OAMlBoD,MAAO,iCACPC,OAAQ,GACRC,OACEjE,EAAAA,EAAAA,KAACkE,EAAAA,GAAU,CACTpE,UAAU,YACV8B,MAAO,CAAEuC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,cACjBC,YAAa,wBACbC,sBAAsBC,EAAAA,EAAAA,UAAS,iBAC/BP,KAAM,CACsE,IAAzE3F,EAAMmG,QAAOzC,GAAiD,IAAzC,IAAI0C,KAAK1C,EAAK2C,YAAYC,aAAmBpE,OAAWlC,EAAMkC,OAAO,EACjB,IAAzElC,EAAMmG,QAAOzC,GAAiD,IAAzC,IAAI0C,KAAK1C,EAAK2C,YAAYC,aAAmBpE,OAAWlC,EAAMkC,OAAO,EACjB,IAAzElC,EAAMmG,QAAOzC,GAAiD,IAAzC,IAAI0C,KAAK1C,EAAK2C,YAAYC,aAAmBpE,OAAWlC,EAAMkC,OAAO,EACjB,IAAzElC,EAAMmG,QAAOzC,GAAiD,IAAzC,IAAI0C,KAAK1C,EAAK2C,YAAYC,aAAmBpE,OAAWlC,EAAMkC,OAAO,EAC5F,EAAG,EAAG,MAKbqE,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACTK,YAAY,GAEdC,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDC,KAAM,EACNC,IAAK,GACLT,SAAS,EACTI,KAAM,CACJJ,SAAS,GAEXM,MAAO,CACLN,SAAS,KAIfU,SAAU,CACRC,KAAM,CACJC,YAAa,EACbC,QAAS,IAEXC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAQ3BpG,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACO,GAAI,EAAGhB,GAAI,EAAEL,UACjBC,EAAAA,EAAAA,KAAC8D,EAAAA,GAAa,CACZhE,UAAU,OACVU,MAAM,OACN4C,OACEpD,EAAAA,EAAAA,KAAAS,EAAAA,SAAA,CAAAV,SACG4D,EAAShD,SAMdoD,MAAO,iCACPC,OAAQ,GACRC,OACEjE,EAAAA,EAAAA,KAACkE,EAAAA,GAAU,CACTpE,UAAU,YACV8B,MAAO,CAAEuC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,cACjBC,YAAa,wBACbC,sBAAsBC,EAAAA,EAAAA,UAAS,cAC/BP,KAAM,CACyE,IAA5ET,EAASiB,QAAOzC,GAAiD,IAAzC,IAAI0C,KAAK1C,EAAK2C,YAAYC,aAAmBpE,OAAWgD,EAAShD,OAAO,EACpB,IAA5EgD,EAASiB,QAAOzC,GAAiD,IAAzC,IAAI0C,KAAK1C,EAAK2C,YAAYC,aAAmBpE,OAAWgD,EAAShD,OAAO,EACpB,IAA5EgD,EAASiB,QAAOzC,GAAiD,IAAzC,IAAI0C,KAAK1C,EAAK2C,YAAYC,aAAmBpE,OAAWgD,EAAShD,OAAO,EACpB,IAA5EgD,EAASiB,QAAOzC,GAAiD,IAAzC,IAAI0C,KAAK1C,EAAK2C,YAAYC,aAAmBpE,OAAWgD,EAAShD,OAAO,EACjG,EAAG,EAAG,MAKdqE,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACTK,YAAY,GAEdC,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDC,KAAM,EACNC,IAAK,GACLT,SAAS,EACTI,KAAM,CACJJ,SAAS,GAEXM,MAAO,CACLN,SAAS,KAIfU,SAAU,CACRC,KAAM,CACJC,YAAa,GAEfE,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAQ3BpG,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACO,GAAI,EAAGhB,GAAI,EAAEL,UACjBC,EAAAA,EAAAA,KAAC8D,EAAAA,GAAa,CACZhE,UAAU,OACVU,MAAM,UACN4C,OACEvD,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAV,SAAA,CACG6D,EAAYjD,OAAO,OAMxBoD,MAAO,mDACPC,OAAQ,GACRC,OACEjE,EAAAA,EAAAA,KAACkE,EAAAA,GAAU,CACTpE,UAAU,OACV8B,MAAO,CAAEuC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,4BAC/DC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,uBACjBC,YAAa,wBACbL,KAAM,CAACR,EAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GACnCyC,MAAM,KAIZrB,QAAS,CACPC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDH,SAAS,GAEXO,EAAG,CACDP,SAAS,IAGbU,SAAU,CACRC,KAAM,CACJC,YAAa,EACbC,QAAS,IAEXC,MAAO,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,YAQ3BpG,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACO,GAAI,EAAGhB,GAAI,EAAEL,UACjBC,EAAAA,EAAAA,KAAC8D,EAAAA,GAAa,CACZhE,UAAU,OACVU,MAAM,SACN4C,OACEpD,EAAAA,EAAAA,KAAAS,EAAAA,SAAA,CAAAV,SACG8D,EAASlD,SAGdoD,MAAO,yDACPC,OAAQ,GACRC,OACEjE,EAAAA,EAAAA,KAACsG,EAAAA,GAAS,CACRxG,UAAU,YACV8B,MAAO,CAAEuC,OAAQ,QACjBC,KAAM,CACJC,OAAQ,CACN,uCACA,6CACA,2BACA,uCACA,qBACA,2BACA,2BACA,uCACA,mDACA,6CACA,uCACA,8CAEFC,SAAU,CACR,CACEC,MAAO,qEACPC,gBAAiB,uBACjBC,YAAa,wBACbL,KAAM,CAACP,EAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/C0C,cAAe,MAIrBvB,QAAS,CACPI,qBAAqB,EACrBH,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbE,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJJ,SAAS,EACTqB,WAAW,GAEbf,MAAO,CACLN,SAAS,IAGbO,EAAG,CACDH,KAAM,CACJJ,SAAS,EACTK,YAAY,EACZgB,WAAW,GAEbf,MAAO,CACLN,SAAS,cASpB,C","sources":["pages/Workhub.js","views/widgets/WidgetsDropdown2.js"],"sourcesContent":["import React, { Suspense, useState, useEffect } from 'react'\nimport { CContainer, CSpinner } from '@coreui/react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport {\n  CAvatar,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilPeople,\n} from '@coreui/icons'\n\nimport avatar2 from 'src/assets/images/avatars/blank-avatar.png'\n\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\nimport { getAllMessages } from './../http/chatAPI.js'\n\nimport WidgetsDropdown from '../views/widgets/WidgetsDropdown2'\n\nconst Workhub = () => {\n\n  const { users: clients } = useUsersContext();\n  const { managers: zakazchiki } = useUsersContext();\n  const { projects: projs } = useUsersContext();\n  const { companys: comps } = useUsersContext();\n\n  const [contacts, setContacts]= useState([]);\n  const [projects, setProjects]= useState([]);\n  const [newClients, setNewClients]= useState([]);\n  const [oldClients, setOldClients]= useState([]);\n  const [loading, setLoading]= useState(true);\n\n  const chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID\n  const host = process.env.REACT_APP_API_URL\n  \n\n  //get Contacts\n  useEffect(() => {\n    const arrClients = []\n    \n  }, []);\n  \n//---------------------------------------------------------------------------------------------\n//get Projects\n  useEffect(() => {\n    const arrProjects = []  \n    \n  },[])\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n\n                <>\n                <WidgetsDropdown users={clients.length-1} projects={projects.length} companys={comps.length} />\n\n                <CRow>\n                  <CCol xs>\n                    <CCard className=\"mb-4\">\n                      <CCardHeader>Пользователи бота ({clients.length - 1})</CCardHeader>\n                      <CCardBody>\n                        <CRow>\n                          <CCol xs={12} md={6} xl={6}>\n                            <CRow>\n                              <CCol sm={6}>\n                                <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                                  <div className=\"text-medium-emphasis small\">Новые клиенты</div>\n                                  <div className=\"fs-5 fw-semibold\">{newClients.length}</div>\n                                </div>\n                              </CCol>\n                              <CCol sm={6}>\n                                <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                                  <div className=\"text-medium-emphasis small\">Постоянные клиенты</div>\n                                  <div className=\"fs-5 fw-semibold\">{oldClients.length-1}</div>\n                                </div>\n                              </CCol>\n                            </CRow>\n                          </CCol>\n\n                          <CCol xs={12} md={6} xl={6}>\n                            <CRow>\n                              <CCol sm={6}>\n                                <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                                  <div className=\"text-medium-emphasis small\">Просмотры</div>\n                                  <div className=\"fs-5 fw-semibold\">-</div>\n                                </div>\n                              </CCol>\n                              <CCol sm={6}>\n                                <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                                  <div className=\"text-medium-emphasis small\">Другое</div>\n                                  <div className=\"fs-5 fw-semibold\">-</div>\n                                </div>\n                              </CCol>\n                            </CRow>\n\n                            <div className=\"mb-5\"></div>\n\n                          </CCol>\n                        </CRow>\n\n                      {loading ? \n                                  \n                        <CSpinner/> :\n\n                        <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                          <CTableHead className='table-dark'>\n                            <CTableRow>\n                              <CTableHeaderCell style={{width: '30px'}}>№</CTableHeaderCell>\n                              <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>\n                                <CIcon icon={cilPeople} />\n                              </CTableHeaderCell>\n                              <CTableHeaderCell style={{width: '160px'}}>Пользователь</CTableHeaderCell>                             \n                              <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Организация</CTableHeaderCell>\n                              <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Телефон</CTableHeaderCell>\n                              <CTableHeaderCell className=\"text-center\" style={{width: '80px'}}>Город</CTableHeaderCell>\n                              <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>TG ID</CTableHeaderCell>\n                              <CTableHeaderCell style={{width: '100px'}}>Использование</CTableHeaderCell>\n                              <CTableHeaderCell style={{width: '100px'}}>Активность</CTableHeaderCell>\n                              {/* <CTableHeaderCell>Управление</CTableHeaderCell> */}\n                            </CTableRow>\n                          </CTableHead>\n                          <CTableBody>\n                            {contacts.map((item, index) => (\n                              <CTableRow v-for=\"item in tableItems\" key={index}>\n                                <CTableDataCell className=\"text-center\">\n                                  {index+1}\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\">\n                                    <CAvatar size=\"md\" src={item.avatar ? host + item.avatar : avatar2} alt='' />\n                                </CTableDataCell>\n                                <CTableDataCell>\n                                  <div>{item.user.name}</div>\n                                  <div className=\"small text-medium-emphasis\">\n                                    {/* <span>{item.user.new ? 'Новый' : 'Recurring'}</span> | Регистрация:{' '}\n                                    {item.user.registered} */}\n                                  </div>\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\">\n                                  {item.company ? <div>{item.company}</div> : ''}\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\">\n                                  <div>{item.phone}</div>\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\">\n                                  <div>{item.city}</div>\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\">\n                                  <div>{item.TG_ID}</div>\n                                </CTableDataCell>\n                                <CTableDataCell>\n                                  <div className=\"clearfix\">\n                                    <div className=\"float-start\">\n                                      <strong>{item.usage.value}%</strong>\n                                    </div>\n                                    <div className=\"float-end\">\n                                      <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                                    </div>\n                                  </div>\n                                  <CProgress thin color={item.usage.color} value={item.usage.value} />\n                                </CTableDataCell>\n                                <CTableDataCell>\n                                  <div className=\"small text-medium-emphasis\">Последний вход</div>\n                                  <strong>{item.activity}</strong>\n                                </CTableDataCell>\n                                {/* <CTableDataCell>\n                                  <CButton color=\"light\">\n                                    <img src={pencilIcon} alt='' width='15px'/>\n                                  </CButton>\n                                  &nbsp;\n                                  <CButton color=\"light\">\n                                    <img src={deleteIcon} alt='' width='10px' />\n                                  </CButton>\n                                </CTableDataCell> */}\n                              </CTableRow>\n                            ))}\n                          </CTableBody>\n                        </CTable>\n                      }\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                </CRow>\n              </>\n\n                </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Workhub\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nconst WidgetsDropdown2 = ({\n  users, \n  newUsers, \n  activeUsers, \n  delUsers, \n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              {users.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Всего\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      (users.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/users.length-5, \n                     0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {newUsers.length} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Новые\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/newUsers.length-5, \n                      0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {activeUsers.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Активные\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [activeUsers, 0, 0, 0, 0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              {delUsers.length}\n            </>\n          }\n          title={\"Удаленные\"}\n          action={\"\"}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', \n                  'Февраль', \n                  'Март', \n                  'Апрель', \n                  'Май', \n                  'Июнь', \n                  'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [delUsers, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown2\n"],"names":["Workhub","users","clients","useUsersContext","managers","zakazchiki","projects","projs","companys","comps","contacts","setContacts","useState","setProjects","newClients","setNewClients","oldClients","setOldClients","loading","setLoading","useEffect","_jsxs","className","children","_jsx","AppSidebar","AppHeader","CContainer","lg","Suspense","fallback","CSpinner","color","_Fragment","WidgetsDropdown","length","CRow","CCol","xs","CCard","CCardHeader","CCardBody","md","xl","sm","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","style","width","CIcon","icon","cilPeople","CTableBody","map","item","index","CTableDataCell","CAvatar","size","src","avatar","process","avatar2","alt","user","name","company","phone","city","TG_ID","usage","value","period","CProgress","thin","activity","AppFooter","_ref","newUsers","activeUsers","delUsers","CWidgetStatsA","title","action","chart","CChartLine","height","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","filter","Date","createDate","getMonth","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","fill","CChartBar","barPercentage","drawTicks"],"sourceRoot":""}