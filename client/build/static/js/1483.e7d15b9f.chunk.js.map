{"version":3,"file":"static/js/1483.e7d15b9f.chunk.js","mappings":"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","sources":["assets/images/arrowDown.svg","http/projectAPI.js","pages/Workers.js","../node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js","../node_modules/@emotion/memoize/dist/emotion-memoize.esm.js"],"sourcesContent":["var _metadata, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowDown(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 256 256\",\n    enableBackground: \"new 0 0 256 256\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _metadata || (_metadata = /*#__PURE__*/React.createElement(\"metadata\", null, \" Svg Vector Icons : http://www.onlinewebfonts.com/icon \")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"M128,10C62.9,10,10,62.9,10,128c0,65.1,52.9,118,118,118c65.1,0,118-52.9,118-118C246,62.9,193.1,10,128,10z M173.8,148.4l-37,31.4c-2.5,2.1-5.6,3.2-8.7,3.2s-6.2-1.1-8.7-3.2l-37-31.4c-5.7-4.8-6.4-13.3-1.5-19c4.8-5.7,13.3-6.4,19-1.5l14.9,12.6V86.4c0-7.4,6-13.5,13.5-13.5s13.5,6,13.5,13.5v54.2l14.9-12.6c5.7-4.8,14.2-4.1,19,1.5C180.1,135.1,179.4,143.6,173.8,148.4z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowDown);\nexport default __webpack_public_path__ + \"static/media/arrowDown.4f7021c2d42a26d0369da8983c53315a.svg\";\nexport { ForwardRef as ReactComponent };","import {$authHost, $host} from \"./index\";\n\nexport const getProjects = async () =>{\n    try {\n       let response = await $host.get('api/projectnew/get');\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getSpecialist api\", error.message);\n    }\n}\n\nexport const getProjectsDel = async () =>{\n    try {\n       let response = await $host.get('api/projectnew/delete/get');\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getProjectsDel api\", error.message);\n    }\n}\n\nexport const getProjectCount = async (count, prev) =>{\n    try {\n       let response = await $host.get(`api/projectnew/count/get/${count}/${prev}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getProjectCount api\", error.message);\n    }\n}\n\nexport const editProject = async (data, id) =>{\n    try {\n        await $host.patch(`api/projectnew/update/${id}`, data); \n    } catch (error) {\n        console.log(\"error while calling editProject api\",error.message);\n    }\n}\n\nexport const addProject = async (data) =>{\n    try {\n        let response = await $host.post(`api/projectnew/add`, data); \n        return response.data;\n    } catch (error) {\n        console.log(\"error while calling addProject api\",error.message);\n    }\n}\n\nexport const deleteProject = async (id) =>{\n    try {\n        await $host.get(`api/projectnew/delete/${id}`); \n    } catch (error) {\n        console.log(\"error while calling deleteProject api\",error.message);\n    }\n}\n\nexport const getProjectId = async (id) =>{\n    try {\n       let response = await $host.get(`api/projectnew/get/${id}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getProjectId api\", error.message);\n    }\n}\n","import React, { Suspense, useEffect, useState } from 'react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport { \n  CContainer, \n  CSpinner, \n  CCol,\n  CRow,\n  CFormInput,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CCard,\n  CCardBody,\n  CCollapse,\n  CButton, \n  CTooltip,\n} from '@coreui/react'\nimport { useUsersContext } from \"../chat-app-new/context/usersContext\";\n\nimport arrowDown from '../assets/images/arrowDown.svg'\n\nimport { getAllPretendent, getAllPretendentCount, getWorkersNotion100, getWorkersNotion, getWorkerNotionId} from './../http/workerAPI'\nimport { getSpecialist } from './../http/specAPI'\n//import { getProjectsApi } from './../http/adminAPI'\n\nimport { getProjects } from './../http/projectAPI'\n\n\n//Workers.js\nconst Workers = () => {\n\n  const { setCountPretendent, pretendents, setPretendents } = useUsersContext();\n\n  const [projects, setProjects] = useState([]); \n  const [spec, setSpec] = useState([]); \n\n  const [pending, setPending] = useState(true);  \n\n  const [loading, setLoading]= useState(true);\n\n  const [showTable, setShowTable] = useState([])\n  const [showComment, setShowComment] = useState([])\n\n  const [text, setText]= useState(\"\");\n\n  const [countWorker, setCountWorker] = useState(0);  \n  const [countWorkerNew, setCountWorkerNew] = useState(0); \n\n  const [loadingCount, setLoadingCount] = useState(false); \n\n  //поиск\n  // useEffect(() => {\n\t// \tconst filteredData = pretendents.filter(user=> (user.project + user.workerFamily + user.workerName)?.replace(/[её]/g, '(е|ё)').toLowerCase().includes(text.replace(/[её]/g, '(е|ё)').toLowerCase()));\n  //   setSpec(text === '' ? pretendents : filteredData) \n  // }, [text]);\n\n\n\n  //-----------------------------------------------------------------------------------------\n  //\t\t\tget pretendents\n  //-----------------------------------------------------------------------------------------\n  useEffect(() => {\n    const arrWorkers = []\n\n    setCountPretendent(0)\n    //await newCountMessagePretendent(0)\n\n    const fetchData = async () => {\n\n      let pretendents = await getAllPretendentCount(20, countWorker) //getAllPretendent();\n      console.log(\"pretendents workers: \", pretendents)\n\n      setCountWorker(countWorker+20)\n\n      let workers = await getSpecialist()\n      //console.log(\"workers context: \", workers)\n\n      let projects = await getProjects()\n      //console.log(\"projects workers: \", projects)\n\n      pretendents.map(async (worker, i) => {\n\n        let userObject = projects.find((proj) => proj.id === parseInt(worker.projectId));  \n        //console.log(\"userObject: \", userObject)\n        const projectName = userObject?.name\n\n        let workerObject = workers.find((item) => item.chatId === worker.receiverId); \n        //console.log(\"workerObject: \", workerObject) \n        const workerName = workerObject?.fio\n\n        const worklist = workerObject?.worklist ? JSON.parse(workerObject?.worklist) : ''\n        const rang = workerObject?.rank ? workerObject?.rank : ''\n        const comment = workerObject?.comment ? workerObject?.comment : ''\n        const phone = workerObject?.phone\n\n        const d = new Date(worker.createdAt).getTime() //+ 10800000 //Текущая дата:  + 3 часа)\n        const d2 = new Date(d)\n\n        const month = String(d2.getMonth()+1).padStart(2, \"0\");\n        const day = String(d2.getDate()).padStart(2, \"0\");\n        const chas = d2.getHours();\n        const min = String(d2.getMinutes()).padStart(2, \"0\");\n        \n        const newDate = `${day}.${month} ${chas}:${min}`;\n\n      \n        //worklist\n        const newWorker = {\n          workerId: worker.workerId,\n          date: newDate, \n          projectId: worker.projectId,\n          project: projectName,\n          workerFamily: workerName,\n          //workerName: workerObject?.username,\n          worklist: worklist, \n          rang: rang, \n          comment: comment ? JSON.parse(comment)[0].content : '', \n          phone: phone, \n          accept: worker.accept,\n        }\n        arrWorkers.push(newWorker)\n\n        setSpec(arrWorkers) \n        setPretendents(arrWorkers)\n      })  \n      setLoading(false)\n      setLoadingCount(false)\n    }\n\n    fetchData();\n    \n  },[countWorkerNew])\n\n  //Посмотреть\n  const handleClick = (ind) => {\n    console.log(ind, showTable[ind])\n\n    setShowTable(prevShownTable => ({\n        ...prevShownTable,\n        [ind]: !prevShownTable[ind]\n      }));\n  }\n\n  const handleClickCom = (ind) => {\n\n    setShowComment(prevShownComment => ({\n        ...prevShownComment,\n        [ind]: !prevShownComment[ind]\n      }));\n  }\n\n  const clickNext = async() => {\n    setLoadingCount(true)\n    //1 все рассылки\n\t\tlet response = await getAllPretendentCount(20, countWorker) //getAllPretendent();\n    console.log(\"pretendent size: \", response.length)   \n\n    setCountWorkerNew(countWorker+20)\n\n    console.log(\"Всего сейчас: \", response.length)\n\t\t\t\n    // setPretendents(response)\t\n    // console.log(\"Ещё: \", response.length)\n  }\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n                    {/* <h2>Претенденты</h2> */}\n                    \n                    <CRow className=\"mb-3\">\n                      <CCol sm={3} >\n                        <CFormInput placeholder=\"Поиск...\" onChange={(e)=>setText(e.target.value)} aria-label=\"spec\"/>\n                      </CCol>\n                    </CRow>\n\n                    <CRow>\n                      <CCol style={{textAlign: 'center'}}>\n                        <CCard className=\"mb-4\"> \n                            <CCardBody>\n                              {loading ? \n                                      \n                                <CSpinner/> :\n\n                                <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                                  <CTableHead className='table-light'>\n                                    <CTableRow>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '200px'}}>Дата</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '320px'}}>Проект</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '370px'}}>ФИО</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Специальность</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>U.L.E.Y</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" >Комментарий</CTableHeaderCell>                         \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '250px'}}>Телефон</CTableHeaderCell>\n                                    </CTableRow>\n                                  </CTableHead>\n                                  <CTableBody>                                  \n                                    {spec.map((item, index) => (\n                                      <CTableRow v-for=\"item in tableItems\" key={index}>\n                                        <CTableDataCell className=\"text-center\" style={{color: !item.accept && \"red\"}}>\n                                          {item.date}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: !item.accept && \"red\"}}>\n                                          <CTooltip\n                                              content={item.projectId}\n                                              placement=\"top\"\n                                            >\n                                              <div>{item.project}</div>\n                                          </CTooltip>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 || !item.accept ? 'red' : ''}}>\n                                          <CTooltip\n                                            content={item.workerId}\n                                            placement=\"top\"\n                                          > \n                                            <div>{item.workerFamily}</div>\n                                          </CTooltip>\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{fontSize: '13px', textAlign: 'left'}}>\n                                          <div onClick={()=>handleClick(index)} style={{cursor: 'pointer'}}>{!showTable[index] ? 'Посмотреть' : <br/>}</div>\n                                          <CCollapse visible={showTable[index]}>\n                                            <table>\n                                              {item.worklist ? \n                                              (item.worklist).map((spec, index)=>( \n                                                  <tr key={index}>\n                                                    <td>- {spec.spec}</td>\n                                                  </tr>          \n                                              ))\n                                              :\"\"\n                                              }\n                                            </table>\n                                          </CCollapse>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: !item.accept && 'red'}}>\n                                          {item.rang}\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{fontSize: '13px', textAlign: 'left'}}>\n                                          <div onClick={()=>handleClickCom(index)} style={{cursor: 'pointer'}}>{!showComment[index] ? (item.comment ? 'Посмотреть' : '') : <br/>}</div>\n                                          <CCollapse visible={showComment[index]}>\n                                            {item.comment ? item.comment : <></>}\n                                          </CCollapse>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: !item.accept && \"red\"}}>\n                                          <div>{item.phone}</div>\n                                        </CTableDataCell>\n                                      </CTableRow>\n                                      ))\n                                    }\n                                </CTableBody>                   \n                                </CTable>\n                              }\n                              {loadingCount ? <CSpinner/> : \"\" }\n                              <div style={{display: 'flex', justifyContent: 'center' }}>\n                                <img src={arrowDown} alt='' onClick={()=>clickNext()} style={{width: '50px', marginTop: '15px', cursor: 'pointer'}}></img>\n                              </div> \n                            </CCardBody>\n                          </CCard>\n                        </CCol>\n                    </CRow>\n                  </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Workers\n","import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default isPropValid;\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n"],"names":["getProjects","$host","response","data","console","log","message","getProjectsDel","editProject","id","addProject","getProjectId","useUsersContext","setCountPretendent","setPretendents","pretendents","useState","spec","setSpec","loading","setLoading","showTable","setShowTable","showComment","setShowComment","setText","countWorker","setCountWorker","countWorkerNew","setCountWorkerNew","loadingCount","setLoadingCount","useEffect","arrWorkers","fetchData","getAllPretendentCount","getSpecialist","workers","projects","map","worker","i","userObject","find","proj","parseInt","projectId","projectName","name","workerObject","item","chatId","receiverId","workerName","fio","worklist","JSON","parse","rang","rank","comment","phone","d","Date","createdAt","getTime","d2","month","String","getMonth","padStart","day","getDate","chas","getHours","min","getMinutes","newDate","newWorker","workerId","date","project","workerFamily","content","accept","push","clickNext","length","className","lg","Suspense","fallback","color","sm","placeholder","onChange","e","target","value","style","textAlign","align","hover","responsive","width","index","placement","dateborn","fontSize","onClick","ind","prevShownTable","cursor","visible","prevShownComment","display","justifyContent","src","arrowDown","alt","marginTop","reactPropsRegex","isPropValid","memoize","prop","test","charCodeAt","fn","cache","Object","create","arg","undefined"],"sourceRoot":""}