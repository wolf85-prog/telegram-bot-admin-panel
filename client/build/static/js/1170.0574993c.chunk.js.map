{"version":3,"file":"static/js/1170.0574993c.chunk.js","mappings":"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","sources":["pages/Workers.js"],"sourcesContent":["import React, { Suspense, useEffect, useState } from 'react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport { \n  CContainer, \n  CSpinner, \n  CCol,\n  CRow,\n  CFormInput,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CCard,\n  CCardBody,\n  CCollapse,\n  CButton, \n} from '@coreui/react'\nimport { useUsersContext } from \"../chat-app-new/context/usersContext\";\n\nimport { getAllPretendent, getWorkers, getWorkersNotion100, getWorkersNotion, getWorkerNotionId } from './../http/workerAPI'\n\n\n//Workers.js\nconst Workers = () => {\n\n  //const { pretendents } = useUsersContext();\n  //const { projects } = useUsersContext();\n  const { setCountPretendent, pretendents } = useUsersContext();\n\n  const [projects, setProjects] = useState([]); \n  const [spec, setSpec] = useState([]); \n\n  const [pending, setPending] = useState(true);  \n\n  const [loading, setLoading]= useState(true);\n\n  const [visibleA, setVisibleA] = useState(false)\n\n  const [showTable, setShowTable] = useState([])\n  const [showComment, setShowComment] = useState([])\n\n  const [text, setText]= useState(\"\");\n\n  \n\n  //поиск\n  // useEffect(() => {\n\t// \tconst filteredData = pretendents.filter(user=> (user.workerFamily+user.workerName)?.toLowerCase().includes(text.toLowerCase()));\n  //   setSpec(filteredData);      \n  // }, [text]);\n\n  //\n  const handleClick = (ind) => {\n    console.log(ind, showTable[ind])\n\n    setShowTable(prevShownTable => ({\n        ...prevShownTable,\n        [ind]: !prevShownTable[ind]\n      }));\n  }\n\n  const handleClickCom = (ind) => {\n    console.log(ind, showComment[ind])\n\n    setShowComment(prevShownComment => ({\n        ...prevShownComment,\n        [ind]: !prevShownComment[ind]\n      }));\n  }\n\n  //get Contacts\n  useEffect(() => {\n\n    const fetchData = async() => {\n      console.log(\"workers-pretendent: \", pretendents)\n      setSpec(pretendents); \n      setLoading(false)\n    }\n\n    fetchData()\n  }, [pretendents])\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n                    <h2>Претенденты</h2>\n                    \n                    <CRow className=\"mb-3\">\n                      <CCol sm={3} >\n                        <CFormInput placeholder=\"Поиск...\" onChange={(e)=>setText(e.target.value)} aria-label=\"spec\"/>\n                      </CCol>\n                    </CRow>\n\n                    <CRow>\n                      <CCol style={{textAlign: 'center'}}>\n                        <CCard className=\"mb-4\"> \n                            <CCardBody>\n                              {loading ? \n                                      \n                                <CSpinner/> :\n\n                                <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                                  <CTableHead className='table-light'>\n                                    <CTableRow>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '200px'}}>Дата</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '320px'}}>Проект</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '370px'}}>ФИО</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Специальность</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>U.L.E.Y</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" >Комментарий</CTableHeaderCell>                         \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '250px'}}>Телефон</CTableHeaderCell>\n                                    </CTableRow>\n                                  </CTableHead>\n                                  <CTableBody>                                  \n                                    {spec.map((item, index) => (\n                                      <CTableRow v-for=\"item in tableItems\" key={index}>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.accept && \"red\"}}>\n                                          {item.date}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.accept && \"red\"}}>\n                                          {item.project}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 || item.accept ? 'red' : ''}}>\n                                            {item.workerFamily + \" \" + item.workerName}\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{fontSize: '13px', textAlign: 'left'}}>\n                                          <div onClick={()=>handleClick(index)} style={{cursor: 'pointer'}}>{!showTable[index] ? 'Посмотреть' : <br/>}</div>\n                                          <CCollapse visible={showTable[index]}>\n                                            <table>\n                                              {item.worklist ? \n                                              (item.worklist).map((spec, index)=>( \n                                                  <tr key={index}>\n                                                    <td>- {spec.spec}</td>\n                                                  </tr>          \n                                              ))\n                                              :\"\"\n                                              }\n                                            </table>\n                                          </CCollapse>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.accept && 'red'}}>\n                                          {item.rang}\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{fontSize: '13px', textAlign: 'left'}}>\n                                          <div onClick={()=>handleClickCom(index)} style={{cursor: 'pointer'}}>{!showComment[index] ? (item.comment ? 'Посмотреть' : '') : <br/>}</div>\n                                          <CCollapse visible={showComment[index]}>\n                                            {item.comment ? item.comment : <></>}\n                                          </CCollapse>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.accept && \"red\"}}>\n                                          <div>{item.phone}</div>\n                                        </CTableDataCell>\n                                      </CTableRow>\n                                      ))\n                                    }\n                                </CTableBody>                   \n                              </CTable>\n                            }\n                            </CCardBody>\n                          </CCard>\n                        </CCol>\n                    </CRow>\n                  </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Workers\n"],"names":["_useUsersContext","useUsersContext","pretendents","setCountPretendent","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","spec","setSpec","_useState5","_useState6","_useState7","_useState8","loading","setLoading","_useState9","_useState10","_useState11","_useState12","showTable","setShowTable","_useState13","_useState14","showComment","setShowComment","_useState15","_useState16","setText","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","stop","apply","arguments","_jsxs","className","children","_jsx","AppSidebar","AppHeader","CContainer","lg","Suspense","fallback","CSpinner","color","CRow","CCol","sm","CFormInput","placeholder","onChange","e","target","value","style","textAlign","CCard","CCardBody","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","width","CTableBody","map","item","index","CTableDataCell","accept","date","project","dateborn","workerFamily","workerName","fontSize","onClick","ind","prevShownTable","_objectSpread","_defineProperty","cursor","CCollapse","visible","worklist","rang","prevShownComment","comment","_Fragment","phone","AppFooter"],"sourceRoot":""}