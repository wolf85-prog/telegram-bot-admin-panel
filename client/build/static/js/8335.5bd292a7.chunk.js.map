{"version":3,"file":"static/js/8335.5bd292a7.chunk.js","mappings":"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","sources":["assets/images/arrowDown.svg","pages/Workers2.js","../node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js","../node_modules/@emotion/memoize/dist/emotion-memoize.esm.js"],"sourcesContent":["var _metadata, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowDown(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 256 256\",\n    enableBackground: \"new 0 0 256 256\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _metadata || (_metadata = /*#__PURE__*/React.createElement(\"metadata\", null, \" Svg Vector Icons : http://www.onlinewebfonts.com/icon \")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"M128,10C62.9,10,10,62.9,10,128c0,65.1,52.9,118,118,118c65.1,0,118-52.9,118-118C246,62.9,193.1,10,128,10z M173.8,148.4l-37,31.4c-2.5,2.1-5.6,3.2-8.7,3.2s-6.2-1.1-8.7-3.2l-37-31.4c-5.7-4.8-6.4-13.3-1.5-19c4.8-5.7,13.3-6.4,19-1.5l14.9,12.6V86.4c0-7.4,6-13.5,13.5-13.5s13.5,6,13.5,13.5v54.2l14.9-12.6c5.7-4.8,14.2-4.1,19,1.5C180.1,135.1,179.4,143.6,173.8,148.4z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowDown);\nexport default __webpack_public_path__ + \"static/media/arrowDown.4f7021c2d42a26d0369da8983c53315a.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Suspense, useEffect, useState } from 'react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport { \n  CContainer, \n  CSpinner, \n  CCol,\n  CRow,\n  CFormInput,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CCard,\n  CCardBody,\n  CCollapse,\n  CButton, \n  CTooltip,\n} from '@coreui/react'\nimport { useUsersContext } from \"../chat-app-new/context/usersContext\";\n\nimport arrowDown from '../assets/images/arrowDown.svg'\n\nimport { getAllPretendent, getAllPretendentCount, getWorkers, getWorkersNotion100, getWorkersNotion, getWorkerNotionId, getCanceled} from '../http/workerAPI'\n\nimport {getProjects, newCountMessagePretendent} from '../http/adminAPI'\n\n\n//Workers.js\nconst Workers = () => {\n\n  const { setCountPretendent, pretendents, setPretendents } = useUsersContext();\n\n  const [projects, setProjects] = useState([]); \n  const [spec, setSpec] = useState([]); \n\n  const [pending, setPending] = useState(true);  \n\n  const [loading, setLoading]= useState(true);\n\n  const [showTable, setShowTable] = useState([])\n  const [showComment, setShowComment] = useState([])\n\n  const [text, setText]= useState(\"\");\n\n  const [countWorker, setCountWorker] = useState(0);  \n  const [countWorkerNew, setCountWorkerNew] = useState(0); \n\n  const [loadingCount, setLoadingCount] = useState(false); \n\n    //поиск\n  useEffect(() => {\n    //let cancels = getCanceled();\n\t\tconst filteredData = spec.filter(user=> (user.tgId + user.crmId)?.replace(/[её]/g, '(е|ё)').toLowerCase().includes(text.replace(/[её]/g, '(е|ё)').toLowerCase()));\n    setSpec(text === '' ? spec : filteredData) \n  }, [text]);\n\n\n  //-----------------------------------------------------------------------------------------\n  //\t\t\tget pretendents\n  //-----------------------------------------------------------------------------------------\n  useEffect(() => {\n    const arrWorkers = []\n\n    setCountPretendent(0)\n    //await newCountMessagePretendent(0)\n\n    const fetchData = async () => {\n\n      let workers = await getWorkers()\n      //console.log(\"workers context: \", workers)\n\n      let projects = await getProjects();\n      //console.log(\"projects: \", projects)\n\n      let cancels = await getCanceled();\n      //console.log(\"cancels: \", cancels)\n\n      cancels.map(async (worker, i) => {\n        console.log(worker)\n        let userObject = projects.find((proj) => proj.id === worker.projectId);  \n        const projectName = userObject?.title\n        const crmId = userObject?.crmID\n\n        let workerObject = workers.find((item) => item.chatId === worker.receiverId);  \n        const workerName = workerObject?.userfamily + \" \"+ workerObject?.username\n\n        const status = worker.cancel\n\n        const d = new Date(worker.createdAt).getTime() //+ 10800000 //Текущая дата:  + 3 часа)\n        const d2 = new Date(d)\n\n        const month = String(d2.getMonth()+1).padStart(2, \"0\");\n        const day = String(d2.getDate()).padStart(2, \"0\");\n        const chas = d2.getHours();\n        const min = String(d2.getMinutes()).padStart(2, \"0\");\n        \n        const newDate = `${day}.${month} ${chas}:${min}`;\n\n\n\n        const d3 = new Date(worker.updatedAt).getTime() //+ 10800000 //Текущая дата:  + 3 часа)\n        const d4 = new Date(d3)\n\n        const month2 = String(d4.getMonth()+1).padStart(2, \"0\");\n        const day2 = String(d4.getDate()).padStart(2, \"0\");\n        const chas2 = d4.getHours();\n        const min2 = String(d4.getMinutes()).padStart(2, \"0\");\n        const updateDate = `${day2}.${month2} ${chas2}:${min2}`;\n\n        let startDate = ''\n        if (worker.datestart) {\n          const d5 = new Date(worker.datestart).getTime() //+ 10800000 //Текущая дата:  + 3 часа)\n          const d6 = new Date(d5)\n\n          const month3 = String(d6.getMonth()+1).padStart(2, \"0\");\n          const day3 = String(d6.getDate()).padStart(2, \"0\");\n          const chas3 = d6.getHours();\n          const min3 = String(d6.getMinutes()).padStart(2, \"0\");\n          startDate = `${day3}.${month3} ${chas3}:${min3}`;\n        }\n\n        let endDate = ''\n        if (worker.dateend) {\n          const d7 = new Date(worker.dateend).getTime() //+ 10800000 //Текущая дата:  + 3 часа)\n          const d8 = new Date(d7)\n\n          const month4 = String(d8.getMonth()+1).padStart(2, \"0\");\n          const day4 = String(d8.getDate()).padStart(2, \"0\");\n          const chas4 = d8.getHours();\n          const min4 = String(d8.getMinutes()).padStart(2, \"0\");\n          endDate = `${day4}.${month4} ${chas4}:${min4}`;\n        }\n        \n\n      \n        //worklist\n        const newWorker = {\n          id: worker.id,\n          workerId: worker.workerId,\n          date: newDate, \n          projectId: worker.projectId,\n          project: projectName,\n          crmId: crmId,\n          workerFamily: workerObject?.userfamily,\n          workerName: workerObject?.username,\n          tgId: worker.receiverId, \n          status: status,  \n          accept: worker.accept,\n          updatedAt: updateDate,\n          datestart: startDate,\n          dateend: endDate,\n        }\n        arrWorkers.push(newWorker)\n\n        setSpec(arrWorkers) \n\n      })  \n      setLoading(false)\n      //setLoadingCount(false)\n    }\n\n    fetchData();\n    \n  },[])\n\n\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n                    {/* <h2>Претенденты</h2> */}\n                    \n                    <CRow className=\"mb-3\">\n                      <CCol sm={3} >\n                        <CFormInput placeholder=\"Поиск...\" onChange={(e)=>setText(e.target.value)} aria-label=\"spec\"/>\n                      </CCol>\n                    </CRow>\n\n                    <CRow>\n                      <CCol style={{textAlign: 'center'}}>\n                        <CCard className=\"mb-4\"> \n                            <CCardBody>\n                              {loading ? \n                                      \n                                <CSpinner/> :\n\n                                <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                                  <CTableHead className='table-light'>\n                                    <CTableRow>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>№</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '200px'}}>Дата</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '320px'}}>Проект</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '320px'}}>CRM ID</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '370px'}}>ФИО</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>TelegramId</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>Статус</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>Обновлено</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>Start</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>End</CTableHeaderCell>\n                                    </CTableRow>\n                                  </CTableHead>\n                                  <CTableBody>                                  \n                                    {spec.length > 0 && spec.map((item, index) => (\n                                      <CTableRow v-for=\"item in tableItems\" key={index}>\n                                        <CTableDataCell className=\"text-center\">\n                                          {item.id}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.accept && \"red\"}}>\n                                          {item.date}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.accept && \"red\"}}>\n                                          <CTooltip\n                                              content={item.projectId}\n                                              placement=\"top\"\n                                            >\n                                              <div>{item.project}</div>\n                                          </CTooltip>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.accept && \"red\"}}>\n                                          <div>{item.crmId}</div>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 || item.accept ? 'red' : ''}}>\n                                          <CTooltip\n                                            content={item.workerId}\n                                            placement=\"top\"\n                                          > \n                                            <div>{item.workerFamily + \" \" + item.workerName}</div>\n                                          </CTooltip>\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{fontSize: '13px', textAlign: 'left'}}>\n                                          {item.tgId}\n                                          \n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.accept && 'red'}}>\n                                          {item.status === true ? 'Отказано' : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.accept && 'red'}}>\n                                          {item.updatedAt}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.accept && \"red\"}}>\n                                          {item.datestart}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.accept && \"red\"}}>\n                                          {item.dateend}\n                                        </CTableDataCell>\n                                      </CTableRow>\n                                      ))\n                                    }\n                                </CTableBody>                   \n                                </CTable>\n                              }\n\n                            </CCardBody>\n                          </CCard>\n                        </CCol>\n                    </CRow>\n                  </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Workers\n","import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default isPropValid;\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n"],"names":["useUsersContext","setCountPretendent","pretendents","setPretendents","useState","spec","setSpec","loading","setLoading","text","setText","useEffect","filteredData","filter","user","tgId","crmId","replace","toLowerCase","includes","arrWorkers","fetchData","getWorkers","workers","getProjects","projects","getCanceled","map","worker","i","console","log","userObject","find","proj","id","projectId","projectName","title","crmID","workerObject","item","chatId","receiverId","userfamily","username","status","cancel","d","Date","createdAt","getTime","d2","month","String","getMonth","padStart","day","getDate","chas","getHours","min","getMinutes","newDate","d3","updatedAt","d4","month2","day2","chas2","min2","updateDate","startDate","datestart","d5","d6","month3","day3","chas3","min3","endDate","dateend","d7","d8","month4","day4","chas4","min4","newWorker","workerId","date","project","workerFamily","workerName","accept","push","className","lg","Suspense","fallback","color","sm","placeholder","onChange","e","target","value","style","textAlign","align","hover","responsive","width","length","index","content","placement","dateborn","fontSize","reactPropsRegex","isPropValid","memoize","prop","test","charCodeAt","fn","cache","Object","create","arg","undefined"],"sourceRoot":""}