{"version":3,"file":"static/js/586.6b5b9b99.chunk.js","mappings":"2SAOMA,EAAgB,WACpB,IAAMC,GAAkBC,EAAAA,EAAAA,MAAcC,SAuBhCC,EAhBiB,SAACC,GACtB,IAAMD,EAAc,GAYpB,OAXAC,EAASC,MAAM,KAAKC,QAAO,SAACC,EAAMC,EAAMC,EAAOC,GAC7C,IAAMC,EAAe,UAAMJ,EAAI,YAAIC,GAC7BI,EATW,SAACV,EAAUW,GAC9B,IAAMC,EAAeD,EAAOE,MAAK,SAACC,GAAK,OAAKA,EAAMC,OAASf,CAAQ,IACnE,QAAOY,GAAeA,EAAaI,IACrC,CAMsBC,CAAaR,EAAiBE,EAAAA,GAOhD,OANAD,GACET,EAAYiB,KAAK,CACflB,SAAUS,EACVO,KAAMN,EACNS,OAAQZ,EAAQ,IAAMC,EAAMY,SAEzBX,CACT,IACOR,CACT,CAEoBoB,CAAevB,GAEnC,OACE,UAAC,KAAW,CAACwB,UAAU,WAAU,WAC/B,SAAC,KAAe,CAACC,KAAK,IAAG,SAAC,+CACzBtB,EAAYuB,KAAI,SAACC,EAAYlB,GAC5B,OACE,mBAAC,MAAe,kBACTkB,EAAWN,OAAS,CAAEA,QAAQ,GAAS,CAAEI,KAAME,EAAWzB,WAAU,IACzE0B,IAAKnB,IAEJkB,EAAWT,KAGlB,MAGN,EAEA,EAAeW,EAAAA,KAAW9B,GC7CpB+B,G,SAAY,WAcL,IAAIC,KAAK,oBACAC,UAGpB,OACE,UAAC,KAAO,YACN,4BACE,cAAGP,KAAK,qBAAqBQ,OAAO,SAASC,IAAI,sBAAqB,SAAC,kBAGvE,iBAAMV,UAAU,OAAM,SAAC,sHAEzB,gBAAKA,UAAU,cAQrB,GAEA,EAAeK,EAAAA,KAAWC,G,2MCkC1B,GAjD0BK,E,SAAAA,KAAS,WACjC,IAAOC,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,GAAnBF,KAQP,OACE,UAAC,KAAS,CAACG,QAAQ,WAAU,WAC3B,SAAC,KAAe,CAACC,UAAU,aAAahB,UAAU,OAAOiB,OAAO,EAAM,UACpE,SAAC,KAAO,CAACC,IAAKC,EAAQC,KAAK,UAE7B,UAAC,KAAa,CAACpB,UAAU,OAAOgB,UAAU,aAAY,WACpD,SAAC,KAAe,CAAChB,UAAU,4BAA2B,SAAC,gDACvD,UAAC,KAAa,CAACC,KAAK,IAAG,WACrB,SAAC,IAAK,CAACoB,KAAMC,EAAAA,EAAiBtB,UAAU,SAAS,0DAEjD,SAAC,KAAM,CAACuB,MAAM,UAAUvB,UAAU,OAAM,SAAC,UAI3C,UAAC,KAAa,CAACC,KAAK,IAAG,WACrB,SAAC,IAAK,CAACoB,KAAMG,EAAAA,EAASxB,UAAU,SAAS,8CAEzC,SAAC,KAAM,CAACuB,MAAM,UAAUvB,UAAU,OAAM,SAAC,WAI3C,SAAC,KAAe,CAACA,UAAU,4BAA2B,SAAC,4DACvD,UAAC,KAAa,CAACC,KAAK,IAAG,WACrB,SAAC,IAAK,CAACoB,KAAMI,EAAAA,EAASzB,UAAU,SAAS,iDAG3C,UAAC,KAAa,CAACC,KAAK,IAAG,WACrB,SAAC,IAAK,CAACoB,KAAMK,EAAAA,EAAa1B,UAAU,SAAS,6DAG/C,SAAC,KAAgB,KACjB,UAAC,KAAa,CAAC2B,QAAS,kBApC5BC,QAAQC,IAAI,kCACZjB,EAAKkB,QAAQ,CAAC,QACdlB,EAAKmB,WAAU,EAkC0B,EAAC,WACpC,SAAC,IAAK,CAACV,KAAMW,EAAAA,EAAehC,UAAU,SAAS,yCAMzD,I,m5TCiBA,EApEkB,WAChB,IAAMiC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,WAAW,IAK5D,OACE,UAAC,KAAO,CAACG,SAAS,SAAStC,UAAU,OAAM,WACzC,UAAC,KAAU,CAACuC,OAAK,aACf,SAAC,KAAc,CACbvC,UAAU,OACV2B,QAAS,kBAAMM,EAAS,CAAEO,KAAM,MAAOL,aAAcA,GAAc,EAAC,UAEpE,SAAC,IAAK,CAACd,KAAMoB,EAAAA,EAASrB,KAAK,UAE7B,SAAC,KAAY,CAACpB,UAAU,oBAAoB0C,GAAG,IAAG,UAChD,SAAC,IAAK,CAACrB,KAAMsB,EAAMC,OAAQ,GAAIC,IAAI,YAGrC,UAAC,KAAU,CAAC7C,UAAU,2BAA0B,WAC9C,SAAC,KAAQ,WACP,SAAC,KAAQ,CAAC0C,GAAG,aAAaI,UAAWC,EAAAA,GAAQ,SAAC,yGAIhD,SAAC,KAAQ,WACP,SAAC,KAAQ,CAAC9C,KAAK,SAAQ,SAAC,8DAE1B,SAAC,KAAQ,WACP,SAAC,KAAQ,CAACA,KAAK,SAAQ,SAAC,qDAG5B,UAAC,KAAU,YACT,SAAC,KAAQ,WACP,SAAC,KAAQ,CAACA,KAAK,IAAI+C,MAAO,CAACV,SAAU,YAAY,UAC/C,SAAC,IAAK,CAACjB,KAAM4B,EAAAA,EAAS7B,KAAK,YAS/B,SAAC,KAAQ,WACP,SAAC,KAAQ,CAACnB,KAAK,IAAG,UAChB,SAAC,IAAK,CAACoB,KAAM6B,EAAAA,EAAS9B,KAAK,YAG/B,SAAC,KAAQ,WACP,SAAC,KAAQ,CAACnB,KAAK,IAAG,UAChB,SAAC,IAAK,CAACoB,KAAMC,EAAAA,EAAiBF,KAAK,eAIzC,SAAC,KAAU,CAACpB,UAAU,OAAM,UAC1B,SAAC,EAAiB,UAGtB,SAAC,KAAc,KACd,SAAC,KAAU,CAACuC,OAAK,YAChB,SAAC,EAAa,QAItB,ECdA,EAvDkB,WAChB,IAAMN,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,WAAW,IAE5D,OACE,SAAC,KAAO,CAACG,SAAS,SAAQ,UACxB,UAAC,KAAU,CAACC,OAAK,aACf,SAAC,KAAc,CACbvC,UAAU,OACV2B,QAAS,kBAAMM,EAAS,CAAEO,KAAM,MAAOL,aAAcA,GAAc,EAAC,UAEpE,SAAC,IAAK,CAACd,KAAMoB,EAAAA,EAASrB,KAAK,UAE7B,SAAC,KAAY,CAACpB,UAAU,oBAAoB0C,GAAG,IAAG,UAChD,SAAC,IAAK,CAACrB,KAAMsB,EAAMC,OAAQ,GAAIC,IAAI,YAGrC,UAAC,KAAU,CAAC7C,UAAU,2BAA0B,WAC9C,SAAC,KAAQ,WACP,SAAC,KAAQ,CAAC0C,GAAG,aAAaI,UAAWC,EAAAA,GAAQ,SAAC,yGAIhD,SAAC,KAAQ,WACP,SAAC,KAAQ,CAAC9C,KAAK,SAAQ,SAAC,8DAE1B,SAAC,KAAQ,WACP,SAAC,KAAQ,CAACA,KAAK,SAAQ,SAAC,qDAG5B,UAAC,KAAU,YACT,SAAC,KAAQ,WACP,SAAC,KAAQ,CAACA,KAAK,IAAG,UAChB,SAAC,IAAK,CAACoB,KAAM4B,EAAAA,EAAS7B,KAAK,YAG/B,SAAC,KAAQ,WACP,SAAC,KAAQ,CAACnB,KAAK,IAAG,UAChB,SAAC,IAAK,CAACoB,KAAM6B,EAAAA,EAAS9B,KAAK,YAG/B,SAAC,KAAQ,WACP,SAAC,KAAQ,CAACnB,KAAK,IAAG,UAChB,SAAC,IAAK,CAACoB,KAAMC,EAAAA,EAAiBF,KAAK,eAIzC,SAAC,KAAU,CAACpB,UAAU,OAAM,UAC1B,SAAC,EAAiB,UAK5B,E,qHClEamD,EAAgB,SAAH,GAAmB,IAAbC,EAAK,EAALA,MACxBxE,GAAWH,EAAAA,EAAAA,MACX4E,EAAU,SAAC3D,EAAM2B,EAAMiC,GAC3B,OACE,gCACGjC,GAAQA,EACR3B,GAAQA,EACR4D,IACC,SAAC,KAAM,CAAC/B,MAAO+B,EAAM/B,MAAOvB,UAAU,UAAS,SAC5CsD,EAAMC,SAKjB,EAEMC,EAAU,SAACC,EAAMxE,GACrB,IAAQ6D,EAA0CW,EAA1CX,UAAWpD,EAA+B+D,EAA/B/D,KAAM4D,EAAyBG,EAAzBH,MAAOjC,EAAkBoC,EAAlBpC,KAASqC,GAAI,OAAKD,EAAI,GAChDE,EAAYb,EAClB,OACE,mBAACa,GAAS,kBACHD,EAAKhB,KACPgB,EAAKN,OAAS,CACbN,UAAWC,EAAAA,KACZ,IACH3C,IAAKnB,GACDyE,GAEHL,EAAQ3D,EAAM2B,EAAMiC,GAG3B,EACMM,EAAW,SAAXA,EAAYH,EAAMxE,GAAW,IAAD,EACxB6D,EAAuCW,EAAvCX,UAAWpD,EAA4B+D,EAA5B/D,KAAM2B,EAAsBoC,EAAtBpC,KAAMqB,EAAgBe,EAAhBf,GAAOgB,GAAI,OAAKD,EAAI,GAC7CE,EAAYb,EAClB,OACE,SAACa,GAAS,gBACRE,IAAKC,OAAO7E,GAEZ8E,QAASV,EAAQ3D,EAAM2B,GACvB2C,QAASpF,EAASF,SAASuF,WAAWvB,IAClCgB,GAAI,aAEG,QAFH,EAEPD,EAAKL,aAAK,aAAV,EAAYlD,KAAI,SAACuD,EAAMxE,GAAK,OAC3BwE,EAAKL,MAAQQ,EAASH,EAAMxE,GAASuE,EAAQC,EAAMxE,EAAM,MANtDA,EAUX,EAEA,OACE,SAAC,WAAc,UACZmE,GACCA,EAAMlD,KAAI,SAACuD,EAAMxE,GAAK,OAAMwE,EAAKL,MAAQQ,EAASH,EAAMxE,GAASuE,EAAQC,EAAMxE,EAAM,KAG7F,E,WC1CMiF,G,SAAa,WACjB,IAAMjC,GAAWC,EAAAA,EAAAA,MACXiC,GAAa/B,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM+B,iBAAiB,IAC3DjC,GAAcC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,WAAW,IAE5D,GAAqCkC,EAAAA,EAAAA,KAA7BC,EAAY,EAAZA,aAAcC,EAAU,EAAVA,WACtB3C,QAAQC,IAAI,iBAAkByC,GAE9B,IAAIE,EA8DJ,OA5DAA,EAAa,CACX,CACE1B,UAAW2B,EAAAA,GACX/E,KAAM,oGACNgD,GAAI,aACJrB,MAAM,SAAC,IAAK,CAACA,KAAMqD,EAAAA,EAAgBC,gBAAgB,cAErD,CACE7B,UAAW8B,EAAAA,GACXlF,KAAM,+FAER,CACEoD,UAAW2B,EAAAA,GACX/E,KAAM,yDACNgD,GAAI,SACJrB,MAAM,SAAC,IAAK,CAACA,KAAMwD,EAAAA,EAAWF,gBAAgB,aAC9CrB,MAAwB,IAAjBgB,EAAqB,CAAC/C,MAAO,OAAQgC,KAAMe,GAAiB,IAGrE,CACExB,UAAW2B,EAAAA,GACX/E,KAAM,mDACNgD,GAAI,gBACJrB,MAAM,SAAC,IAAK,CAACA,KAAMyD,EAAAA,EAAWH,gBAAgB,cAEhD,CACE7B,UAAW2B,EAAAA,GACX/E,KAAM,qEACNgD,GAAI,iBACJrB,MAAM,SAAC,IAAK,CAACA,KAAM4B,EAAAA,EAAS0B,gBAAgB,aAC5CrB,MAAOiB,EAAa,CAAChD,MAAO,OAAQgC,KAAM,KAAQ,IAGpD,CACET,UAAW2B,EAAAA,GACX/E,KAAM,GACNgD,GAAI,KAGN,CACEI,UAAW2B,EAAAA,GACX/E,KAAM,UACNgD,GAAI,YACJrB,MAAM,SAAC,IAAK,CAACA,KAAMwD,EAAAA,EAAWF,gBAAgB,cAEhD,CACE7B,UAAW2B,EAAAA,GACX/E,KAAM,qEACNgD,GAAI,WACJrB,MAAM,SAAC,IAAK,CAACA,KAAMwD,EAAAA,EAAWF,gBAAgB,cAGhD,CACE7B,UAAW2B,EAAAA,GACX/E,KAAM,mDACNgD,GAAI,iBACJrB,MAAM,SAAC,IAAK,CAACA,KAAMyD,EAAAA,EAAWH,gBAAgB,gBAKhD,UAAC,KAAQ,CACPrC,SAAS,QACT6B,WAAYA,EACZH,QAAS7B,EACT4C,gBAAiB,SAACf,GAChB/B,EAAS,CAAEO,KAAM,MAAOL,YAAa6B,GACvC,EAAE,WAEF,SAAC,KAAa,CAAChE,UAAU,mBAAmB0C,GAAG,IAAG,UAChD,gBAAKxB,IAAKyB,EAAME,IAAI,GAAGD,OAAQ,GAAI5C,UAAU,0BAE/C,SAAC,KAAW,WACV,SAAC,IAAS,WACR,SAACmD,EAAa,CAACC,MAAOoB,SAG1B,SAAC,KAAe,CACdxE,UAAU,mBACV2B,QAAS,kBAAMM,EAAS,CAAEO,KAAM,MAAO4B,mBAAoBD,GAAa,MAIhF,GAEA,EAAe9D,EAAAA,KAAW6D,E,uCCjHpBc,EAAQ3E,EAAAA,MAAW,kBAAM,wEAAuB,IAChD4E,EAAS5E,EAAAA,MAAW,kBAAM,wEAAwB,IAClD6E,EAAS7E,EAAAA,MAAW,kBAAM,8BAAwB,IAClD8E,EAAa9E,EAAAA,MAAW,kBAAM,+DAA4B,IAC1D+E,EAAQ/E,EAAAA,MAAW,kBAAM,oDAAuB,IAChDgF,EAAgBhF,EAAAA,MAAW,kBAAM,sDAA+B,IAChEiF,EAAcjF,EAAAA,MAAW,kBAAM,8BAA6B,IAC5DkF,EAAUlF,EAAAA,MAAW,kBAAM,6BAAyB,IAKpDhB,EAAS,CACb,CAAEI,KAAM,IAAK+F,OAAO,EAAM9F,KAAM,QAChC,CAAED,KAAM,aAAcC,KAAM,oGAAqBiE,UAAWyB,GAC5D,CAAE3F,KAAM,QAASC,KAAM,2BAAQiE,UAAWqB,GAC1C,CAAEvF,KAAM,SAAUC,KAAM,+BAAYiE,UAAWsB,GAC/C,CAAExF,KAAM,YAAaC,KAAM,UAAWiE,UAAWwB,GACjD,CAAE1F,KAAM,SAAUC,KAAM,6CAAWiE,UAAWuB,GAC9C,CAAEzF,KAAM,gBAAiBC,KAAM,mDAAYiE,UAXxBtD,EAAAA,MAAW,kBAAM,8BAA8B,KAYlE,CAAEZ,KAAM,oBAAqBC,KAAM,8FAAoBiE,UAXjCtD,EAAAA,MAAW,kBAAM,sDAAiC,KAYxE,CAAEZ,KAAM,WAAYC,KAAM,uCAAUiE,UAAW4B,GAC/C,CAAE9F,KAAM,eAAgBC,KAAM,+FAAqBiE,UAAW2B,GAC9D,CAAE7F,KAAM,iBAAkBC,KAAM,qEAAeiE,UAAW0B,GAC1D,CAAE5F,KAAM,YAAaC,KAAM,yDAAaiE,UAdzBtD,EAAAA,MAAW,kBAAM,8BAA0B,MAiB5D,K","sources":["components/AppBreadcrumb.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppHeaderChat.js","components/AppSidebarNav.js","components/AppSidebar.js","routes.js"],"sourcesContent":["import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Главная</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nimport { getProject3 } from '../http/adminAPI';\n\nconst AppFooter = () => {\n\n  var options = {\n    era: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    weekday: 'long',\n    timezone: 'UTC',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric'\n  };\n\n  var date = new Date('2023-08-03T17:43');\n  var timeDiff = date.getTime() - 720000000;\n  //console.log(\"Дата и время: \", timeDiff.toISOString());\n\n  return (\n    <CFooter>\n      <div>\n        <a href=\"https://uley.team/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          U.L.E.Y TEAM\n        </a>\n        <span className=\"ms-1\">&copy; 2023 Все права защищены.</span>\n      </div>\n      <div className=\"ms-auto\">\n        {/* <span className=\"me-1\">Сделано</span> */}\n        {/* <a href=\"https://uley.team/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            U.L.E.Y TEAM\n        </a> */}\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React, {useContext} from 'react'\nimport {Context} from \"../../index\";\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport avatar from './../../assets/images/avatars/logo_chat_admin.png'\nimport {observer} from \"mobx-react-lite\";\n\nconst AppHeaderDropdown = observer(() => {\n  const {user} = useContext(Context)\n\n  const logOut = () => {\n    console.log(\"Выход\")\n    user.setUser({})\n    user.setIsAuth(false)\n}\n\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Аккаунт</CDropdownHeader>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilEnvelopeOpen} className=\"me-2\" />\n          Сообщений\n          <CBadge color=\"success\" className=\"ms-2\">\n            0\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilFile} className=\"me-2\" />\n          Проекты\n          <CBadge color=\"primary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Настройки</CDropdownHeader>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Профиль\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          Настройки\n        </CDropdownItem>       \n        <CDropdownDivider />\n        <CDropdownItem onClick={()=> logOut()}>\n          <CIcon icon={cilLockLocked} className=\"me-2\" />\n          Выйти\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n});\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n  CBadge,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport logo from './../assets/brand/logo_04_light.png'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  //const { newProject } = useUsersContext();\n  //console.log(\"countProject: \", newProject)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CIcon icon={logo} height={48} alt=\"Logo\" />\n          {/* <h5>U.L.E.Y TEAM</h5> */}\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              Панель управления\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"/chat2\">Заказчики</CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"/chat3\">Проекты</CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav>\n          <CNavItem>\n            <CNavLink href=\"#\" style={{position: 'relative'}}>\n              <CIcon icon={cilBell} size=\"lg\" />\n              {/* <CBadge color=\"success\" className=\"ms-2\">\n                5\n              </CBadge> */}\n              {/* { newProject ?  <span className=\"badge bg-danger-gradient rounded-pill position-absolute top-0 end-0\">1</span> \n              : \"\"\n              } */}\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n       <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n  CBadge,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\nimport logo from './../assets/brand/logo_04_light.png'\nimport { AppHeaderDropdown } from './header/index'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" >\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CIcon icon={logo} height={48} alt=\"Logo\" />\n          {/* <h5>U.L.E.Y TEAM</h5> */}\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              Панель управления\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"/chat2\">Заказчики</CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"/chat3\">Проекты</CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilBell} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilCursor,\n  cilSpeedometer,\n  cilPeople,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport { AppSidebarNav } from './AppSidebarNav'\nimport logo from 'src/assets/brand/logo_04_light.png'\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\n\n// sidebar nav config\n//import navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  const { countMessage, newProject } = useUsersContext();\n  console.log(\"countMessage: \", countMessage)\n  \n  let navigation = []\n\n  navigation = [ //показывать бейдж\n    {\n      component: CNavItem,\n      name: 'Панель управления',\n      to: '/dashboard',\n      icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavTitle,\n      name: 'Основные разделы',\n    },\n    {\n      component: CNavItem,\n      name: 'Заказчики',\n      to: '/chat2',\n      icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n      badge: countMessage !== 0 ? {color: 'info', text: countMessage,} : \"\",\n    },\n    \n    {\n      component: CNavItem,\n      name: 'Рассылки',\n      to: '/distribution',\n      icon: <CIcon icon={cilCursor} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Уведомления',\n      to: '/notifications',\n      icon: <CIcon icon={cilBell} customClassName=\"nav-icon\" />,\n      badge: newProject ? {color: 'info', text: '1',} : \"\",\n    },\n\n    {\n      component: CNavItem,\n      name: '',\n      to: '/',\n    },\n\n    {\n      component: CNavItem,\n      name: 'Workhub',\n      to: '/chatwork',\n      icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Специалисты',\n      to: '/workers',\n      icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n      //badge: newProject ? {color: 'info', text: '1',} : \"\",\n    },\n    {\n      component: CNavItem,\n      name: 'Рассылки',\n      to: '/distributionw',\n      icon: <CIcon icon={cilCursor} customClassName=\"nav-icon\" />,\n    },\n  ]\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        <img src={logo} alt='' height={35} className=\"sidebar-brand-full\"/>\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\n\nconst Chats = React.lazy(() => import('./pages/Chats'))\nconst Chats2 = React.lazy(() => import('./pages/Chats2'))\nconst Chats3 = React.lazy(() => import('./pages/Chats3'))\nconst ChatWorker = React.lazy(() => import('./pages/ChatWorker'))\nconst Admin = React.lazy(() => import('./pages/Admin'))\nconst Notifications = React.lazy(() => import('./pages/Notifications'))\nconst MessagesBot = React.lazy(() => import('./pages/MessagesBot'))\nconst Reports = React.lazy(() => import('./pages/Reports'))\nconst Distribution = React.lazy(() => import('./pages/Distribution'))\nconst DistributionAdd = React.lazy(() => import('./pages/DistributionAdd'))\nconst Settings = React.lazy(() => import('./pages/Settings'))\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Панель управления', Component: Admin },\n  { path: \"/chat\", name: 'Чаты', Component: Chats },\n  { path: \"/chat2\", name: 'Чаты 2.0', Component: Chats2 },\n  { path: \"/chatwork\", name: 'Workhub', Component: ChatWorker },\n  { path: \"/chat3\", name: 'Проекты', Component: Chats3 },\n  { path: '/distribution', name: 'Рассылки', Component: Distribution },\n  { path: '/distribution_add', name: 'Создать рассылку', Component: DistributionAdd },\n  { path: '/reports', name: 'Отчеты', Component: Reports },\n  { path: '/messagesbot', name: 'Сообщения от бота', Component: MessagesBot },\n  { path: \"/notifications\", name: 'Уведомления', Component: Notifications },\n  { path: '/settings', name: 'Настройки', Component: Settings },\n]\n\nexport default routes\n"],"names":["AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","routeName","routes","currentRoute","find","route","path","name","getRouteName","push","active","length","getBreadcrumbs","className","href","map","breadcrumb","key","React","AppFooter","Date","getTime","target","rel","observer","user","useContext","Context","variant","placement","caret","src","avatar","size","icon","cilEnvelopeOpen","color","cilFile","cilUser","cilSettings","onClick","console","log","setUser","setIsAuth","cilLockLocked","dispatch","useDispatch","sidebarShow","useSelector","state","position","fluid","type","cilMenu","to","logo","height","alt","component","NavLink","style","cilBell","cilList","AppSidebarNav","items","navLink","badge","text","navItem","item","rest","Component","navGroup","idx","String","toggler","visible","startsWith","AppSidebar","unfoldable","sidebarUnfoldable","useUsersContext","countMessage","newProject","navigation","CNavItem","cilSpeedometer","customClassName","CNavTitle","cilPeople","cilCursor","onVisibleChange","Chats","Chats2","Chats3","ChatWorker","Admin","Notifications","MessagesBot","Reports","exact"],"sourceRoot":""}