{"version":3,"file":"static/js/470.a55e7779.chunk.js","mappings":"8NAysCA,UA9qC4B,WAC1B,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAiDC,EAAAA,EAAAA,UAAS,IAAG,eAEvDC,GAFkB,KAAsB,KAE7BH,EAASI,MAAMC,SAC1BC,EAAWN,EAASI,MAAMG,KAEhC,GAAgCL,EAAAA,EAAAA,UAAS,GAAE,eAApCM,EAAQ,KAAEC,EAAW,KAC5B,GAAkCP,EAAAA,EAAAA,UAAS,GAAE,eAAtCQ,EAAS,KAAEC,EAAY,KAC9B,GAAkCT,EAAAA,EAAAA,UAAS,GAAE,eAAtCU,EAAS,KAAEC,EAAY,KAE9B,GAAgCX,EAAAA,EAAAA,UAAS,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,IAAO,eAApFY,EAAQ,KAAEC,EAAW,KAC5B,GAAgCb,EAAAA,EAAAA,UAAS,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,IAAO,eAApFc,EAAQ,KAAEC,EAAW,KAC5B,GAAgCf,EAAAA,EAAAA,UAAS,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,IAAO,eAApFgB,EAAQ,KAAEC,EAAW,KAEtBC,EAAI,IAAIC,KACRC,EAAQC,OAAOH,EAAEI,WAAW,GAAGC,SAAS,EAAG,KAC5CC,EAAMH,OAAOH,EAAEO,WAAWF,SAAS,EAAG,KACrCG,EAAQ,UAAMF,EAAG,YAAIJ,GAE3BF,EAAES,QAAQT,EAAEO,UAAY,GACxB,IAAMG,EAASP,OAAOH,EAAEI,WAAW,GAAGC,SAAS,EAAG,KAC7CM,EAAOR,OAAOH,EAAEO,WAAWF,SAAS,EAAG,KAI5C,GAHe,UAAMM,EAAI,YAAID,IAGH5B,EAAAA,EAAAA,UAAS,CACjC,CAAC8B,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,GAChD,CAACH,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,GAChD,CAACH,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,GAChD,CAACH,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,GAChD,CAACH,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,GAChD,CAACH,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,MAChD,eAPKC,EAAK,KAAEC,EAAQ,KAUtB,GAA4BnC,EAAAA,EAAAA,UAAS,CACnC,CAAC8B,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,GAChD,CAACH,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,GAChD,CAACH,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,GAChD,CAACH,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,GAChD,CAACH,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,GAChD,CAACH,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,KAChD,eAPKG,EAAM,KAAEC,EAAS,KASxB,GAA8BrC,EAAAA,EAAAA,UAAS,CACrC,CAAC8B,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,GAChD,CAACH,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,GAChD,CAACH,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,GAChD,CAACH,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,GAChD,CAACH,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,GAChD,CAACH,KAAMJ,EAAUK,KAAM,QAASC,KAAM,GAAIC,MAAM,KAChD,gBAPKK,GAAO,MAAEC,GAAU,MAW1B,IAAsCvC,EAAAA,EAAAA,UAAS,IAAG,iBAA3CwC,GAAW,MAAEC,GAAc,MAClC,IAAsCzC,EAAAA,EAAAA,WAAS,GAAM,iBAA9C0C,GAAW,MAAEC,GAAc,MAClC,IAA4B3C,EAAAA,EAAAA,UAAS,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,IAAO,iBAAhF4C,GAAM,MAAEC,GAAS,MACxB,IAA4B7C,EAAAA,EAAAA,UAAS,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,IAAO,iBAAhF8C,GAAM,MAAEC,GAAS,MACxB,IAA4B/C,EAAAA,EAAAA,UAAS,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,IAAO,iBAAhFgD,GAAM,MAAEC,GAAS,MAExB,IAAoCjD,EAAAA,EAAAA,WAAS,GAAK,iBAA3CkD,GAAU,MAAEC,GAAa,MAEhC,IAA0BnD,EAAAA,EAAAA,UAAS,GAAE,iBAA9BoD,GAAK,MAAEC,GAAQ,MAChBC,IAAUC,EAAAA,EAAAA,UAEZC,GAAM,IAEVC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,yCAAG,8GACIC,EAAAA,EAAAA,IAAa1D,GAAW,KAAD,EAAvCE,EAAO,OACXyD,QAAQC,IAAI,oFAAoD,QAAlC,EAAE1D,EAAQ2D,WAAWC,KAAKC,MAAM,UAAE,aAAhC,EAAkCC,YAClEd,IAAc,GACdV,GAA+C,QAAjC,EAACtC,EAAQ2D,WAAWC,KAAKC,MAAM,UAAE,aAAhC,EAAkCC,YAAW,2CAC7D,kBALc,mCAMbP,GACJ,GAAE,KAGFD,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,yCAAG,0HACCQ,EAAAA,EAAAA,KAAQ,IAAI/C,MAAOgD,sBAAsB,KAAD,EAArDC,EAAI,OACRR,QAAQC,IAAIO,GAEC,OAATA,IACIC,EAAYC,KAAKC,MAAMH,EAAKI,OAClCZ,QAAQC,IAAI,cAAeQ,GAErBI,EAAOJ,EAAUK,WAAU,SAAA5C,GAAI,MAAkB,UAAdA,EAAKC,IAAgB,IACxD4C,EAAON,EAAUK,WAAU,SAAA5C,GAAI,MAAkB,UAAdA,EAAKC,IAAgB,IAE9D6B,QAAQC,IAAI,2CAAcY,GAC1Bb,QAAQC,IAAI,2CAAcc,GAEpBH,EAAQH,EAAUO,MAAM,EAAGH,GAC3BI,EAASR,EAAUO,MAAMH,EAAME,GAC/BG,EAAST,EAAUO,MAAMD,EAAMN,EAAUU,QAEzC7D,EAAI,IAAIC,KACR6D,EAAO9D,EAAE+D,WAGfT,EAAMU,KAAI,SAACnD,EAAMoD,GACXpD,EAAKE,OACPW,GAAOuC,IAAS,EAChBtC,GAAUD,KAEZgB,QAAQC,IAAI,SAAUmB,GAClBjD,EAAKA,KAAKqD,MAAM,KAAK,GAAKJ,IAC5BpE,EAASuE,IAAS,EAClBtE,EAAYD,GAEhB,IAEAiE,EAAOK,KAAI,SAACnD,EAAMoD,GACZpD,EAAKE,OACPa,GAAOqC,IAAS,EAChBpC,GAAUD,KAERf,EAAKA,KAAKqD,MAAM,KAAK,GAAKJ,IAC5BlE,EAASqE,IAAS,EAClBpE,EAAYD,GAEhB,IAEAgE,EAAOI,KAAI,SAACnD,EAAMoD,GACZpD,EAAKE,OACPe,GAAOmC,IAAS,EAChBlC,GAAUD,KAERjB,EAAKA,KAAKqD,MAAM,KAAK,GAAKJ,IAC5BhE,EAASmE,IAAS,EAClBlE,EAAYD,GAEhB,IAEAmB,EAASqC,GACTnC,EAAUwC,GACVtC,GAAWuC,GAEXvE,EAAYkE,GACZhE,EAAakE,EAAOF,GACpB9D,EAAa0D,EAAUU,OAASJ,IAIjC,2CAEF,kBApEc,mCAqEbjB,GACJ,GAAE,IAGF,IAAM2B,GAAe,SAACC,EAAKC,GACb,IAARA,KACsB,IAApBrD,EAAMoD,GAAKrD,MACb2B,QAAQC,IAAI,QACZjB,GAAO0C,IAAO,EACdpD,EAAMoD,GAAKrD,MAAO,EAClBC,EAAMoD,GAAKtD,KAAO,KAElB4B,QAAQC,IAAI,SACZjB,GAAO0C,IAAO,EACdpD,EAAMoD,GAAKtD,KAAOQ,GAClBN,EAAMoD,GAAKrD,MAAO,GAKpBE,EAASD,GACTW,GAAUD,KAGA,IAAR2C,IACEzC,GAAOwC,IACTxC,GAAOwC,IAAO,EACdlD,EAAOkD,GAAKtD,KAAO,GACnBE,EAAMoD,GAAKrD,MAAO,IAElBa,GAAOwC,IAAO,EACdlD,EAAOkD,GAAKtD,KAAOQ,GACnBJ,EAAOkD,GAAKrD,MAAO,GAGrBI,EAAUD,GACVW,GAAUD,KAGA,IAARyC,IACEvC,GAAOsC,IACTtC,GAAOsC,IAAO,EACdhD,GAAQgD,GAAKtD,KAAO,GACpBM,GAAQgD,GAAKrD,MAAO,IAEpBe,GAAOsC,IAAO,EACdhD,GAAQgD,GAAKtD,KAAOQ,GACpBF,GAAQgD,GAAKrD,MAAO,GAGtBM,GAAWD,IACXW,GAAUD,KAIEL,IAAdD,GACF,EAKM8C,GAAoB,SAACC,EAAGH,EAAKC,GAEjC,GAAU,UAANE,GACU,IAARF,EAEF,GAA0B,UAAtBrD,EAAMoD,EAAI,GAAGvD,KAAkB,CACjCxB,EAAYD,EAAS,GACrBkD,GAAMtB,EAAM0C,MAAM,GAClB,IAAMc,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBvD,EAASqB,IAGTA,GAAI0B,KAAI,SAACU,EAAMT,GACbvC,GAAOuC,GAASS,EAAK3D,IACvB,IACAY,GAAUD,GAEZ,KAC4B,KAAtBV,EAAMoD,EAAI,GAAGtD,OACfzB,EAAYD,EAAS,IACrBkD,GAAMtB,EAAM0C,MAAM,IACde,OAAOL,EAAI,EAAG,GAClBnD,EAASqB,IAGTA,GAAI0B,KAAI,SAACU,EAAMT,GACbvC,GAAOuC,GAASS,EAAK3D,IACvB,IACAY,GAAUD,KAMlB,GAAU,UAAN6C,GACU,IAARF,GAEU,IAARA,EAEF,GAA0B,UAAtBrD,EAAMoD,EAAI,GAAGvD,KAAkB,CACjCxB,EAAYD,EAAS,GACrBkD,GAAMtB,EAAM0C,MAAM,GAClB,IAAMc,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBvD,EAASqB,IAGTA,GAAI0B,KAAI,SAACU,EAAMT,GACbvC,GAAOuC,GAASS,EAAK3D,IACvB,IACAY,GAAUD,GAEZ,KAC4B,KAAtBV,EAAMoD,EAAI,GAAGtD,OACfzB,EAAYD,EAAS,IACrBkD,GAAMtB,EAAM0C,MAAM,IACde,OAAOL,EAAI,EAAG,GAClBnD,EAASqB,IAGTA,GAAI0B,KAAI,SAACU,EAAMT,GACbvC,GAAOuC,GAASS,EAAK3D,IACvB,IACAY,GAAUD,KAQpB,GAAU,UAAN6C,GACU,IAARF,GAEU,IAARA,EAEF,GAA0B,UAAtBrD,EAAMoD,EAAI,GAAGvD,KAAkB,CACjCxB,EAAYD,EAAS,GACrBkD,GAAMtB,EAAM0C,MAAM,GAClB,IAAMc,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBvD,EAASqB,IAGTA,GAAI0B,KAAI,SAACU,EAAMT,GACbvC,GAAOuC,GAASS,EAAK3D,IACvB,IACAY,GAAUD,GAEZ,KAC4B,KAAtBV,EAAMoD,EAAI,GAAGtD,OACfzB,EAAYD,EAAS,IACrBkD,GAAMtB,EAAM0C,MAAM,IACde,OAAOL,EAAI,EAAG,GAClBnD,EAASqB,IAGTA,GAAI0B,KAAI,SAACU,EAAMT,GACbvC,GAAOuC,GAASS,EAAK3D,IACvB,IACAY,GAAUD,KAOpB,GAAU,UAAN6C,GACU,IAARF,GAEU,IAARA,EAEF,GAA0B,UAAtBrD,EAAMoD,EAAI,GAAGvD,KAAkB,CACjCxB,EAAYD,EAAS,GACrBkD,GAAMtB,EAAM0C,MAAM,GAClB,IAAMc,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBvD,EAASqB,IAGTA,GAAI0B,KAAI,SAACU,EAAMT,GACbvC,GAAOuC,GAASS,EAAK3D,IACvB,IACAY,GAAUD,GAEZ,KAC4B,KAAtBV,EAAMoD,EAAI,GAAGtD,OACfzB,EAAYD,EAAS,IACrBkD,GAAMtB,EAAM0C,MAAM,IACde,OAAOL,EAAI,EAAG,GAClBnD,EAASqB,IAGTA,GAAI0B,KAAI,SAACU,EAAMT,GACbvC,GAAOuC,GAASS,EAAK3D,IACvB,IACAY,GAAUD,KAOpB,GAAU,UAAN6C,GACU,IAARF,GAEU,IAARA,EAEF,GAA0B,UAAtBrD,EAAMoD,EAAI,GAAGvD,KAAkB,CACjCxB,EAAYD,EAAS,GACrBkD,GAAMtB,EAAM0C,MAAM,GAClB,IAAMc,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBvD,EAASqB,IAGTA,GAAI0B,KAAI,SAACU,EAAMT,GACbvC,GAAOuC,GAASS,EAAK3D,IACvB,IACAY,GAAUD,GAEZ,KAC4B,KAAtBV,EAAMoD,EAAI,GAAGtD,OACfzB,EAAYD,EAAS,IACrBkD,GAAMtB,EAAM0C,MAAM,IACde,OAAOL,EAAI,EAAG,GAClBnD,EAASqB,IAGTA,GAAI0B,KAAI,SAACU,EAAMT,GACbvC,GAAOuC,GAASS,EAAK3D,IACvB,IACAY,GAAUD,KAOpB,GAAU,UAAN6C,GACU,IAARF,EAAW,CAAC,IAAD,IAEX,GAA2B,WAAX,QAAZ,EAAArD,EAAMoD,EAAI,UAAE,aAAZ,EAAcvD,MAAkB,CAClCxB,EAAYD,EAAS,GACrBkD,GAAMtB,EAAM0C,MAAM,GAClBhB,QAAQC,IAAIL,IACZ,IAAMkC,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBvD,EAASqB,IAGTA,GAAI0B,KAAI,SAACU,EAAMT,GACbvC,GAAOuC,GAASS,EAAK3D,IACvB,IACAY,GAAUD,GACZ,CAE2B,WAAX,QAAZ,EAAAV,EAAMoD,EAAI,UAAE,aAAZ,EAAcvD,OACU,KAAtBG,EAAMoD,EAAI,GAAGtD,OACfzB,EAAYD,EAAS,IACrBkD,GAAMtB,EAAM0C,MAAM,IACde,OAAOL,EAAI,EAAG,GAClBnD,EAASqB,IAGTA,GAAI0B,KAAI,SAACU,EAAMT,GACbvC,GAAOuC,GAASS,EAAK3D,IACvB,IACAY,GAAUD,IAGlB,CAKF,GAAU,UAAN6C,GACU,IAARF,EAEF,GAA2B,UAAvBnD,EAAOkD,EAAI,GAAGvD,KAAkB,CAClCtB,EAAaD,EAAU,GACvBgD,GAAMpB,EAAOwC,MAAM,GACnB,IAAMc,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBrD,EAAUmB,IAGVA,GAAI0B,KAAI,SAACU,EAAMT,GACbrC,GAAOqC,GAASS,EAAK3D,IACvB,IACAc,GAAUD,GAEZ,KAC6B,KAAvBV,EAAOkD,EAAI,GAAGtD,OAChBvB,EAAaD,EAAU,IACvBgD,GAAMpB,EAAOwC,MAAM,IACfe,OAAOL,EAAI,EAAG,GAClBjD,EAAUmB,IAGVA,GAAI0B,KAAI,SAACU,EAAMT,GACbrC,GAAOqC,GAASS,EAAK3D,IACvB,IACAc,GAAUD,KAMlB,GAAU,UAAN2C,GACU,IAARF,EAEF,GAA2B,UAAvBnD,EAAOkD,EAAI,GAAGvD,KAAkB,CAClCtB,EAAaD,EAAU,GACvBgD,GAAMpB,EAAOwC,MAAM,GACnB,IAAMc,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBrD,EAAUmB,IAGVA,GAAI0B,KAAI,SAACU,EAAMT,GACbrC,GAAOqC,GAASS,EAAK3D,IACvB,IACAc,GAAUD,GAEZ,KAC6B,KAAvBV,EAAOkD,EAAI,GAAGtD,OAChBvB,EAAaD,EAAU,IACvBgD,GAAMpB,EAAOwC,MAAM,IACfe,OAAOL,EAAI,EAAG,GAClBjD,EAAUmB,IAGVA,GAAI0B,KAAI,SAACU,EAAMT,GACbvC,GAAOuC,GAASS,EAAK3D,IACvB,IACAY,GAAUD,KAMlB,GAAU,UAAN6C,GACU,IAARF,EAEF,GAA2B,UAAvBnD,EAAOkD,EAAI,GAAGvD,KAAkB,CAClCtB,EAAaD,EAAU,GACvBgD,GAAMpB,EAAOwC,MAAM,GACnB,IAAMc,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBrD,EAAUmB,IAGVA,GAAI0B,KAAI,SAACU,EAAMT,GACbrC,GAAOqC,GAASS,EAAK3D,IACvB,IACAc,GAAUD,GAEZ,KAC6B,KAAvBV,EAAOkD,EAAI,GAAGtD,OAChBvB,EAAaD,EAAU,IACvBgD,GAAMpB,EAAOwC,MAAM,IACfe,OAAOL,EAAI,EAAG,GAClBjD,EAAUmB,IAGVA,GAAI0B,KAAI,SAACU,EAAMT,GACbrC,GAAOqC,GAASS,EAAK3D,IACvB,IACAc,GAAUD,KAMlB,GAAU,UAAN2C,GACU,IAARF,EAEF,GAA2B,UAAvBnD,EAAOkD,EAAI,GAAGvD,KAAkB,CAClCtB,EAAaD,EAAU,GACvBgD,GAAMpB,EAAOwC,MAAM,GACnB,IAAMc,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBrD,EAAUmB,IAGVA,GAAI0B,KAAI,SAACU,EAAMT,GACbrC,GAAOqC,GAASS,EAAK3D,IACvB,IACAc,GAAUD,GAEZ,KAC6B,KAAvBV,EAAOkD,EAAI,GAAGtD,OAChBvB,EAAaD,EAAU,IACvBgD,GAAMpB,EAAOwC,MAAM,IACfe,OAAOL,EAAI,EAAG,GAClBjD,EAAUmB,IAGVA,GAAI0B,KAAI,SAACU,EAAMT,GACbrC,GAAOqC,GAASS,EAAK3D,IACvB,IACAc,GAAUD,KAMlB,GAAU,UAAN2C,GACU,IAARF,EAEF,GAA2B,UAAvBnD,EAAOkD,EAAI,GAAGvD,KAAkB,CAClCtB,EAAaD,EAAU,GACvBgD,GAAMpB,EAAOwC,MAAM,GACnB,IAAMc,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBrD,EAAUmB,IAGVA,GAAI0B,KAAI,SAACU,EAAMT,GACbrC,GAAOqC,GAASS,EAAK3D,IACvB,IACAc,GAAUD,GAEZ,KAC6B,KAAvBV,EAAOkD,EAAI,GAAGtD,OAChBvB,EAAaD,EAAU,IACvBgD,GAAMpB,EAAOwC,MAAM,IACfe,OAAOL,EAAI,EAAG,GAClBjD,EAAUmB,IAGVA,GAAI0B,KAAI,SAACU,EAAMT,GACbrC,GAAOqC,GAASS,EAAK3D,IACvB,IACAc,GAAUD,KAMlB,GAAU,UAAN2C,GACU,IAARF,EAAW,CAAC,IAAD,IAEb,GAA4B,WAAX,QAAb,EAAAnD,EAAOkD,EAAI,UAAE,aAAb,EAAevD,MAAkB,CACnCtB,EAAaD,EAAU,GACvBgD,GAAMpB,EAAOwC,MAAM,GACnBhB,QAAQC,IAAIL,IACZ,IAAMkC,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBrD,EAAUmB,IAGVA,GAAI0B,KAAI,SAACU,EAAMT,GACbrC,GAAOqC,GAASS,EAAK3D,IACvB,IACAc,GAAUD,GACZ,CAE4B,WAAX,QAAb,EAAAV,EAAOkD,EAAI,UAAE,aAAb,EAAevD,OACU,KAAvBK,EAAOkD,EAAI,GAAGtD,OAChBvB,EAAaD,EAAU,IACvBgD,GAAMpB,EAAOwC,MAAM,IACfe,OAAOL,EAAI,EAAG,GAClBjD,EAAUmB,IAGVA,GAAI0B,KAAI,SAACU,EAAMT,GACbrC,GAAOqC,GAASS,EAAK3D,IACvB,IACAc,GAAUD,IAGhB,CAKF,GAAU,UAAN2C,GACU,IAARF,EAEF,GAA4B,UAAxBjD,GAAQgD,EAAI,GAAGvD,KAAkB,CACnCpB,EAAaD,EAAU,GACvB8C,GAAMlB,GAAQsC,MAAM,GACpB,IAAMc,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBnD,GAAWiB,IAGXA,GAAI0B,KAAI,SAACU,EAAMT,GACbnC,GAAOmC,GAASS,EAAK3D,IACvB,IACAgB,GAAUD,GAEZ,KAC8B,KAAxBV,GAAQgD,EAAI,GAAGtD,OACjBrB,EAAaD,EAAU,IACvB8C,GAAMlB,GAAQsC,MAAM,IAChBe,OAAOL,EAAI,EAAG,GAClB/C,GAAWiB,IAGXA,GAAI0B,KAAI,SAACU,EAAMT,GACbnC,GAAOmC,GAASS,EAAK3D,IACvB,IACAgB,GAAUD,KAMlB,GAAU,UAANyC,GACU,IAARF,EAEF,GAA4B,UAAxBjD,GAAQgD,EAAI,GAAGvD,KAAkB,CACnCpB,EAAaD,EAAU,GACvB8C,GAAMlB,GAAQsC,MAAM,GACpB,IAAMc,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBnD,GAAWiB,IAGXA,GAAI0B,KAAI,SAACU,EAAMT,GACbnC,GAAOmC,GAASS,EAAK3D,IACvB,IACAgB,GAAUD,GAEZ,KAC8B,KAAxBV,GAAQgD,EAAI,GAAGtD,OACjBrB,EAAaD,EAAU,IACvB8C,GAAMlB,GAAQsC,MAAM,IAChBe,OAAOL,EAAI,EAAG,GAClB/C,GAAWiB,IAGXA,GAAI0B,KAAI,SAACU,EAAMT,GACbnC,GAAOmC,GAASS,EAAK3D,IACvB,IACAgB,GAAUD,KAMlB,GAAU,UAANyC,GACU,IAARF,EAEF,GAA4B,UAAxBjD,GAAQgD,EAAI,GAAGvD,KAAkB,CACnCpB,EAAaD,EAAU,GACvB8C,GAAMlB,GAAQsC,MAAM,GACpB,IAAMc,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBnD,GAAWiB,IAGXA,GAAI0B,KAAI,SAACU,EAAMT,GACbnC,GAAOmC,GAASS,EAAK3D,IACvB,IACAgB,GAAUD,GAEZ,KAC8B,KAAxBV,GAAQgD,EAAI,GAAGtD,OACjBrB,EAAaD,EAAU,IACvB8C,GAAMlB,GAAQsC,MAAM,IAChBe,OAAOL,EAAI,EAAG,GAClB/C,GAAWiB,IAGXA,GAAI0B,KAAI,SAACU,EAAMT,GACbnC,GAAOmC,GAASS,EAAK3D,IACvB,IACAgB,GAAUD,KAMlB,GAAU,UAANyC,GACU,IAARF,EAEF,GAA4B,UAAxBjD,GAAQgD,EAAI,GAAGvD,KAAkB,CACnCpB,EAAaD,EAAU,GACvB8C,GAAMlB,GAAQsC,MAAM,GACpB,IAAMc,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBnD,GAAWiB,IAGXA,GAAI0B,KAAI,SAACU,EAAMT,GACbnC,GAAOmC,GAASS,EAAK3D,IACvB,IACAgB,GAAUD,GAEZ,KAC8B,KAAxBV,GAAQgD,EAAI,GAAGtD,OACjBrB,EAAaD,EAAU,IACvB8C,GAAMlB,GAAQsC,MAAM,IAChBe,OAAOL,EAAI,EAAG,GAClB/C,GAAWiB,IAGXA,GAAI0B,KAAI,SAACU,EAAMT,GACbnC,GAAOmC,GAASS,EAAK3D,IACvB,IACAgB,GAAUD,KAMlB,GAAU,UAANyC,GACU,IAARF,EAEF,GAA4B,UAAxBjD,GAAQgD,EAAI,GAAGvD,KAAkB,CACnCpB,EAAaD,EAAU,GACvB8C,GAAMlB,GAAQsC,MAAM,GACpB,IAAMc,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBnD,GAAWiB,IAGXA,GAAI0B,KAAI,SAACU,EAAMT,GACbnC,GAAOmC,GAASS,EAAK3D,IACvB,IACAgB,GAAUD,GAEZ,KAC8B,KAAxBV,GAAQgD,EAAI,GAAGtD,OACjBrB,EAAaD,EAAU,IACvB8C,GAAMlB,GAAQsC,MAAM,IAChBe,OAAOL,EAAI,EAAG,GAClB/C,GAAWiB,IAGXA,GAAI0B,KAAI,SAACU,EAAMT,GACbnC,GAAOmC,GAASS,EAAK3D,IACvB,IACAgB,GAAUD,KAMlB,GAAU,UAANyC,GACU,IAARF,EAAW,CAAC,IAAD,IAEb,GAA6B,WAAX,QAAd,EAAAjD,GAAQgD,EAAI,UAAE,aAAd,EAAgBvD,MAAkB,CACpCpB,EAAaD,EAAU,GACvB8C,GAAMlB,GAAQsC,MAAM,GACpBhB,QAAQC,IAAIL,IACZ,IAAMkC,EAAS,CACb5D,KAAMJ,EACNK,KAAM,QACNC,KAAM,GACNC,MAAM,GAERuB,GAAImC,OAAOL,EAAI,EAAG,EAAGI,GACrBnD,GAAWiB,IAGXA,GAAI0B,KAAI,SAACU,EAAMT,GACbnC,GAAOmC,GAASS,EAAK3D,IACvB,IACAgB,GAAUD,GACZ,CAE6B,WAAX,QAAd,EAAAV,GAAQgD,EAAI,UAAE,aAAd,EAAgBvD,OACU,KAAxBO,GAAQgD,EAAI,GAAGtD,OACjBrB,EAAaD,EAAU,IACvB8C,GAAMlB,GAAQsC,MAAM,IAChBe,OAAOL,EAAI,EAAG,GAClB/C,GAAWiB,IAGXA,GAAI0B,KAAI,SAACU,EAAMT,GACbnC,GAAOmC,GAASS,EAAK3D,IACvB,IACAgB,GAAUD,IAGhB,CAGJ,EAEM6C,IACJ,SAAC,KAAM,CAACC,UAAU,EAAOC,SAAS,EAAMC,MAAM,UAAUC,UAAU,gCAA+B,UAC/F,iBAAKA,UAAU,SAAQ,WACrB,SAAC,KAAU,UAAC,iLACZ,SAAC,KAAW,CAACA,UAAU,cAAcC,OAAK,SAK1CC,GAAQ,yCAAG,iGAUd,OATD9C,GAASwC,IAEHO,EAAW,GAAGC,OAAOnE,EAAOE,EAAQE,IACpCgE,EAAahC,KAAKiC,UAAUH,GAE5BI,GAAQ,IAAIrF,MAAOgD,qBACnBuB,EAAS,CACb,UAAac,EACb,MAASF,GACV,UACKG,EAAAA,EAAAA,IAAQf,GAAQ,KAAD,EAgBrB,OAbMgB,EAAU,CAEdrG,KAAMD,EACNuG,MAAO,GACPxG,QAASqC,GACTvC,UAAWA,EACX2G,UAAW,GACXC,UAAW1F,KAAK2F,MAChBC,UAAW,SAKb,WACMC,EAAAA,EAAAA,IAAiBN,GAAQ,QAE/BO,YAAW,kBAAMC,IAAU,GAAE,KAC7B,4CACD,kBAhCa,mCAkCRC,IAAWC,EAAAA,EAAAA,MACXF,GAAW,WACZC,GAAS,iBACd,EAGA,OACE,iBAAKlB,UAAU,aAAY,WACzB,SAAC,KAAU,KACX,iBAAKA,UAAU,gDAA+C,WAC5D,SAAC,KAAS,KACV,gBAAKA,UAAU,wBAAuB,UAElC,SAAC,KAAU,CAACoB,IAAE,YACV,SAAC,EAAAC,SAAQ,CAACC,UAAU,SAAC,KAAQ,CAACvB,MAAM,YAAa,UAC/C,iCACE,wBAAI,+HACF,mBACA,SAAC,KAAI,WACH,SAAC,KAAI,CAACwB,IAAE,YACN,UAAC,KAAK,CAACvB,UAAU,OAAM,WACrB,SAAC,KAAW,UAAC,2FACb,UAAC,KAAS,YAEV,eAAGwB,MAAO,CAACzB,MAAO,QAAQ,UAAC,wFAAwBxD,GAAY,UAE7DU,IAAa,gBAAKuE,MAAO,CAACC,UAAU,UAAU,UAAC,SAAC,KAAQ,OAExD,iCACA,UAAC,KAAI,YACL,SAAC,KAAI,CAACF,IAAE,YACN,iBAAKC,MAAO,CAACE,MAAO,OAAQC,QAAS,QAAQ,WAC3C,UAAC,KAAM,CAACC,MAAM,SAAS5B,UAAU,cAAc6B,OAAK,EAACC,YAAU,EAACC,UAAQ,EAACP,MAAO,CAACE,MAAO,QAAQ,WAC9F,SAAC,IAAU,CAAC1B,UAAU,aAAY,UAChC,SAAC,KAAS,WACR,SAAC,KAAgB,CAACA,UAAU,cAAcwB,MAAO,CAACQ,MAAO,QAAQ,SAAC,kCAGtE,SAAC,KAAU,WACT,SAAC,KAAS,CAAC,QAAM,qBAAoB,UACnC,SAAC,KAAc,CAAChC,UAAU,cAAcwB,MAAO,CAACQ,MAAO,OAAQC,OAAO,GAAD,OAAK,GAAG5H,EAAQ,OAAM,UACzF,yBAAMoB,cAMd,UAAC,KAAM,CAACmG,MAAM,SAAS5B,UAAU,cAAc6B,OAAK,EAACC,YAAU,EAACC,UAAQ,aACtE,SAAC,IAAU,CAAC/B,UAAU,aAAY,UAChC,UAAC,KAAS,YAER,SAAC,KAAgB,CAACA,UAAU,cAAa,SAAC,oCAC1C,SAAC,KAAgB,CAACA,UAAU,cAAa,SAAC,0CAC1C,SAAC,KAAgB,CAACA,UAAU,cAAa,SAAC,+CAG9C,SAAC,KAAU,UACV/D,EAAMgD,KAAI,SAACU,EAAMT,GAAK,OACnB,UAAC,KAAS,CAAC,QAAM,qBAAoB,WACnC,SAAC,KAAc,CAACc,UAAU,cAAcwB,MAAO,CAACQ,MAAO,QAAQ,UAC7D,gBAAKR,MAAO,CAACG,QAAS,OAAQO,WAAY,SAAUC,OAAQ,WAAW,UACrE,gBAAKC,QAAS,kBAAI7C,GAAkB,GAAD,OAAII,EAAK7D,MAAQoD,EAAO,EAAE,EAAC,SAAGS,EAAK7D,YAW1E,SAAC,KAAc,CAAC0F,MAAO,CAACQ,MAAO,SAAS,UACtC,gBAAKR,MAAO,CAACG,QAAShC,EAAK5D,KAAO,QAAS,QAAQ,SAAE4D,EAAK5D,UAE5D,SAAC,KAAc,CAACiE,UAAU,cAAcwB,MAAO,CAACQ,MAAO,QAAQ,UAC7D,SAAC,KAAU,CACTK,GAAG,eACHC,QAAS3F,GAAOuC,GAChBqD,SAAU,kBAAInD,GAAaF,EAAO,EAAE,EACpCsD,SAAYjG,KAAgBoD,EAAK5D,MAAsB,KAAd4D,EAAK5D,MAAiBpB,EAASuE,GAAgB,WAAL,SAtB9CA,EAyB/B,eAOpB,SAAC,KAAI,CAACqC,IAAE,YACR,iBAAKC,MAAO,CAACE,MAAO,OAAQC,QAAS,QAAQ,WAC3C,UAAC,KAAM,CAACC,MAAM,SAAS5B,UAAU,cAAc6B,OAAK,EAACC,YAAU,EAACC,UAAQ,EAACP,MAAO,CAACE,MAAO,QAAQ,WAC9F,SAAC,IAAU,CAAC1B,UAAU,aAAY,UAChC,SAAC,KAAS,WACR,SAAC,KAAgB,CAACA,UAAU,cAAcwB,MAAO,CAACQ,MAAO,QAAQ,SAAC,kCAGtE,SAAC,KAAU,WACT,SAAC,KAAS,CAAC,QAAM,qBAAoB,UACnC,SAAC,KAAc,CAAChC,UAAU,cAAcwB,MAAO,CAACQ,MAAO,OAAQC,OAAO,GAAD,OAAK,GAAG1H,EAAS,OAAM,UAC1F,yBAAMkB,cAMd,UAAC,KAAM,CAACmG,MAAM,SAAS5B,UAAU,cAAc6B,OAAK,EAACC,YAAU,EAACC,UAAQ,aACtE,SAAC,IAAU,CAAC/B,UAAU,aAAY,UAChC,UAAC,KAAS,YAER,SAAC,KAAgB,CAACA,UAAU,cAAa,SAAC,oCAC1C,SAAC,KAAgB,CAACA,UAAU,cAAa,SAAC,0CAC1C,SAAC,KAAgB,CAACA,UAAU,cAAa,SAAC,+CAG9C,SAAC,KAAU,UACV7D,EAAO8C,KAAI,SAACU,EAAMT,GAAK,OACpB,UAAC,KAAS,CAAC,QAAM,qBAAoB,WACnC,SAAC,KAAc,CAACc,UAAU,cAAcwB,MAAO,CAACQ,MAAO,QAAQ,UAC7D,gBAAKR,MAAO,CAACG,QAAS,OAAQO,WAAY,SAAUC,OAAQ,WAAW,UACrE,gBAAKC,QAAS,kBAAI7C,GAAkB,GAAD,OAAII,EAAK7D,MAAQoD,EAAO,EAAE,EAAC,SAAGS,EAAK7D,YAW1E,SAAC,KAAc,CAAC0F,MAAO,CAACQ,MAAO,SAAS,UACtC,gBAAKR,MAAO,CAACG,QAAShC,EAAK5D,KAAO,QAAS,QAAQ,SAAE4D,EAAK5D,UAE5D,SAAC,KAAc,CAACiE,UAAU,cAAcwB,MAAO,CAACQ,MAAO,QAAQ,UAC7D,SAAC,KAAU,CACTK,GAAG,eACHC,QAASzF,GAAOqC,GAChBqD,SAAU,kBAAInD,GAAaF,EAAO,EAAE,EACpCsD,SAAYjG,KAAgBoD,EAAK5D,MAAsB,KAAd4D,EAAK5D,MAAiBlB,EAASqE,GAAgB,WAAL,SAtB9CA,EAyB/B,eAQpB,SAAC,KAAI,CAACqC,IAAE,YACR,iBAAKC,MAAO,CAACE,MAAO,OAAQC,QAAS,QAAQ,WAC3C,UAAC,KAAM,CAACC,MAAM,SAAS5B,UAAU,cAAc6B,OAAK,EAACC,YAAU,EAACC,UAAQ,EAACP,MAAO,CAACE,MAAO,QAAQ,WAC9F,SAAC,IAAU,CAAC1B,UAAU,aAAY,UAChC,SAAC,KAAS,WACR,SAAC,KAAgB,CAACA,UAAU,cAAcwB,MAAO,CAACQ,MAAO,QAAQ,SAAC,kCAGtE,SAAC,KAAU,WACT,SAAC,KAAS,CAAC,QAAM,qBAAoB,UACnC,SAAC,KAAc,CAAChC,UAAU,cAAcwB,MAAO,CAACQ,MAAO,OAAQC,OAAO,GAAD,OAAK,GAAGxH,EAAS,OAAM,UAC1F,yBAAMgB,cAMd,UAAC,KAAM,CAACmG,MAAM,SAAS5B,UAAU,cAAc6B,OAAK,EAACC,YAAU,EAACC,UAAQ,aACtE,SAAC,IAAU,CAAC/B,UAAU,aAAY,UAChC,UAAC,KAAS,YAER,SAAC,KAAgB,CAACA,UAAU,cAAa,SAAC,oCAC1C,SAAC,KAAgB,CAACA,UAAU,cAAa,SAAC,0CAC1C,SAAC,KAAgB,CAACA,UAAU,cAAa,SAAC,+CAG9C,SAAC,KAAU,UACV3D,GAAQ4C,KAAI,SAACU,EAAMT,GAAK,OACrB,UAAC,KAAS,CAAC,QAAM,qBAAoB,WACnC,SAAC,KAAc,CAACc,UAAU,cAAcwB,MAAO,CAACQ,MAAO,QAAQ,UAC7D,gBAAKR,MAAO,CAACG,QAAS,OAAQO,WAAY,SAAUC,OAAQ,WAAW,UACrE,gBAAKC,QAAS,kBAAI7C,GAAkB,GAAD,OAAII,EAAK7D,MAAQoD,EAAO,EAAE,EAAC,SAAGS,EAAK7D,YAG1E,SAAC,KAAc,CAAC0F,MAAO,CAACQ,MAAO,SAAS,UACtC,yBAAMrC,EAAK5D,UAEb,SAAC,KAAc,CAACiE,UAAU,cAAcwB,MAAO,CAACQ,MAAO,QAAQ,UAC7D,SAAC,KAAU,CACTK,GAAG,eACHC,QAASvF,GAAOmC,GAChBqD,SAAU,kBAAInD,GAAaF,EAAO,EAAE,EACpCsD,SAAYjG,KAAgBoD,EAAK5D,MAAsB,KAAd4D,EAAK5D,MAAiBhB,EAASmE,GAAgB,WAAL,SAd9CA,EAiB/B,kBAQxB,iBAAKsC,MAAO,CAACG,QAAS,OAAQc,eAAgB,gBAAiBC,UAAW,QAAQ,WAChF,gBAAKlB,MAAO,CAACmB,YAAa,QAAQ,UAChC,SAAC,KAAI,CAACC,GAAI,qBAAqB,UAC7B,SAAC,KAAO,CAAC7C,MAAM,YAAYyB,MAAO,CAACQ,MAAO,SAAS,SAAC,wCAGxD,4BACE,SAAC,KAAO,CAACjC,MAAM,UAAUqC,QAASlC,GAAUsB,MAAO,CAACQ,MAAO,SAAS,SAAC,4DAErE,SAAC,KAAQ,CAACa,IAAKxF,GAASyF,KAAM3F,GAAO4F,UAAU,yCAcvE,SAAC,KAAS,SAIlB,C","sources":["pages/DistributionWPlaner.js"],"sourcesContent":["import React, { Suspense, useState, useEffect, useRef } from 'react'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { \n  CContainer, \n  CSpinner, \n  CButton, \n  CTable, \n  CTableRow, \n  CTableHead,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CFormCheck,\n  CToast,\n  CToastBody,\n  CToaster,\n  CToastClose\n} from '@coreui/react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nimport { getProjectId, newPlan, getPlan, newDistributionW } from 'src/http/adminAPI';\n\nconst DistributionWPlaner = () => {\n  const location = useLocation()\n  const [distributionsWork, setDistributionsWork]= useState([]);\n\n  const projectId= location.state.project\n  const textDistr= location.state.text\n\n  const [countCol, setCountCol] = useState(6)\n  const [countCol2, setCountCol2] = useState(6)\n  const [countCol3, setCountCol3] = useState(6)\n\n  const [timeold1, setTimeold1] = useState([false, false, false, false, false, false, false])\n  const [timeold2, setTimeold2] = useState([false, false, false, false, false, false, false])\n  const [timeold3, setTimeold3] = useState([false, false, false, false, false, false, false])\n\n  const d = new Date();\n  const month = String(d.getMonth()+1).padStart(2, \"0\");\n\tconst day = String(d.getDate()).padStart(2, \"0\");\n  const date_str = `${day}.${month}`;\n  \n  d.setDate(d.getDate() + 1);\n  const month2 = String(d.getMonth()+1).padStart(2, \"0\");\n\tconst day2 = String(d.getDate()).padStart(2, \"0\");\n  const date_str2 = `${day2}.${month2}`;\n\n\n  const [dates, setDates] = useState([\n    {date: date_str, time: '06:00', proj: '', save: false},\n    {date: date_str, time: '07:00', proj: '', save: false},\n    {date: date_str, time: '08:00', proj: '', save: false},\n    {date: date_str, time: '09:00', proj: '', save: false},\n    {date: date_str, time: '10:00', proj: '', save: false},\n    {date: date_str, time: '11:00', proj: '', save: false},\n  ])\n\n\n  const [dates1, setDates1] = useState([\n    {date: date_str, time: '12:00', proj: '', save: false},\n    {date: date_str, time: '13:00', proj: '', save: false},\n    {date: date_str, time: '14:00', proj: '', save: false},\n    {date: date_str, time: '15:00', proj: '', save: false},\n    {date: date_str, time: '16:00', proj: '', save: false},\n    {date: date_str, time: '17:00', proj: '', save: false},\n  ])\n\n  const [dates11, setDates11] = useState([\n    {date: date_str, time: '18:00', proj: '', save: false},\n    {date: date_str, time: '19:00', proj: '', save: false},\n    {date: date_str, time: '20:00', proj: '', save: false},\n    {date: date_str, time: '21:00', proj: '', save: false},\n    {date: date_str, time: '22:00', proj: '', save: false},\n    {date: date_str, time: '23:00', proj: '', save: false},\n  ])\n\n//----------------------------------------------------------\n\n  const [projectName, setProjectName] = useState('')\n  const [projectView, setProjectView] = useState(false)\n  const [value1, setValue1] = useState([false, false, false, false, false, false, false])\n  const [value2, setValue2] = useState([false, false, false, false, false, false, false])\n  const [value3, setValue3] = useState([false, false, false, false, false, false, false])\n\n  const [showLoader, setShowLoader] = useState(true)\n\n  const [toast, addToast] = useState(0)\n  const toaster = useRef()\n\n  let arr = []\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let project = await getProjectId(projectId);\n      console.log('Текущий проект: ', project.properties.Name.title[0]?.plain_text)\n      setShowLoader(false)\n      setProjectName(project.properties.Name.title[0]?.plain_text)\n    }\n      fetchData();\n  },[])\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let plan = await getPlan(new Date().toLocaleDateString());\n      console.log(plan)\n\n      if (plan !== null) {\n        const planTimes = JSON.parse(plan.times)\n        console.log(\"planTimes: \", planTimes)\n\n        const ind1 = planTimes.findIndex(date => date.time === '12:00')\n        const ind2 = planTimes.findIndex(date => date.time === '18:00')\n\n        console.log(\"Индекс 1: \", ind1)\n        console.log(\"Индекс 2: \", ind2)\n\n        const times = planTimes.slice(0, ind1);\n        const times2 = planTimes.slice(ind1, ind2);\n        const times3 = planTimes.slice(ind2, planTimes.length);\n\n        const d = new Date() //Текущая дата и время\n        const chas = d.getHours();\n        //const min = String(d.getMinutes()).padStart(2, \"0\");\n\n        times.map((time, index)=> {\n          if (time.save) {\n            value1[index] = true\n            setValue1(value1)\n          }\n          console.log(\"time: \", chas)\n          if (time.time.split(\":\")[0] < chas) {\n            timeold1[index] = true\n            setTimeold1(timeold1)\n          }\n        })\n\n        times2.map((time, index)=> {\n          if (time.save) {\n            value2[index] = true\n            setValue2(value2)\n          }\n          if (time.time.split(\":\")[0] < chas) {\n            timeold2[index] = true\n            setTimeold2(timeold2)\n          }\n        })\n\n        times3.map((time, index)=> {\n          if (time.save) {\n            value3[index] = true\n            setValue3(value3)\n          }\n          if (time.time.split(\":\")[0] < chas) {\n            timeold3[index] = true\n            setTimeold3(timeold3)\n          }\n        })\n\n        setDates(times)\n        setDates1(times2)\n        setDates11(times3)\n\n        setCountCol(ind1)\n        setCountCol2(ind2 - ind1)\n        setCountCol3(planTimes.length - ind2)\n\n        \n        \n      }\n      \n    }\n      fetchData();\n  },[])\n\n//поставить галочку Статус\n  const changeStatus = (ind, tab) => {\n    if (tab === 1) {\n      if (dates[ind].save === true) {\n        console.log('true')\n        value1[ind] = false\n        dates[ind].save = false\n        dates[ind].proj = ''\n      } else {\n        console.log('false')\n        value1[ind] = true\n        dates[ind].proj = projectName //location.state.project\n        dates[ind].save = true\n      }\n\n      //console.log('true')\n\n      setDates(dates)\n      setValue1(value1) \n    }\n\n    if (tab === 2) {\n      if (value2[ind]) {\n        value2[ind] = false\n        dates1[ind].proj = ''\n        dates[ind].save = false\n      } else {\n        value2[ind] = true\n        dates1[ind].proj = projectName //location.state.project\n        dates1[ind].save = true\n      } \n\n      setDates1(dates1)\n      setValue2(value2)\n    }\n\n    if (tab === 3) {\n      if (value3[ind]) {\n        value3[ind] = false\n        dates11[ind].proj = ''\n        dates11[ind].save = false\n      } else {\n        value3[ind] = true\n        dates11[ind].proj = projectName //location.state.project\n        dates11[ind].save = true\n      } \n\n      setDates11(dates11)\n      setValue3(value3)\n    }\n    \n\n    projectView ? setProjectView(false) : setProjectView(true)\n  }\n\n  // ---------------------------------------------------------------------\n\n  {/* Показать Добавление времени */}\n  const clickShowEditTime = (t, ind, tab) => {\n\n    if (t === '06:00')  {\n      if (tab === 1) {\n        //обработка нажатия вкл/выкл\n        if (dates[ind+1].time === '07:00') {\n          setCountCol(countCol+1) //для высоту ячейки с датой\n          arr = dates.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '06:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value1[index] = item.save\n          })\n          setValue1(value1)\n\n        } else {\n          if (dates[ind+1].proj === ''){\n            setCountCol(countCol-1)\n            arr = dates.slice(0); \n            arr.splice(ind+1, 1);\n            setDates(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value1[index] = item.save\n            })\n            setValue1(value1)           \n          }        \n        }\n      }\n    }\n\n    if (t === '07:00')  {\n      if (tab === 1) {\n        //обработка нажатия вкл/выкл\n        if (tab === 1) {\n          //обработка нажатия вкл/выкл\n          if (dates[ind+1].time === '08:00') {\n            setCountCol(countCol+1) //для высоту ячейки с датой\n            arr = dates.slice(0); //копируем массив dates\n            const newObj = {\n              date: date_str,\n              time: '07:30',\n              proj: '',\n              save: false\n            }\n            arr.splice(ind+1, 0, newObj);\n            setDates(arr)\n  \n            //изменить чек\n            arr.map((item, index)=> {\n              value1[index] = item.save\n            })\n            setValue1(value1)\n                    \n          } else {\n            if (dates[ind+1].proj === ''){\n              setCountCol(countCol-1)\n              arr = dates.slice(0); \n              arr.splice(ind+1, 1);\n              setDates(arr)\n  \n              //изменить чек\n              arr.map((item, index)=> {\n                value1[index] = item.save\n              })\n              setValue1(value1)           \n            }        \n          }\n        }\n      }\n    }\n\n\n    if (t === '08:00')  {\n      if (tab === 1) {\n        //обработка нажатия вкл/выкл\n        if (tab === 1) {\n          //обработка нажатия вкл/выкл\n          if (dates[ind+1].time === '09:00') {\n            setCountCol(countCol+1) //для высоту ячейки с датой\n            arr = dates.slice(0); //копируем массив dates\n            const newObj = {\n              date: date_str,\n              time: '08:30',\n              proj: '',\n              save: false\n            }\n            arr.splice(ind+1, 0, newObj);\n            setDates(arr)\n  \n            //изменить чек\n            arr.map((item, index)=> {\n              value1[index] = item.save\n            })\n            setValue1(value1)\n                    \n          } else {\n            if (dates[ind+1].proj === ''){\n              setCountCol(countCol-1)\n              arr = dates.slice(0); \n              arr.splice(ind+1, 1);\n              setDates(arr)\n  \n              //изменить чек\n              arr.map((item, index)=> {\n                value1[index] = item.save\n              })\n              setValue1(value1)           \n            }        \n          }\n        }\n      }\n    }\n\n    if (t === '09:00')  {\n      if (tab === 1) {\n        //обработка нажатия вкл/выкл\n        if (tab === 1) {\n          //обработка нажатия вкл/выкл\n          if (dates[ind+1].time === '10:00') {\n            setCountCol(countCol+1) //для высоту ячейки с датой\n            arr = dates.slice(0); //копируем массив dates\n            const newObj = {\n              date: date_str,\n              time: '09:30',\n              proj: '',\n              save: false\n            }\n            arr.splice(ind+1, 0, newObj);\n            setDates(arr)\n  \n            //изменить чек\n            arr.map((item, index)=> {\n              value1[index] = item.save\n            })\n            setValue1(value1)\n                    \n          } else {\n            if (dates[ind+1].proj === ''){\n              setCountCol(countCol-1)\n              arr = dates.slice(0); \n              arr.splice(ind+1, 1);\n              setDates(arr)\n  \n              //изменить чек\n              arr.map((item, index)=> {\n                value1[index] = item.save\n              })\n              setValue1(value1)           \n            }        \n          }\n        }\n      }\n    }\n\n    if (t === '10:00')  {\n      if (tab === 1) {\n        //обработка нажатия вкл/выкл\n        if (tab === 1) {\n          //обработка нажатия вкл/выкл\n          if (dates[ind+1].time === '11:00') {\n            setCountCol(countCol+1) //для высоту ячейки с датой\n            arr = dates.slice(0); //копируем массив dates\n            const newObj = {\n              date: date_str,\n              time: '10:30',\n              proj: '',\n              save: false\n            }\n            arr.splice(ind+1, 0, newObj);\n            setDates(arr)\n  \n            //изменить чек\n            arr.map((item, index)=> {\n              value1[index] = item.save\n            })\n            setValue1(value1)\n                    \n          } else {\n            if (dates[ind+1].proj === ''){\n              setCountCol(countCol-1)\n              arr = dates.slice(0); \n              arr.splice(ind+1, 1);\n              setDates(arr)\n  \n              //изменить чек\n              arr.map((item, index)=> {\n                value1[index] = item.save\n              })\n              setValue1(value1)           \n            }        \n          }\n        }\n      }\n    }\n\n    if (t === '11:00')  {\n      if (tab === 1) {\n        //обработка нажатия вкл/выкл\n          if (dates[ind+1]?.time !== '11:30') {\n            setCountCol(countCol+1) //для высоту ячейки с датой\n            arr = dates.slice(0); //копируем массив dates\n            console.log(arr)\n            const newObj = {\n              date: date_str,\n              time: '11:30',\n              proj: '',\n              save: false\n            }\n            arr.splice(ind+1, 0, newObj);\n            setDates(arr)\n  \n            //изменить чек\n            arr.map((item, index)=> {\n              value1[index] = item.save\n            })\n            setValue1(value1)          \n          } \n          \n          if (dates[ind+1]?.time === '11:30') {\n            if (dates[ind+1].proj === ''){\n              setCountCol(countCol-1)\n              arr = dates.slice(0); \n              arr.splice(ind+1, 1);\n              setDates(arr)\n    \n              //изменить чек\n              arr.map((item, index)=> {\n                value1[index] = item.save\n              })\n              setValue1(value1)           \n            }        \n          }\n      }\n    }\n\n    //12:00 - 17:00\n\n    if (t === '12:00')  {\n      if (tab === 2) {\n        //обработка нажатия вкл/выкл\n        if (dates1[ind+1].time === '13:00') {\n          setCountCol2(countCol2+1) //для высоту ячейки с датой\n          arr = dates1.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '12:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates1(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value2[index] = item.save\n          })\n          setValue2(value2)\n\n        } else {\n          if (dates1[ind+1].proj === ''){\n            setCountCol2(countCol2-1)\n            arr = dates1.slice(0); \n            arr.splice(ind+1, 1);\n            setDates1(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value2[index] = item.save\n            })\n            setValue2(value2)           \n          }        \n        }\n      }\n    }\n\n    if (t === '13:00')  {\n      if (tab === 2) {\n        //обработка нажатия вкл/выкл\n        if (dates1[ind+1].time === '14:00') {\n          setCountCol2(countCol2+1) //для высоту ячейки с датой\n          arr = dates1.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '13:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates1(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value2[index] = item.save\n          })\n          setValue2(value2)\n\n        } else {\n          if (dates1[ind+1].proj === ''){\n            setCountCol2(countCol2-1)\n            arr = dates1.slice(0); \n            arr.splice(ind+1, 1);\n            setDates1(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value1[index] = item.save\n            })\n            setValue1(value1)           \n          }        \n        }\n      }\n    }\n\n    if (t === '14:00')  {\n      if (tab === 2) {\n        //обработка нажатия вкл/выкл\n        if (dates1[ind+1].time === '15:00') {\n          setCountCol2(countCol2+1) //для высоту ячейки с датой\n          arr = dates1.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '14:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates1(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value2[index] = item.save\n          })\n          setValue2(value2)\n\n        } else {\n          if (dates1[ind+1].proj === ''){\n            setCountCol2(countCol2-1)\n            arr = dates1.slice(0); \n            arr.splice(ind+1, 1);\n            setDates1(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value2[index] = item.save\n            })\n            setValue2(value2)           \n          }        \n        }\n      }\n    }\n\n    if (t === '15:00')  {\n      if (tab === 2) {\n        //обработка нажатия вкл/выкл\n        if (dates1[ind+1].time === '16:00') {\n          setCountCol2(countCol2+1) //для высоту ячейки с датой\n          arr = dates1.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '15:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates1(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value2[index] = item.save\n          })\n          setValue2(value2)\n\n        } else {\n          if (dates1[ind+1].proj === ''){\n            setCountCol2(countCol2-1)\n            arr = dates1.slice(0); \n            arr.splice(ind+1, 1);\n            setDates1(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value2[index] = item.save\n            })\n            setValue2(value2)           \n          }        \n        }\n      }\n    }\n\n    if (t === '16:00')  {\n      if (tab === 2) {\n        //обработка нажатия вкл/выкл\n        if (dates1[ind+1].time === '17:00') {\n          setCountCol2(countCol2+1) //для высоту ячейки с датой\n          arr = dates1.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '16:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates1(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value2[index] = item.save\n          })\n          setValue2(value2)\n\n        } else {\n          if (dates1[ind+1].proj === ''){\n            setCountCol2(countCol2-1)\n            arr = dates1.slice(0); \n            arr.splice(ind+1, 1);\n            setDates1(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value2[index] = item.save\n            })\n            setValue2(value2)           \n          }        \n        }\n      }\n    }\n\n    if (t === '17:00')  {\n      if (tab === 2) {\n        //обработка нажатия вкл/выкл\n        if (dates1[ind+1]?.time !== '17:30') {\n          setCountCol2(countCol2+1) //для высоту ячейки с датой\n          arr = dates1.slice(0); //копируем массив dates\n          console.log(arr)\n          const newObj = {\n            date: date_str,\n            time: '17:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates1(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value2[index] = item.save\n          })\n          setValue2(value2)          \n        } \n        \n        if (dates1[ind+1]?.time === '17:30') {\n          if (dates1[ind+1].proj === ''){\n            setCountCol2(countCol2-1)\n            arr = dates1.slice(0); \n            arr.splice(ind+1, 1);\n            setDates1(arr)\n  \n            //изменить чек\n            arr.map((item, index)=> {\n              value2[index] = item.save\n            })\n            setValue2(value2)           \n          }        \n        }\n      }\n    }\n\n//---------------18:00 - 23:00----------------------\n\n    if (t === '18:00')  {\n      if (tab === 3) {\n        //обработка нажатия вкл/выкл\n        if (dates11[ind+1].time === '19:00') {\n          setCountCol3(countCol3+1) //для высоту ячейки с датой\n          arr = dates11.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '18:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates11(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value3[index] = item.save\n          })\n          setValue3(value3)\n\n        } else {\n          if (dates11[ind+1].proj === ''){\n            setCountCol3(countCol3-1)\n            arr = dates11.slice(0); \n            arr.splice(ind+1, 1);\n            setDates11(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value3[index] = item.save\n            })\n            setValue3(value3)           \n          }        \n        }\n      }\n    }\n    \n    if (t === '19:00')  {\n      if (tab === 3) {\n        //обработка нажатия вкл/выкл\n        if (dates11[ind+1].time === '20:00') {\n          setCountCol3(countCol3+1) //для высоту ячейки с датой\n          arr = dates11.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '19:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates11(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value3[index] = item.save\n          })\n          setValue3(value3)\n\n        } else {\n          if (dates11[ind+1].proj === ''){\n            setCountCol3(countCol3-1)\n            arr = dates11.slice(0); \n            arr.splice(ind+1, 1);\n            setDates11(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value3[index] = item.save\n            })\n            setValue3(value3)           \n          }        \n        }\n      }\n    }\n    \n    if (t === '20:00')  {\n      if (tab === 3) {\n        //обработка нажатия вкл/выкл\n        if (dates11[ind+1].time === '21:00') {\n          setCountCol3(countCol3+1) //для высоту ячейки с датой\n          arr = dates11.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '20:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates11(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value3[index] = item.save\n          })\n          setValue3(value3)\n\n        } else {\n          if (dates11[ind+1].proj === ''){\n            setCountCol3(countCol3-1)\n            arr = dates11.slice(0); \n            arr.splice(ind+1, 1);\n            setDates11(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value3[index] = item.save\n            })\n            setValue3(value3)           \n          }        \n        }\n      }\n    }\n    \n    if (t === '21:00')  {\n      if (tab === 3) {\n        //обработка нажатия вкл/выкл\n        if (dates11[ind+1].time === '22:00') {\n          setCountCol3(countCol3+1) //для высоту ячейки с датой\n          arr = dates11.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '21:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates11(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value3[index] = item.save\n          })\n          setValue3(value3)\n\n        } else {\n          if (dates11[ind+1].proj === ''){\n            setCountCol3(countCol3-1)\n            arr = dates11.slice(0); \n            arr.splice(ind+1, 1);\n            setDates11(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value3[index] = item.save\n            })\n            setValue3(value3)           \n          }        \n        }\n      }\n    }\n    \n    if (t === '22:00')  {\n      if (tab === 3) {\n        //обработка нажатия вкл/выкл\n        if (dates11[ind+1].time === '23:00') {\n          setCountCol3(countCol3+1) //для высоту ячейки с датой\n          arr = dates11.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '22:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates11(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value3[index] = item.save\n          })\n          setValue3(value3)\n\n        } else {\n          if (dates11[ind+1].proj === ''){\n            setCountCol3(countCol3-1)\n            arr = dates11.slice(0); \n            arr.splice(ind+1, 1);\n            setDates11(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value3[index] = item.save\n            })\n            setValue3(value3)           \n          }        \n        }\n      }\n    }\n    \n    if (t === '23:00')  {\n      if (tab === 3) {\n        //обработка нажатия вкл/выкл\n        if (dates11[ind+1]?.time !== '23:30') {\n          setCountCol3(countCol3+1) //для высоту ячейки с датой\n          arr = dates11.slice(0); //копируем массив dates\n          console.log(arr)\n          const newObj = {\n            date: date_str,\n            time: '23:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates11(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value3[index] = item.save\n          })\n          setValue3(value3)          \n        } \n        \n        if (dates11[ind+1]?.time === '23:30') {\n          if (dates11[ind+1].proj === ''){\n            setCountCol3(countCol3-1)\n            arr = dates11.slice(0); \n            arr.splice(ind+1, 1);\n            setDates11(arr)\n  \n            //изменить чек\n            arr.map((item, index)=> {\n              value3[index] = item.save\n            })\n            setValue3(value3)           \n          }        \n        }\n      }\n    }\n\n  }\n\n  const exampleToast = (\n    <CToast autohide={false} visible={true} color=\"success\" className=\"text-white align-items-center\">\n      <div className=\"d-flex\">\n        <CToastBody>Планирование успешно сохранено!</CToastBody>\n        <CToastClose className=\"me-2 m-auto\" white />\n      </div>\n    </CToast>\n  )\n\n  const savePlan = async() => {\n    addToast(exampleToast)\n\n    const newArray = [].concat(dates, dates1, dates11);\n    const planer_str = JSON.stringify(newArray) \n\n    const d_str = new Date().toLocaleDateString()\n    const newObj = {\n      \"datestart\": d_str,\n      \"times\": planer_str\n    }\n    await newPlan(newObj);\n\n    //новая рассылка\n    const message = {\n      //name: 'Рассылка', \n      text: textDistr, \n      image: '', \n      project: projectName, \n      projectId: projectId, \n      receivers: \"\", \n      datestart: Date.now(), \n      delivered: 'false',        \n    }\n\n    //console.log(message)\n\n    //сохранение рассылки в базе данных\n    await newDistributionW(message)\n\n    setTimeout(() => backPage(), 1000);\n    //backPage()\n  }\n\n  const navigate = useNavigate();\n  const backPage = () => {\n       navigate('/distributionw');\n  } \n\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n                  <>\n                    <h2>Планирование рассылок</h2>\n                      <br />\n                      <CRow>\n                        <CCol xs>\n                          <CCard className=\"mb-4\">\n                            <CCardHeader>График рассылок</CCardHeader>\n                            <CCardBody>\n\n                            <p style={{color: '#fff'}}>Текущий проект: &laquo;{projectName}&raquo;</p>\n                            {\n                              showLoader ? <div style={{textAlign:'center'}}><CSpinner/></div>\n                              :\n                              <>\n                              <CRow>\n                              <CCol xs>                                   \n                                <div style={{float: \"left\", display: 'flex'}}>\n                                  <CTable align=\"middle\" className=\"mb-0 border\" hover responsive bordered style={{float: 'left'}}>   \n                                    <CTableHead className='table-dark' >\n                                      <CTableRow>\n                                        <CTableHeaderCell className=\"text-center\" style={{width: '70px'}}>Дата</CTableHeaderCell>\n                                      </CTableRow>\n                                    </CTableHead>\n                                    <CTableBody>\n                                      <CTableRow v-for=\"item in tableItems\">\n                                        <CTableDataCell className=\"text-center\" style={{width: '50px', height: `${41*countCol}px`}} >\n                                          <div>{date_str}</div> \n                                        </CTableDataCell>\n                                      </CTableRow>\n                                    </CTableBody>\n                                  </CTable>\n\n                                  <CTable align=\"middle\" className=\"mb-0 border\" hover responsive bordered>\n                                    <CTableHead className='table-dark' >\n                                      <CTableRow>\n                                        {/* <CTableHeaderCell className=\"text-center\">Дата</CTableHeaderCell> */}\n                                        <CTableHeaderCell className=\"text-center\">Время</CTableHeaderCell>\n                                        <CTableHeaderCell className=\"text-center\">Проект</CTableHeaderCell>   \n                                        <CTableHeaderCell className=\"text-center\">Статус</CTableHeaderCell>\n                                      </CTableRow>\n                                    </CTableHead>\n                                    <CTableBody>\n                                    {dates.map((item, index) => (\n                                        <CTableRow v-for=\"item in tableItems\" key={index}>   \n                                          <CTableDataCell className=\"text-center\" style={{width: '50px'}} >\n                                            <div style={{display: 'flex', alignItems: 'center', cursor: 'pointer'}}>\n                                              <div onClick={()=>clickShowEditTime(`${item.time}`, index, 1)} >{item.time}</div>\n                                              {/* <div style={{display: showEditTime ? \"block\" : \"none\", fontSize: '12px', paddingLeft: '8px'}}>\n                                                <div onClick={changeTimePlus}>\n                                                  &#9650;\n                                                </div>\n                                                <div onClick={changeTimeMinus}>          \t\n                                                  &#9660;\n                                                </div>\n                                              </div>    */}\n                                            </div>\n                                          </CTableDataCell>\n                                          <CTableDataCell style={{width: '180px'}}>\n                                            <div style={{display: item.proj ? \"block\": \"none\"}}>{item.proj}</div>\n                                          </CTableDataCell>\n                                          <CTableDataCell className=\"text-center\" style={{width: '50px'}}>\n                                            <CFormCheck \n                                              id=\"rowCheckTab1\"\n                                              checked={value1[index]}\n                                              onChange={()=>changeStatus(index, 1)}\n                                              disabled={((projectName === item.proj || item.proj === '') && !timeold1[index])  ? '' : 'disabled'}\n                                            />\n                                          </CTableDataCell>\n                                        </CTableRow>\n                                    ))}\n                                    </CTableBody>\n                                  </CTable>\n                                  </div>\n                                </CCol>\n{/* -----------------------------12:00----------------------------------------------------------------------------------- */}\n                                <CCol xs>                                   \n                                <div style={{float: \"left\", display: 'flex'}}>\n                                  <CTable align=\"middle\" className=\"mb-0 border\" hover responsive bordered style={{float: 'left'}}>   \n                                    <CTableHead className='table-dark' >\n                                      <CTableRow>\n                                        <CTableHeaderCell className=\"text-center\" style={{width: '70px'}}>Дата</CTableHeaderCell>\n                                      </CTableRow>\n                                    </CTableHead>\n                                    <CTableBody>\n                                      <CTableRow v-for=\"item in tableItems\">\n                                        <CTableDataCell className=\"text-center\" style={{width: '50px', height: `${41*countCol2}px`}} >\n                                          <div>{date_str}</div> \n                                        </CTableDataCell>\n                                      </CTableRow>\n                                    </CTableBody>\n                                  </CTable>\n\n                                  <CTable align=\"middle\" className=\"mb-0 border\" hover responsive bordered>\n                                    <CTableHead className='table-dark' >\n                                      <CTableRow>\n                                        {/* <CTableHeaderCell className=\"text-center\">Дата</CTableHeaderCell> */}\n                                        <CTableHeaderCell className=\"text-center\">Время</CTableHeaderCell>\n                                        <CTableHeaderCell className=\"text-center\">Проект</CTableHeaderCell>   \n                                        <CTableHeaderCell className=\"text-center\">Статус</CTableHeaderCell>\n                                      </CTableRow>\n                                    </CTableHead>\n                                    <CTableBody>\n                                    {dates1.map((item, index) => (\n                                        <CTableRow v-for=\"item in tableItems\" key={index}>   \n                                          <CTableDataCell className=\"text-center\" style={{width: '50px'}} >\n                                            <div style={{display: 'flex', alignItems: 'center', cursor: 'pointer'}}>\n                                              <div onClick={()=>clickShowEditTime(`${item.time}`, index, 2)} >{item.time}</div>\n                                              {/* <div style={{display: showEditTime ? \"block\" : \"none\", fontSize: '12px', paddingLeft: '8px'}}>\n                                                <div onClick={changeTimePlus}>\n                                                  &#9650;\n                                                </div>\n                                                <div onClick={changeTimeMinus}>          \t\n                                                  &#9660;\n                                                </div>\n                                              </div>    */}\n                                            </div>\n                                          </CTableDataCell>\n                                          <CTableDataCell style={{width: '180px'}}>\n                                            <div style={{display: item.proj ? \"block\": \"none\"}}>{item.proj}</div>\n                                          </CTableDataCell>\n                                          <CTableDataCell className=\"text-center\" style={{width: '50px'}}>\n                                            <CFormCheck \n                                              id=\"rowCheckTab2\"\n                                              checked={value2[index]}\n                                              onChange={()=>changeStatus(index, 2)}\n                                              disabled={((projectName === item.proj || item.proj === '') && !timeold2[index])  ? '' : 'disabled'}\n                                            />\n                                          </CTableDataCell>\n                                        </CTableRow>\n                                    ))}\n                                    </CTableBody>\n                                  </CTable>\n                                  </div>\n                                </CCol>\n\n{/* ----------------------------18:00------------------------------------------------------------------------------------ */}\n                                <CCol xs>\n                                <div style={{float: \"left\", display: 'flex'}}>\n                                  <CTable align=\"middle\" className=\"mb-0 border\" hover responsive bordered style={{float: 'left'}}>   \n                                    <CTableHead className='table-dark' >\n                                      <CTableRow>\n                                        <CTableHeaderCell className=\"text-center\" style={{width: '70px'}}>Дата</CTableHeaderCell>\n                                      </CTableRow>\n                                    </CTableHead>\n                                    <CTableBody>\n                                      <CTableRow v-for=\"item in tableItems\">\n                                        <CTableDataCell className=\"text-center\" style={{width: '70px', height: `${41*countCol3}px`}} >\n                                          <div>{date_str}</div> \n                                        </CTableDataCell>\n                                      </CTableRow>\n                                    </CTableBody>\n                                  </CTable>\n\n                                  <CTable align=\"middle\" className=\"mb-0 border\" hover responsive bordered>\n                                    <CTableHead className='table-dark' >\n                                      <CTableRow>\n                                        {/* <CTableHeaderCell className=\"text-center\">Дата</CTableHeaderCell> */}\n                                        <CTableHeaderCell className=\"text-center\">Время</CTableHeaderCell>\n                                        <CTableHeaderCell className=\"text-center\">Проект</CTableHeaderCell>   \n                                        <CTableHeaderCell className=\"text-center\">Статус</CTableHeaderCell>\n                                      </CTableRow>\n                                    </CTableHead>\n                                    <CTableBody>\n                                    {dates11.map((item, index) => (\n                                        <CTableRow v-for=\"item in tableItems\" key={index}>   \n                                          <CTableDataCell className=\"text-center\" style={{width: '50px'}} >\n                                            <div style={{display: 'flex', alignItems: 'center', cursor: 'pointer'}}>\n                                              <div onClick={()=>clickShowEditTime(`${item.time}`, index, 3)} >{item.time}</div>\n                                            </div>\n                                          </CTableDataCell>\n                                          <CTableDataCell style={{width: '180px'}}>\n                                            <div>{item.proj}</div>\n                                          </CTableDataCell>\n                                          <CTableDataCell className=\"text-center\" style={{width: '50px'}}>\n                                            <CFormCheck \n                                              id=\"rowCheckTab3\"\n                                              checked={value3[index]}\n                                              onChange={()=>changeStatus(index, 3)}\n                                              disabled={((projectName === item.proj || item.proj === '') && !timeold3[index])  ? '' : 'disabled'}\n                                            />\n                                          </CTableDataCell>\n                                        </CTableRow>\n                                    ))}\n                                    </CTableBody>\n                                  </CTable>\n                                  </div>\n                                </CCol>\n                              </CRow>\n\n                            <div style={{display: 'flex', justifyContent: 'space-between', marginTop: '15px'}}>\n                              <div style={{marginRight: '16px'}}>\n                                <Link to={'/distributionw_add'}>\n                                  <CButton color=\"secondary\" style={{width: '130px'}}>Назад</CButton>\n                                </Link>\n                              </div>\n                              <div>\n                                <CButton color=\"primary\" onClick={savePlan} style={{width: '130px'}}>Сохранить</CButton>\n                                {/* <CButton onClick={() => addToast(exampleToast)}>Send a toast</CButton> */}\n                                <CToaster ref={toaster} push={toast} placement=\"top-end\" />  \n                              </div>\n                            </div>\n                             </>  \n                            }                        \n                            </CCardBody>\n                          </CCard>\n                        </CCol>\n                      </CRow>\n                  </>\n                </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DistributionWPlaner\n"],"names":["location","useLocation","useState","projectId","state","project","textDistr","text","countCol","setCountCol","countCol2","setCountCol2","countCol3","setCountCol3","timeold1","setTimeold1","timeold2","setTimeold2","timeold3","setTimeold3","d","Date","month","String","getMonth","padStart","day","getDate","date_str","setDate","month2","day2","date","time","proj","save","dates","setDates","dates1","setDates1","dates11","setDates11","projectName","setProjectName","projectView","setProjectView","value1","setValue1","value2","setValue2","value3","setValue3","showLoader","setShowLoader","toast","addToast","toaster","useRef","arr","useEffect","fetchData","getProjectId","console","log","properties","Name","title","plain_text","getPlan","toLocaleDateString","plan","planTimes","JSON","parse","times","ind1","findIndex","ind2","slice","times2","times3","length","chas","getHours","map","index","split","changeStatus","ind","tab","clickShowEditTime","t","newObj","splice","item","exampleToast","autohide","visible","color","className","white","savePlan","newArray","concat","planer_str","stringify","d_str","newPlan","message","image","receivers","datestart","now","delivered","newDistributionW","setTimeout","backPage","navigate","useNavigate","lg","Suspense","fallback","xs","style","textAlign","float","display","align","hover","responsive","bordered","width","height","alignItems","cursor","onClick","id","checked","onChange","disabled","justifyContent","marginTop","marginRight","to","ref","push","placement"],"sourceRoot":""}