{"version":3,"file":"static/js/7459.cc4f3602.chunk.js","mappings":"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","sources":["pages/Renthub.js","views/widgets/WidgetsDropdown2.js"],"sourcesContent":["import React, { Suspense, useState, useEffect } from 'react'\nimport { CContainer, CSpinner } from '@coreui/react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport {\n  CAvatar,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilPeople,\n} from '@coreui/icons'\n\nimport avatar2 from 'src/assets/images/avatars/blank-avatar.png'\n\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\nimport { getAllMessages } from './../http/chatAPI.js'\n\nimport WidgetsDropdown from '../views/widgets/WidgetsDropdown2'\n\nconst Renthub = () => {\n\n  const { users: clients } = useUsersContext();\n  const { managers: zakazchiki } = useUsersContext();\n  const { projects: projs } = useUsersContext();\n  const { companys: comps } = useUsersContext();\n\n  const [contacts, setContacts]= useState([]);\n  const [projects, setProjects]= useState([]);\n  const [newClients, setNewClients]= useState([]);\n  const [oldClients, setOldClients]= useState([]);\n  const [loading, setLoading]= useState(true);\n\n  const chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID\n  const host = process.env.REACT_APP_API_URL\n  \n\n  //get Contacts\n  useEffect(() => {\n    const arrClients = []\n\n    const fetchData = async() => {\n\n      //let companys = await getCompanys()\n      console.log(\"companys (admin): \", comps)\n      console.log(\"clients (admin): \", clients)\n      console.log(\"managers (admin): \", zakazchiki)\n\n      let messages = await getAllMessages()\n      console.log(\"messages: \", messages)\n\n      clients.map((client, index) => {\n        \n        const managers = [...zakazchiki];\n        let userIndex = zakazchiki.findIndex((manager) => manager.tgID === client.chatId);  \n        const userObject = managers[userIndex];\n\n        let userObject2 = comps.find((company) => company.managers.find(man => man.id ===  userObject?.id)) //company.managers.map((manager) => manager.id === userObject?.id));  \n\n        const companyName = userObject2?.title\n        const companyCity = userObject2?.city ? userObject2?.city : ''\n\n        const lastDate = client.date.split('T')\n        const d = new Date(lastDate[0]);\n\t\t\t\tconst year = d.getFullYear();\n\t\t\t\tconst month = String(d.getMonth()+1).padStart(2, \"0\");\n\t\t\t\tconst day = String(d.getDate()).padStart(2, \"0\");\n\t\t\t\tconst newDateActivity = `${day}.${month}.${year}`\n\n        const newClientName = client.name.includes(\"|\") ? client.name.split(\" | \")[1] : client.name\n\n        const allMessages = messages.length //всего сообщений\n        const fromAdmin = messages.filter(el => el.senderId === chatAdminId);\n        const messagesUsers = messages.filter(el => el.senderId === client.chatId);\n\n        const arr = clients.filter(el => el.message === '');\n        setNewClients(arr)\n\n        const arr2 = clients.filter(el => el.message !== '');\n        setOldClients(arr2)\n        \n        const newObj = {\n          avatar: client.avatar,\n          user: {\n            name: newClientName,\n            new: true,\n            registered: '01.01.2023',\n          },\n          TG_ID: client.chatId,\n          city: companyCity,\n          company: companyName ? companyName : '',\n          phone: userObject?.phone,\n          usage: {\n            value: Math.round(messagesUsers.length * 100 / (allMessages - fromAdmin.length)), \n            period: '01.04.2023 - ' + newDateActivity,\n            color: 'success',\n          },\n          activity: newDateActivity,\n        }\n\n        arrClients.push(newObj)\n      })\n\n      const filteredClients = [...arrClients].filter((el) => el.TG_ID !== chatAdminId); //без админского пользователя  \n      const clientSort = [...filteredClients].sort((a, b) => {       \n\t\t\t\treturn b.usage.value-a.usage.value  //сортировка по убывающей активности  \n\t\t\t}) \n      console.log('userbots: ', clientSort)  \n      setContacts(clientSort)  \n      \n      setTimeout(() => {\n        setLoading(false)\n      }, \"6000\")\n    }\n    \n    fetchData();\n    \n  }, [clients]);\n//---------------------------------------------------------------------------------------------\n//get Projects\n  useEffect(() => {\n    const arrProjects = []\n\n    const fetchData = async () => {\n\t\t\t//let response = await getProjects();\n      projs.map(async (project) => {\n        const newProject = {\n\t\t\t\t\tid: project.id,\n\t\t\t\t\tname: project.title,\n\t\t\t\t\tstart: project.time_start,\n          created: project.time_created,\n          teh: project.teh,\n          manager: project.manager,\n          company: project.company,\n\t\t\t\t}\n        arrProjects.push(newProject)\n      })\n\n      setProjects(arrProjects) \n    }\n\n    fetchData();\n    \n  },[projs])\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n\n                <>\n                <WidgetsDropdown users={clients.length-1} projects={projects.length} companys={comps.length} />\n\n                <CRow>\n                  <CCol xs>\n                    <CCard className=\"mb-4\">\n                      <CCardHeader>Пользователи бота ({clients.length - 1})</CCardHeader>\n                      <CCardBody>\n                        <CRow>\n                          <CCol xs={12} md={6} xl={6}>\n                            <CRow>\n                              <CCol sm={6}>\n                                <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                                  <div className=\"text-medium-emphasis small\">Новые клиенты</div>\n                                  <div className=\"fs-5 fw-semibold\">{newClients.length}</div>\n                                </div>\n                              </CCol>\n                              <CCol sm={6}>\n                                <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                                  <div className=\"text-medium-emphasis small\">Постоянные клиенты</div>\n                                  <div className=\"fs-5 fw-semibold\">{oldClients.length-1}</div>\n                                </div>\n                              </CCol>\n                            </CRow>\n                          </CCol>\n\n                          <CCol xs={12} md={6} xl={6}>\n                            <CRow>\n                              <CCol sm={6}>\n                                <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                                  <div className=\"text-medium-emphasis small\">Просмотры</div>\n                                  <div className=\"fs-5 fw-semibold\">-</div>\n                                </div>\n                              </CCol>\n                              <CCol sm={6}>\n                                <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                                  <div className=\"text-medium-emphasis small\">Другое</div>\n                                  <div className=\"fs-5 fw-semibold\">-</div>\n                                </div>\n                              </CCol>\n                            </CRow>\n\n                            <div className=\"mb-5\"></div>\n\n                          </CCol>\n                        </CRow>\n\n                      {loading ? \n                                  \n                        <CSpinner/> :\n\n                        <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                          <CTableHead className='table-dark'>\n                            <CTableRow>\n                              <CTableHeaderCell style={{width: '30px'}}>№</CTableHeaderCell>\n                              <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>\n                                <CIcon icon={cilPeople} />\n                              </CTableHeaderCell>\n                              <CTableHeaderCell style={{width: '160px'}}>Пользователь</CTableHeaderCell>                             \n                              <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Организация</CTableHeaderCell>\n                              <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Телефон</CTableHeaderCell>\n                              <CTableHeaderCell className=\"text-center\" style={{width: '80px'}}>Город</CTableHeaderCell>\n                              <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>TG ID</CTableHeaderCell>\n                              <CTableHeaderCell style={{width: '100px'}}>Использование</CTableHeaderCell>\n                              <CTableHeaderCell style={{width: '100px'}}>Активность</CTableHeaderCell>\n                              {/* <CTableHeaderCell>Управление</CTableHeaderCell> */}\n                            </CTableRow>\n                          </CTableHead>\n                          <CTableBody>\n                            {contacts.map((item, index) => (\n                              <CTableRow v-for=\"item in tableItems\" key={index}>\n                                <CTableDataCell className=\"text-center\">\n                                  {index+1}\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\">\n                                    <CAvatar size=\"md\" src={item.avatar ? host + item.avatar : avatar2} alt='' />\n                                </CTableDataCell>\n                                <CTableDataCell>\n                                  <div>{item.user.name}</div>\n                                  <div className=\"small text-medium-emphasis\">\n                                    {/* <span>{item.user.new ? 'Новый' : 'Recurring'}</span> | Регистрация:{' '}\n                                    {item.user.registered} */}\n                                  </div>\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\">\n                                  {item.company ? <div>{item.company}</div> : ''}\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\">\n                                  <div>{item.phone}</div>\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\">\n                                  <div>{item.city}</div>\n                                </CTableDataCell>\n                                <CTableDataCell className=\"text-center\">\n                                  <div>{item.TG_ID}</div>\n                                </CTableDataCell>\n                                <CTableDataCell>\n                                  <div className=\"clearfix\">\n                                    <div className=\"float-start\">\n                                      <strong>{item.usage.value}%</strong>\n                                    </div>\n                                    <div className=\"float-end\">\n                                      <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                                    </div>\n                                  </div>\n                                  <CProgress thin color={item.usage.color} value={item.usage.value} />\n                                </CTableDataCell>\n                                <CTableDataCell>\n                                  <div className=\"small text-medium-emphasis\">Последний вход</div>\n                                  <strong>{item.activity}</strong>\n                                </CTableDataCell>\n                                {/* <CTableDataCell>\n                                  <CButton color=\"light\">\n                                    <img src={pencilIcon} alt='' width='15px'/>\n                                  </CButton>\n                                  &nbsp;\n                                  <CButton color=\"light\">\n                                    <img src={deleteIcon} alt='' width='10px' />\n                                  </CButton>\n                                </CTableDataCell> */}\n                              </CTableRow>\n                            ))}\n                          </CTableBody>\n                        </CTable>\n                      }\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                </CRow>\n              </>\n\n                </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Renthub\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nconst WidgetsDropdown2 = ({\n  users, \n  newUsers, \n  activeUsers, \n  delUsers, \n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              {users.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Всего\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      (users.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/users.length-5, \n                     0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {newUsers.length} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Новые\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/newUsers.length-5, \n                      0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {activeUsers.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Активные\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [activeUsers, 0, 0, 0, 0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              {delUsers.length}\n            </>\n          }\n          title={\"Удаленные\"}\n          action={\"\"}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', \n                  'Февраль', \n                  'Март', \n                  'Апрель', \n                  'Май', \n                  'Июнь', \n                  'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [delUsers, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown2\n"],"names":["Renthub","users","clients","useUsersContext","managers","zakazchiki","projects","projs","companys","comps","contacts","setContacts","useState","setProjects","newClients","setNewClients","oldClients","setOldClients","loading","setLoading","chatAdminId","process","useEffect","arrClients","async","console","log","messages","getAllMessages","map","client","index","userObject","findIndex","manager","tgID","chatId","userObject2","find","company","man","id","companyName","title","companyCity","city","lastDate","date","split","d","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","newDateActivity","concat","newClientName","name","includes","allMessages","length","fromAdmin","filter","el","senderId","messagesUsers","arr","message","arr2","newObj","avatar","user","new","registered","TG_ID","phone","usage","value","Math","round","period","color","activity","push","clientSort","sort","a","b","setTimeout","fetchData","arrProjects","newProject","project","start","time_start","created","time_created","teh","_jsxs","className","children","_jsx","AppSidebar","AppHeader","CContainer","lg","Suspense","fallback","CSpinner","_Fragment","WidgetsDropdown","CRow","CCol","xs","CCard","CCardHeader","CCardBody","md","xl","sm","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","style","width","CIcon","icon","cilPeople","CTableBody","item","CTableDataCell","CAvatar","size","src","avatar2","alt","CProgress","thin","AppFooter","_ref","newUsers","activeUsers","delUsers","CWidgetStatsA","action","chart","CChartLine","height","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","createDate","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","fill","CChartBar","barPercentage","drawTicks"],"sourceRoot":""}