{"version":3,"file":"static/js/5860.77f4e568.chunk.js","mappings":"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","sources":["data/specData.js","views/widgets/WidgetsDropdown3.js","views/widgets/WidgetsDropdown4.js","views/widgets/WidgetsDropdown5.js","pages/Admin.js","views/widgets/WidgetsDropdown.js"],"sourcesContent":["\nconst specData = [\n    {\n        id: 1,\n        name: 'Sound',\n        icon: 'Звук',\n        models: [\n            {id: 1, name: 'Звукорежиссер',},\n            {id: 2, name: 'RF-Менеджер',},\n            {id: 3, name: 'Backline',},\n            {id: 4, name: 'Roadie',},\n            {id: 5, name: 'Техник по звуку',},\n        ]\n    },\n    {\n        id: 2,\n        name: 'Light',\n        icon: 'Свет',\n        models: [\n            {id: 1, name: 'Художник по свету',},\n            {id: 2, name: 'Оператор световой пушки',},\n            {id: 3, name: 'Гафер',},\n            {id: 4, name: 'Техник по свету',},\n        ]\n    },\n    {\n        id: 3,\n        name: 'Video',\n        icon: 'Видео',\n        models: [\n            {id: 1, name: 'Инженер VMix',},\n            {id: 2, name: 'Инженер Resolume',},\n            {id: 3, name: 'Оператор Zoom',},\n            {id: 4, name: 'Оператор [cameraman]',},\n            {id: 5, name: 'Техник монтажа',},\n            {id: 6, name: 'IT-специалист',},\n            {id: 7, name: 'Оператор-постановщик',},\n            {id: 8, name: 'Оператор [Cameraman]',},\n        ]\n    },\n    {\n        id: 4,\n        name: 'Riggers',\n        icon: 'Риггеры',\n        models: [\n            {id: 1, name: 'Верхний Риггер',},\n            {id: 2, name: 'Нижний Риггер',},\n        ]\n    },\n    {\n        id: 5,\n        name: 'Stagehands',\n        icon: 'Помощники \\/ Грузчики',\n        models: [\n            {id: 1, name: 'Помощник \\/ Грузчик',},\n            {id: 2, name: 'Промоутер',},\n        ]\n    },\n    {\n        id: 6,\n        name: 'Stage Ground',\n        icon: 'Граунд',\n        models: [\n            {id: 1, name: 'Риггер [Ground]',},\n            {id: 2, name: 'Монтажник [Ground]',},\n            {id: 3, name: 'Декоратор',},\n        ]\n    },\n    {\n        id: 7,\n        name: 'Trucks',\n        icon: 'Водители',\n        models: [\n            {id: 1, name: 'C личным ТС [B\\/C]',},\n            {id: 2, name: 'Без личного ТС [B\\/C]',},\n            {id: 3, name: 'С гидролифтом',},\n            {id: 4, name: 'Без гидролифта',},\n        ]\n    },\n    {\n        id: 8,\n        name: 'Production',\n        icon: 'Технический продакшн',\n        models: [\n            {id: 1, name: 'Мероприятие под ключ',},\n            {id: 2, name: 'Отдельные технические задачи',},\n        ]\n    },\n    {\n        id: 9,\n        name: 'Photo',\n        icon: 'Фото',\n        models: [\n            {id: 1, name: 'Свадебная съемка',},\n            {id: 2, name: 'Репортажная съемка',},\n            {id: 3, name: 'Портретная съемка',},\n            {id: 4, name: 'Предметная съемка',},\n            {id: 5, name: 'Документальная съемка',},\n        ]\n    },\n    {\n        id: 10,\n        name: 'Catering',\n        icon: 'Кейтеринг',\n        models: [\n            {id: 1, name: 'Официант',},\n            {id: 2, name: 'Бармен',},\n            {id: 3, name: 'Повар',},\n            {id: 4, name: 'Хостес',},\n            {id: 5, name: 'Банкетный менеджер',},\n        ]\n    },   \n    {\n        id: 11,\n        name: 'Party',\n        icon: 'Артисты',\n        models: [\n            {id: 1, name: 'Кавер-бенд',},\n            {id: 2, name: 'Танцевальный коллектив',},\n            {id: 3, name: 'Диджей',},\n            {id: 4, name: 'Ведущий',},\n            {id: 5, name: 'Певец \\/ певица',},\n            {id: 6, name: 'Артист оригинального жанра',},\n            {id: 7, name: 'Go-Go',},\n        ]\n    },\n    {\n        id: 12,\n        name: 'Games',\n        icon: 'Игромания',\n        models: [\n            {id: 1, name: 'Квесты',},\n            {id: 2, name: 'Квизы',},\n            {id: 3, name: 'Аниматоры',},\n            {id: 4, name: 'Настольные игры \\/ игровые автоматы',},\n            {id: 5, name: 'Пневмокостюмы \\/ ростовые куклы',},\n            {id: 6, name: 'Активности \\/ аттракционы',},\n        ]\n    },\n    {\n        id: 13,\n        name: 'NoTag',\n        icon: 'Вне категории',\n        models: [\n            {id: 1, name: 'Вне категории',},\n        ]\n    },\n];\n\nexport default specData;","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nimport Sound from \"./../../assets/images/spec/1_sound.png\";\nimport Video from \"./../../assets/images/spec/5_video.png\";\nimport Light from \"./../../assets/images/spec/6_light.png\";\nimport Stagehands from \"./../../assets/images/spec/7_stagehands.png\";\n\n\nconst WidgetsDropdown3 = ({\n  soundUsers, \n  lightUsers, \n  videoUsers, \n  stagehandsUsers, \n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"primary\"\n          value={\n            <>\n              {soundUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Звук\"}\n          action={<img src={Sound} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [soundUsers, 0, 0, 0, 0, 0, 0], //min: -5, max: 89,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -10,\n                    max: 90,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"info\"\n          value={\n            <>\n              {lightUsers} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Свет\"}\n          action={<img src={Light} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [lightUsers, 0, 0, 0, 0, 0, 0], //min: -5 max: 39\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -10,\n                    max: 90,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"warning\"\n          value={\n            <>\n              {videoUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Видео\"}\n          action={<img src={Video} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [videoUsers, 0, 0, 0, 0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"danger\"\n          value={\n            <>\n              {stagehandsUsers}\n            </>\n          }\n          title={\"Помощники\"}\n          action={<img src={Stagehands} alt='' width={35}/>}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', \n                  'Февраль', \n                  'Март', \n                  'Апрель', \n                  'Май', \n                  'Июнь', \n                  'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [stagehandsUsers, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown3\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nimport Catering from \"./../../assets/images/spec/9_catering.png\";\nimport Photo from \"./../../assets/images/spec/10_photo.png\";\nimport Party from \"./../../assets/images/spec/11_party.png\";\nimport Games from \"./../../assets/images/spec/11_party.png\";\n\nconst WidgetsDropdown4 = ({\n  cateringUsers,\n  photoUsers,\n  partyUsers,\n  gamesUsers,\n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"primary\"\n          value={\n            <>\n              {photoUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Фото\"}\n          action={<img src={Photo} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [photoUsers, 0, 0, 0, 0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -10,\n                    max: 90,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"info\"\n          value={\n            <>\n              {cateringUsers} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Кейтегинг\"}\n          action={<img src={Catering} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [cateringUsers, 0, 0, 0, 0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -10,\n                    max: 90,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"warning\"\n          value={\n            <>\n              {partyUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Артисты\"}\n          action={<img src={Party} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [partyUsers, 0, 0, 0, 0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"danger\"\n          value={\n            <>\n              {gamesUsers}\n            </>\n          }\n          title={\"Игры\"}\n          action={<img src={Games} alt='' width={35}/>}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [gamesUsers, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown4\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nimport Riggers from \"./../../assets/images/spec/2_riggers.png\";\nimport Production from \"./../../assets/images/spec/3_production.png\";\nimport StageGround from \"./../../assets/images/spec/4_stage_ground.png\";\nimport Trucks from \"./../../assets/images/spec/8_trucks.png\";\n\nconst WidgetsDropdown5 = ({\n  riggerUsers,\n  productionUsers,\n  stagegroundUsers,\n  trucksUsers,\n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"primary\"\n          value={\n            <>\n              {riggerUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Риггер\"}\n          action={<img src={Riggers} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [riggerUsers, 0, 0, 0, 0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -10,\n                    max: 90,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"info\"\n          value={\n            <>\n              {productionUsers} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Продакшн\"}\n          action={<img src={Production} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [productionUsers, 0, 0, 0, 0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -10,\n                    max: 90,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"warning\"\n          value={\n            <>\n              {stagegroundUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Граунд\"}\n          action={<img src={StageGround} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [stagegroundUsers, 0, 0, 0, 0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"danger\"\n          value={\n            <>\n              {trucksUsers}\n            </>\n          }\n          title={\"Водители\"}\n          action={<img src={Trucks} alt='' width={35}/>}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Кол-во специалистов',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [trucksUsers, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown5\n","import React, { Suspense, useState, useEffect, useRef } from 'react'\nimport { CContainer, CSpinner } from '@coreui/react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport {\n  CAvatar,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CFormInput,\n  CButton,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilPeople, cilX,\n} from '@coreui/icons'\n\nimport {\n  CWidgetStatsA,\n} from '@coreui/react'\n\nimport avatar2 from 'src/assets/images/avatars/blank-avatar.png'\n\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\nimport { getAllMessages } from './../http/chatAPI.js'\n\nimport WidgetsDropdown from '../views/widgets/WidgetsDropdown'\nimport WidgetsDropdown2 from '../views/widgets/WidgetsDropdown2'\nimport WidgetsDropdown3 from '../views/widgets/WidgetsDropdown3'\nimport WidgetsDropdown4 from '../views/widgets/WidgetsDropdown4'\nimport WidgetsDropdown5 from '../views/widgets/WidgetsDropdown5'\n\nimport InputMask from 'react-input-mask';\n\nimport Chart from './../components/Chart'\nimport specData from 'src/data/specData'\n\nconst Admin = () => {\n\n  const grafik = useRef(null);\n\n  const { users: clients } = useUsersContext();\n  const { managers: zakazchiki } = useUsersContext();\n  const { projects: projs } = useUsersContext();\n  const { companys: comps } = useUsersContext();\n  const { userWorkers: specusers } = useUsersContext();\n  const { workers } = useUsersContext();\n\n  const [contacts, setContacts]= useState([]);\n  const [projects, setProjects]= useState([]);\n  const [newClients, setNewClients]= useState([]);\n  const [oldClients, setOldClients]= useState([]);\n  const [loading, setLoading]= useState(true);\n  const [loading2, setLoading2]= useState(true);\n  const [sortWorkers, setSortWorkers]= useState([]);\n  \n  const [newWorkers, setNewWorkers]= useState([]);\n  const [activWorkers, setActivWorkers]= useState([]);\n\n  const [catCount, setCatCount] = useState([])\n\n  const [dayWorkers, setDayWorkers]= useState([]);\n  const [weekWorkers, setWeekWorkers]= useState([]);\n  const [monthWorkers, setMonthWorkers]= useState([]);\n  const [yearWorkers, setYearWorkers]= useState([]);\n\n  const [showRenthub, setShowRenthub]= useState(false);\n  const [showWorkhub, setShowWorkhub]= useState(true);\n\n  const [activeKey, setActiveKey] = useState(2)\n\n  const [showWidget, setShowWidget] = useState(false)\n  const [showWidget2, setShowWidget2] = useState(true)\n  const [showWidget3, setShowWidget3] = useState(false)\n  const [showWidget4, setShowWidget4] = useState(false)\n  const [showWidget5, setShowWidget5] = useState(false)\n\n  const [showCharts, setShowCharts]= useState(false);\n  const [showCharts2, setShowCharts2]= useState(false);\n  const [showCharts3, setShowCharts3]= useState(false);\n  const [showCharts4, setShowCharts4]= useState(false);\n  const [showCharts5, setShowCharts5]= useState(false);\n\n  const [showNick, setShowNick]= useState(false);\n\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const [tabhub, setTabhub]= useState('');\n\n  const [periodDate1, setPeriodDate1] = useState(\"\")\n  const [periodDate2, setPeriodDate2] = useState(\"\")\n\n  const [timerId, setTimerId] = useState()\n\n  const [widthGrafik, setWdthGrafik] = useState(0);\n\n  const [text, setText]= useState(\"\");\n\n  const chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID\n  const host = process.env.REACT_APP_API_URL\n\n  \n  useEffect(() => {\n    //set tab\n    setTabhub('Workhub')\n\n    //console.log(\"specusers: \", specusers)\n\n    setTimeout(()=> {\n      setShowNick(!showNick)\n    }, 10000)\n  })\n\n  useEffect(() => {\n    //get width\n    console.log('width', grafik.current ? grafik.current.offsetWidth : 0);\n    setWdthGrafik(grafik.current ? grafik.current.offsetWidth - 100 : 0)\n  }, [grafik.current]);\n\n\n  //поиск\n  useEffect(() => {\n\t\tconst filteredData = workers.filter(user=> (user.userfamily+user.username+user.chatId)?.toLowerCase().includes(text.toLowerCase()));\n    setSortWorkers(filteredData);      \n  }, [text]);\n\n\n  //get filter workers\n  useEffect(() => {\n    setSortWorkers(workers)\n\n    const currentDate = new Date()\n    const currentMonth = currentDate.getMonth()\n\n    //массив новых пользователей за текущий месяц\n    const arr1 = workers.filter(item => new Date(item.createDate).getMonth() === currentMonth)\n    setNewWorkers(arr1)\n\n    //массив активных пользователей за текущий месяц\n    const arr2 = workers.filter(item => new Date(item.date).getMonth() === currentMonth) //specusers\n    setActivWorkers(arr2)\n\n  }, [workers])\n\n  //get Contacts\n  useEffect(() => {\n    const arrClients = []\n\n    const fetchData = async() => {\n\n      console.log(\"workers (admin): \", workers)\n      //console.log(\"workersbot (admin): \", specusers.find((user) => user.chatId === '805436270').username)\n      setLoading2(false)\n\n      let messages = await getAllMessages()\n\n      clients.map((client, index) => {\n        \n        const managers = [...zakazchiki];\n        let userIndex = zakazchiki.findIndex((manager) => manager.tgID === client.chatId);  \n        const userObject = managers[userIndex];\n\n        let userObject2 = comps.find((company) => company.managers.find(man => man.id ===  userObject?.id)) //company.managers.map((manager) => manager.id === userObject?.id));  \n\n        const companyName = userObject2?.title\n        const companyCity = userObject2?.city ? userObject2?.city : ''\n\n        const lastDate = client.date ? client.date.split('T') : ''\n        const d = new Date(lastDate[0]);\n\t\t\t\tconst year = d.getFullYear();\n\t\t\t\tconst month = String(d.getMonth()+1).padStart(2, \"0\");\n\t\t\t\tconst day = String(d.getDate()).padStart(2, \"0\");\n\t\t\t\tconst newDateActivity = `${day}.${month}.${year}`\n\n        const newClientName = client.name.includes(\"|\") ? client.name.split(\" | \")[1] : client.name\n\n        const allMessages = messages.length //всего сообщений\n        const fromAdmin = messages.filter(el => el.senderId === chatAdminId);\n        const messagesUsers = messages.filter(el => el.senderId === client.chatId);\n\n        const arr = clients.filter(el => el.message === '');\n        setNewClients(arr)\n\n        const arr2 = clients.filter(el => el.message !== '');\n        setOldClients(arr2)\n        \n        const newObj = {\n          avatar: client.avatar,\n          user: {\n            name: newClientName,\n            new: true,\n            registered: '01.01.2023',\n          },\n          TG_ID: client.chatId,\n          city: companyCity,\n          company: companyName ? companyName : '',\n          phone: userObject?.phone,\n          usage: {\n            value: Math.round(messagesUsers.length * 100 / (allMessages - fromAdmin.length)), \n            period: '01.04.2023 - ' + newDateActivity,\n            color: 'success',\n          },\n          activity: newDateActivity,\n        }\n\n        arrClients.push(newObj)\n      })\n\n      const filteredClients = [...arrClients].filter((el) => el.TG_ID !== chatAdminId); //без админского пользователя  \n      const clientSort = [...filteredClients].sort((a, b) => {       \n\t\t\t\treturn b.usage.value-a.usage.value  //сортировка по убывающей активности  \n\t\t\t}) \n      console.log('userbots: ', clientSort)  \n      setContacts(clientSort)  \n      \n      setTimeout(() => {\n        setLoading(false)\n      }, \"6000\")\n    }\n    \n    fetchData();\n    \n  }, [clients, workers]);\n//---------------------------------------------------------------------------------------------\n//get Projects\n  useEffect(() => {\n    const arrProjects = []\n\n    const fetchData = async () => {\n\t\t\t//let response = await getProjects();\n      projs.map(async (project) => {\n        const newProject = {\n\t\t\t\t\tid: project.id,\n\t\t\t\t\tname: project.title,\n\t\t\t\t\tstart: project.time_start,\n          created: project.time_created,\n          teh: project.teh,\n          manager: project.manager,\n          company: project.company,\n\t\t\t\t}\n        arrProjects.push(newProject)\n      })\n\n      setProjects(arrProjects) \n    }\n\n    fetchData();\n    \n  },[projs])\n\n  const openHub = (hub) => {\n    console.log(hub)\n    if (hub === 'Workhub') { \n      setShowWorkhub(true)\n      setShowRenthub(false)\n      setActiveKey(2)\n      setShowWidget(false)\n      setShowWidget2(true)\n      setTabhub('Workhub')\n    }\n    if (hub === 'Renthub') { \n      setShowWorkhub(false)\n      setShowRenthub(true)\n      setActiveKey(1)\n      setShowWidget(true)\n      setShowWidget2(false)\n      setTabhub('Renthub')\n    }\n  }\n\n  //нажатия на кнопки\n  const showBlock = (ind) => {\n    switch (ind) {\n\n      //за сутки\n      case 1:{\n        console.log(\"Фильтр за сутки: \", ind)\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n\n        //открыть стартовые плашки\n        setShowWidget3(true)\n\n        let i = 0\n        setTimerId(setInterval(() => {\n          if (i % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(true)\n            setShowWidget5(false)\n          }\n          if ((i+1) % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true)\n          }\n          if ((i+2) % 3 === 0) {\n            setShowWidget3(true)\n            setShowWidget4(false)\n            setShowWidget5(false)\n          }\n          i++\n        }, 3000));\n\n        setShowCharts(true)\n        setShowCharts2(false)\n        setShowCharts3(false)\n        setShowCharts4(false)\n        setShowCharts5(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за сутки\n        const carrentDate = Date.now()\n        //console.log(\"carrentDate: \", carrentDate)\n        const needDate = carrentDate - 86400000\n        //console.log(\"needDate: \", needDate)\n        \n        \n        let arr = workers.filter(item => new Date(item.createDate).getTime() > needDate);\n\n        let categories = []\n        let count_cat\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.name)) {\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n\n        setSortWorkers(arr)\n        \n        let days1 = []\n        let countSpec = 0\n\n        arr.map(item => console.log(\"arr: \", new Date(item.createDate)));\n\n        for (let i=0; i<=23; i++) {\n\n          const arrSpec = arr.filter(item => i === new Date(item.createDate).getHours());\n          countSpec = arrSpec.length\n          \n          const newObj= {\n            name: i<10 ? '0'+ i + ':00' : ''+ i + ':00', \n            value: countSpec,\n          }\n\n          days1.push(newObj)\n        }       \n\n        setDayWorkers(days1)\n\n        break;\n      }\n\n      //за неделю\n      case 2:{\n        clearTimeout(timerId);\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n\n        //открыть стартовые плашки\n        setShowWidget3(true)\n\n        let i = 0\n        setTimerId(setInterval(() => {\n          if (i % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(true)\n            setShowWidget5(false)\n          }\n          if ((i+1) % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true)\n          }\n          if ((i+2) % 3 === 0) {\n            setShowWidget3(true)\n            setShowWidget4(false)\n            setShowWidget5(false)\n          }\n          i++\n        }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(true)\n        setShowCharts3(false)\n        setShowCharts4(false)\n        setShowCharts5(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за неделю\n        const carrentDate = Date.now()\n        //console.log(\"carrentDate: \", carrentDate)\n        const needDate = carrentDate - 604800000\n        //console.log(\"needDate: \", needDate)\n        \n        \n        let arr = workers.filter(item => new Date(item.createDate).getTime() > needDate);\n        let categories = []\n        let count_cat\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.name)) {\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n        setSortWorkers(arr)\n\n        let week2 = []\n        let nameDay = ''\n        let countSpec = 0\n        for (let i=1; i<=7; i++) {\n          if (i===1) {\n            nameDay = 'Пн'\n            //let date = new Date(item.createDate);\n            //let dayWeek = [7, 1, 2, 3, 4, 5, 6][date.getDay()];\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===2) {\n            nameDay = 'Вт'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===3) {\n            nameDay = 'Ср'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===4) {\n            nameDay = 'Чт'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===5) {\n            nameDay = 'Пт'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===6) {\n            nameDay = 'Сб'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===7) {\n            nameDay = 'Вс'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]);\n            countSpec = arrSpec.length\n          }\n\n          const newObj= {\n                name: nameDay, \n                value: countSpec,\n              }\n          week2.push(newObj)\n        }  \n        console.log(\"week: \", week2)     \n        setWeekWorkers(week2)\n        break;\n      }\n\n      //за месяц\n      case 3:{\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n\n        //открыть стартовые плашки\n        setShowWidget3(true)\n        let i = 0\n        setTimerId(setInterval(() => {\n          if (i % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(true)\n            setShowWidget5(false)\n          }\n          if ((i+1) % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true)\n          }\n          if ((i+2) % 3 === 0) {\n            setShowWidget3(true)\n            setShowWidget4(false)\n            setShowWidget5(false)\n          }\n          i++\n        }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(false)\n        setShowCharts3(true)\n        setShowCharts4(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за месяц\n        const carrentDate = Date.now()\n        console.log(\"carrentDate: \", carrentDate)\n        const needDate = carrentDate - 2592000000\n        console.log(\"needDate: \", new Date(needDate))\n        \n        \n        let arr = workers.filter(item => new Date(item.createDate).getTime() > needDate);\n        let categories = []\n        let count_cat\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.name)) {\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n        setSortWorkers(arr)\n        //setMonthWorkers(arr)\n\n        let countSpec = 0\n        let month3 = []\n\n        for (let i=1; i<=31; i++) {\n          const arrSpec = arr.filter(item => i === new Date(item.createDate).getDate());\n          countSpec = arrSpec.length\n          const newObj= {\n            name: i<10 ? '0'+ i : ''+ i, \n            value: countSpec,\n          }\n          month3.push(newObj)\n        }  \n        console.log(\"month3: \", month3)     \n        setMonthWorkers(month3)\n        break;\n      }\n\n      //за год\n      case 4:{\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n\n        //открыть стартовые плашки\n        setShowWidget3(true)\n        let i = 0\n        setTimerId(setInterval(() => {\n          if (i % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(true)\n            setShowWidget5(false)\n          }\n          if ((i+1) % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true)\n          }\n          if ((i+2) % 3 === 0) {\n            setShowWidget3(true)\n            setShowWidget4(false)\n            setShowWidget5(false)\n          }\n          i++\n        }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(false)\n        setShowCharts3(false)\n        setShowCharts4(true)\n        setShowCharts5(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за год\n        let arr = workers.filter(item => item.createDate.split('T')[0].split('-')[0] === '2024');\n        let categories = []\n        let count_cat\n\n        console.log(\"arr year: \", arr)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.name)) {\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n        setSortWorkers(arr)\n\n        arr.map((item)=>console.log(\"month: \", new Date(item.createDate).getMonth()+1))\n\n        //график\n        let year4 = []\n        let nameMonth = ''\n        let countSpec = 0\n        for (let i=1; i<=12; i++) {\n          if (i===1) {\n            nameMonth = 'Январь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===2) {\n            nameMonth = 'Февраль'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===3) {\n            nameMonth = 'Март'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===4) {\n            nameMonth = 'Апрель'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===5) {\n            nameMonth = 'Май'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===6) {\n            nameMonth = 'Июнь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===7) {\n            nameMonth = 'Июль'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===8) {\n            nameMonth = 'Август'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===9) {\n            nameMonth = 'Сентябрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===10) {\n            nameMonth = 'Октябрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===11) {\n            nameMonth = 'Ноябрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===12) {\n            nameMonth = 'Декабрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          \n          const newObj= {\n                name: nameMonth, \n                value: countSpec,\n              }\n              year4.push(newObj)\n        }  \n        console.log(\"year4: \", year4)     \n        setYearWorkers(year4)\n        break;\n      }\n\n      //за период\n      case 5:{\n        console.log(\"за период\", periodDate1, periodDate2)\n\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n\n        //открыть стартовые плашки\n        setShowWidget3(true)\n        let i = 0\n        setTimerId(setInterval(() => {\n          if (i % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(true)\n            setShowWidget5(false)\n          }\n          if ((i+1) % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true)\n          }\n          if ((i+2) % 3 === 0) {\n            setShowWidget3(true)\n            setShowWidget4(false)\n            setShowWidget5(false)\n          }\n          i++\n        }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(false)\n        setShowCharts3(false)\n        setShowCharts4(false)\n        setShowCharts5(true)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за период\n        let arr = workers.filter(item => new Date(item.createDate).getTime() > new Date(periodDate1).getTime() && new Date(item.createDate).getTime() < new Date(periodDate2).getTime());\n        setSortWorkers(arr)\n\n        //график\n        //...\n\n        break;\n      }\n    }\n  }\n\n  const changeDate1 = (e) => {\n    setPeriodDate1(e.target.value)\n  }\n\n  const changeDate2 = (e) => {\n    setPeriodDate2(e.target.value)\n  }\n\n\n  const hideCharts = () => {\n    setShowCharts(false)\n    setShowCharts2(false)\n    setShowCharts3(false)\n    setShowCharts4(false)\n    \n    clearTimeout(timerId);\n\n    setShowWidget2(true) //всего\n    setShowWidget3(false) //категория 1\n    setShowWidget4(false) //категория 2\n    setShowWidget5(false) //категория 3\n    \n  }\n  \n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader tabs={tabhub}/>\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n              <Suspense fallback={<CSpinner color=\"primary\" />}>\n\n                <>\n                {showWidget \n                ?<WidgetsDropdown\n                  users={clients.length-1} \n                  projects={projects.length} \n                  companys={comps.length} \n                />\n                :\"\"}\n\n                {showWidget2 \n                ?<WidgetsDropdown2\n                  users={sortWorkers.length}\n                  newUsers={newWorkers.length} \n                  activeUsers={activWorkers.length} \n                  delUsers={0}\n                />\n                :\"\"}\n\n                {showWidget3 \n                ?<WidgetsDropdown3\n                  soundUsers={catCount[0].count}\n                  lightUsers={catCount[1].count}\n                  videoUsers={catCount[2].count}\n                  stagehandsUsers={catCount[4].count}\n                />\n                :\"\"}\n\n                {showWidget4 \n                ?<WidgetsDropdown4\n                  photoUsers={catCount[8].count}\n                  cateringUsers={catCount[9].count}\n                  partyUsers={catCount[10].count}\n                  gamesUsers={catCount[11].count}\n                />\n                : \"\"}\n\n                {showWidget5 \n                ?<WidgetsDropdown5\n                  riggerUsers={catCount[3].count}\n                  stagegroundUsers={catCount[5].count}\n                  productionUsers={catCount[7].count}\n                  trucksUsers={catCount[6].count}\n                />\n                : \"\"}\n                \n\n{/* График Сутки */}\n {showCharts ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title=\"\"\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}} /></>}\n                  chart={            \n                    <Chart \n                      data={dayWorkers} \n                      data2={[]}\n                      // data2={\n                      //   [\n                      //     { name: '0:00', value: 1 },\n                      //     { name: '01:00', value: 0 },\n                      //     { name: '02:00', value: 0 },\n                      //     { name: '03:00', value: 0 },\n                      //     { name: '04:00', value: 0 },\n                      //     { name: '05:00', value: 0 },\n                      //     { name: '06:00', value: 0 },\n                      //     { name: '07:00', value: 1 },\n                      //     { name: '08:00', value: 0 },\n                      //     { name: '09:00', value: 0 },\n                      //     { name: '10:00', value: 0 },\n                      //     { name: '11:00', value: 0 },\n                      //     { name: '12:00', value: 0 },\n                      //     { name: '13:00', value: 0 },\n                      //     { name: '14:00', value: 0 },\n                      //     { name: '15:00', value: 0 },\n                      //     { name: '16:00', value: 0 },\n                      //     { name: '17:00', value: 2 },\n                      //     { name: '18:00', value: 1 },\n                      //     { name: '19:00', value: 0 },\n                      //     { name: '20:00', value: 0 },\n                      //     { name: '21:00', value: 0 },\n                      //     { name: '22:00', value: 0 },\n                      //     { name: '23:00', value: 0 },\n                      //   ]\n                      // }\n                      width={widthGrafik} height={350} \n                    />\n\n                  }\n                />\n: \"\"\n}\n\n{/* График Неделя */}\n{showCharts2 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title=\"\"\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}}/></>}\n                  chart={\n                    <Chart \n                      data={weekWorkers} \n                      data2={[]} //удаленные пользователи\n                      // data2={\n                      //   [\n                      //     { name: 'Пн', value: 0 },\n                      //     { name: 'Вт', value: 0 },\n                      //     { name: 'Ср', value: 0 },\n                      //     { name: 'Чт', value: 0 },\n                      //     { name: 'Пт', value: 0 },\n                      //     { name: 'Сб', value: 0 },\n                      //     { name: 'Вс', value: 0 },\n                      //   ]\n                      // }\n                      width={widthGrafik} height={350} \n                    />\n                  }\n                />\n: \"\"\n}\n\n{/* График Месяц */}\n{showCharts3 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title=\"\"\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}}/></>}\n                  chart={\n                    <Chart \n                      data={monthWorkers} \n                      // data={\n                      //   [\n                      //     { name: '01', value: 1 },\n                      //     { name: '02', value: 0 },\n                      //     { name: '03', value: 0 },\n                      //     { name: '04', value: 0 },\n                      //     { name: '05', value: 0 },\n                      //     { name: '06', value: 0 },\n                      //     { name: '07', value: 0 },\n                      //     { name: '08', value: 0 },\n                      //     { name: '09', value: 0 },\n                      //     { name: '10', value: 0 },\n                      //     { name: '11', value: 0 },\n                      //     { name: '12', value: 1 },\n                      //     { name: '13', value: 1 },\n                      //     { name: '14', value: 0 },\n                      //     { name: '15', value: 0 },\n                      //     { name: '16', value: 0 },\n                      //     { name: '17', value: 0 },\n                      //     { name: '18', value: 0 },\n                      //     { name: '19', value: 0 },\n                      //     { name: '20', value: 0 },\n                      //     { name: '21', value: 0 },\n                      //     { name: '22', value: 0 },\n                      //     { name: '23', value: 0 },\n                      //     { name: '24', value: 1 },\n                      //     { name: '25', value: 1 },\n                      //     { name: '26', value: 0 },\n                      //     { name: '27', value: 0 },\n                      //     { name: '28', value: 0 },\n                      //     { name: '29', value: 0 },\n                      //     { name: '30', value: 0 },\n                      //   ]\n                      // }\n                      data2={[]} //удаленные пользователи\n                      width={widthGrafik} height={350} />\n                  }\n                />\n: \"\"\n}\n\n{/* График Год */}\n{showCharts4 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title=\"\"\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}} /></>}\n                  chart={\n                    <Chart \n                      data={yearWorkers}\n                      data2={[]} \n                      // data2={\n                      //   [\n                      //     { name: 'Январь', value: 0 },\n                      //     { name: 'Февраль', value: 0 },\n                      //     { name: 'Март', value: 0 },\n                      //     { name: 'Апрель', value: 0 },\n                      //     { name: 'Май', value: 1 },\n                      //     { name: 'Июнь', value: 0 },\n                      //     { name: 'Июль', value: 0 },\n                      //     { name: 'Август', value: 2 },\n                      //     { name: 'Сентябрь', value: 2 },\n                      //     { name: 'Октябрь', value: 0 },\n                      //     { name: 'Ноябрь', value: 0 },\n                      //     { name: 'Декабрь', value: 0 },\n                      //   ]\n                      // }\n                      width={widthGrafik} height={350} \n                    />             \n                  }\n                />\n: \"\"\n}\n\n{/* График Период */}\n{showCharts5 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"success\"\n                  value={<></>}\n                  title=\"\"\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}} /></>}\n                  chart={\n                    <Chart \n                      data={yearWorkers} \n                      data2={[]}  \n                      // data2={\n                      //   [\n                      //     { name: 'Январь', value: 0 },\n                      //     { name: 'Февраль', value: 0 },\n                      //     { name: 'Март', value: 0 },\n                      //     { name: 'Апрель', value: 0 },\n                      //     { name: 'Май', value: 1 },\n                      //     { name: 'Июнь', value: 0 },\n                      //     { name: 'Июль', value: 0 },\n                      //     { name: 'Август', value: 2 },\n                      //     { name: 'Сентябрь', value: 2 },\n                      //     { name: 'Октябрь', value: 0 },\n                      //     { name: 'Ноябрь', value: 0 },\n                      //     { name: 'Декабрь', value: 0 },\n                      //   ]\n                      // }                 \n                      width={widthGrafik} \n                      height={350} \n                    />             \n                  }\n                />\n: \"\"\n}\n\n\n                {/* Вкладки */}\n                <CNav variant=\"tabs\" className='dark-theme'>\n                      <CNavItem>\n                        <CNavLink \n                          style={{background: activeKey !== 2 ? '#08080869' : '', cursor: 'pointer'}} \n                          onClick={() => openHub('Workhub')} \n                          active={activeKey === 2}>\n                            Workhub\n                        </CNavLink>\n                      </CNavItem>\n                      <CNavItem>\n                        <CNavLink \n                          style={{background: activeKey !== 1 ? '#08080869' : '', cursor: 'pointer'}} \n                          onClick={() => openHub('Renthub')} \n                          active={activeKey === 1}>\n                            Renthub\n                        </CNavLink>\n                      </CNavItem>\n                </CNav>\n                \n                <CCard className='rounded-bottom' style={{borderRadius: '0px', borderColor: '#131c21', borderTopRightRadius: '0.375rem'}}>\n                  <CCardBody id=\"Renthub\" style={{display: showRenthub ? 'block' : 'none'}}>\n                    <CRow>\n                      <CCol xs>\n                        <CCard className=\"mb-4\">\n                          <CCardHeader style={{textAlign: 'left'}}>Пользователи бота ({clients.length - 1})</CCardHeader>\n                          <CCardBody>\n                            <CRow>\n                              <CCol xs={12} md={6} xl={6}>\n                                <CRow>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                                      <div className=\"text-medium-emphasis small\">Новые клиенты</div>\n                                      <div className=\"fs-5 fw-semibold\">{newClients.length}</div>\n                                    </div>\n                                  </CCol>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Постоянные клиенты</div>\n                                      <div className=\"fs-5 fw-semibold\">{oldClients.length-1}</div>\n                                    </div>\n                                  </CCol>\n                                </CRow>\n                              </CCol>\n\n                              <CCol xs={12} md={6} xl={6}>\n                                <CRow>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Просмотры</div>\n                                      <div className=\"fs-5 fw-semibold\">-</div>\n                                    </div>\n                                  </CCol>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Другое</div>\n                                      <div className=\"fs-5 fw-semibold\">-</div>\n                                    </div>\n                                  </CCol>\n                                </CRow>\n\n                                <div className=\"mb-5\"></div>\n\n                              </CCol>\n                            </CRow>\n\n                          {loading ? \n                                      \n                            <CSpinner/> :\n\n                            <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                              <CTableHead className='table-dark'>\n                                <CTableRow>\n                                  <CTableHeaderCell style={{width: '30px'}}>№</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>\n                                    <CIcon icon={cilPeople} />\n                                  </CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '160px'}}>Пользователь</CTableHeaderCell>                             \n                                  <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Организация</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Телефон</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '80px'}}>Город</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>TG ID</CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '100px'}}>Использование</CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '100px'}}>Активность</CTableHeaderCell>\n                                </CTableRow>\n                              </CTableHead>\n                              <CTableBody>\n                                {contacts.map((item, index) => (\n                                  <CTableRow v-for=\"item in tableItems\" key={index}>\n                                    <CTableDataCell className=\"text-center\">\n                                      {index+1}\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                        <CAvatar size=\"md\" src={item.avatar ? host + item.avatar : avatar2} alt='' />\n                                    </CTableDataCell>\n                                    <CTableDataCell>\n                                      <div>{item.user.name}</div>\n                                      <div className=\"small text-medium-emphasis\">\n                                      </div>\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      {item.company ? <div>{item.company}</div> : ''}\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      <div>{item.phone}</div>\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      <div>{item.city}</div>\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      <div>{item.TG_ID}</div>\n                                    </CTableDataCell>\n                                    <CTableDataCell>\n                                      <div className=\"clearfix\">\n                                        <div className=\"float-start\">\n                                          <strong>{item.usage.value}%</strong>\n                                        </div>\n                                        <div className=\"float-end\">\n                                          <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                                        </div>\n                                      </div>\n                                      <CProgress thin color={item.usage.color} value={item.usage.value} />\n                                    </CTableDataCell>\n                                    <CTableDataCell>\n                                      <div className=\"small text-medium-emphasis\">Последний вход</div>\n                                      <strong>{item.activity}</strong>\n                                    </CTableDataCell>\n                                  </CTableRow>\n                                ))}\n                              </CTableBody>\n                            </CTable>\n                          }\n                          </CCardBody>\n                        </CCard>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n\n{/*-------------------------------------------------------------------------------------------  */}\n     \n                  <CCardBody id=\"Workhub\" style={{display: showWorkhub ? 'block' : 'none'}}>\n                    <CRow>\n                      <CCol xs>\n                            <CRow>\n                              <CCol md={6} style={{textAlign: 'left'}}>\n                                <CButton color=\"dark\" onClick={()=>showBlock(1)} style={{marginRight: '20px', width: '100px'}}>Сутки</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(2)} style={{marginRight: '20px', width: '100px'}}>Неделя</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(3)} style={{marginRight: '20px', width: '100px'}}>Месяц</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(4)} style={{marginRight: '20px', width: '100px'}}>Год</CButton>\n                              </CCol>\n                              <CCol md={6} style={{textAlign: 'center', display: 'flex'}}>\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate1}\n                                  onChange={changeDate1}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"01.01.2024\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}}    \n                                                  />}\n                                </InputMask>\n\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate2}\n                                  onChange={changeDate2}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"31.12.2024\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}} \n                                                  />}\n                                </InputMask>                             \n                                            \n                                <CButton color=\"dark\" onClick={()=>showBlock(5)} style={{marginLeft: '10px'}}>Применить</CButton>\n                              </CCol>      \n                            </CRow>\n                            \n                            <br/>\n                            <CRow className=\"mb-3\">\n                              <CCol sm={3} >\n                                <CFormInput placeholder=\"Поиск специалиста...\" onChange={(e)=>setText(e.target.value)} aria-label=\"workers\"/>\n                              </CCol>\n                            </CRow>\n                            \n                            <CRow>\n                              <CCol style={{textAlign: 'center'}}>\n                              {loading2 ? \n                                      \n                                <CSpinner/> :\n\n                                <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                                  <CTableHead className='table-light'>\n                                    <CTableRow>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '90px'}}>Дата</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '70px'}}>Время</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '250px'}}>ФИО</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '150px'}}>Город</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Специальность</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '140px'}}>Дата рождения</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '160px'}}>Телефон</CTableHeaderCell>                         \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '120px'}}>Ник</CTableHeaderCell>\n                                    </CTableRow>\n                                  </CTableHead>\n                                  <CTableBody>                                  \n                                    {sortWorkers.map((item, index) => (\n                                      <CTableRow v-for=\"item in tableItems\" key={index}>\n                                        <CTableDataCell className=\"text-center\">\n                                          {String(new Date(item.createDate).getDate()).padStart(2, \"0\")+ \".\"+ String(new Date(item.createDate).getMonth()+1).padStart(2, \"0\") + \".\" +new Date(item.createDate).getFullYear()}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {new Date(item.createDate).getHours() + ' : '+ String(new Date(item.createDate).getMinutes()).padStart(2, \"0\")}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 || item.userfamily === 'Неизвестный' ? '#cd3838' : ''}}>\n                                            {item.userfamily ? item.userfamily : ''} {item.username ? item.username : ''} {item.from ? (item.from === 'Notion' ? \"[N]\" : '')  : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {item.city ? item.city : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{textAlign: 'left'}}>\n                                          <table>\n                                            {item.worklist !== '' ? (JSON.parse(item.worklist)).map((spec, index)=>( \n                                                <tr key={index}>\n                                                  <td>{spec.spec !== '' ? \"- \" + spec.spec : ''}</td>\n                                                </tr>          \n                                            )) : \"\"}\n                                          </table>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 ? 'red' : ''}}>\n                                          {item.dateborn ? item.dateborn : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div>{item.phone ? item.phone : ''}</div>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div>{showNick ? specusers.find((user) => user.chatId === item.chatId)?.username : item.chatId}</div>\n                                        </CTableDataCell> \n                                      </CTableRow>\n                                      ))\n                                    }\n                                </CTableBody>                   \n                              </CTable>\n                              \n                            }\n                            \n                              </CCol>\n                            </CRow>\n                            <CRow>\n                              <CCol>\n                                Всего: {sortWorkers.length}\n                              </CCol>\n                            </CRow>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n                </CCard>\n\n                </>\n\n                </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Admin\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = ({users, projects, companys}) => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              {users} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title=\"Заказчики\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {projects} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title=\"Проекты\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {companys}{' '}\n              {/* <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title=\"Компании\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              44{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Часы [за год]\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n"],"names":["id","name","icon","models","soundUsers","lightUsers","videoUsers","stagehandsUsers","sm","lg","className","color","value","title","action","src","Sound","alt","width","chart","style","height","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","Light","Video","fill","Stagehands","barPercentage","drawTicks","cateringUsers","photoUsers","partyUsers","gamesUsers","Photo","Catering","Party","Games","riggerUsers","productionUsers","stagegroundUsers","trucksUsers","Riggers","Production","StageGround","Trucks","grafik","useRef","clients","useUsersContext","users","zakazchiki","managers","projs","projects","comps","companys","specusers","userWorkers","workers","useState","contacts","setContacts","setProjects","newClients","setNewClients","oldClients","setOldClients","loading","setLoading","loading2","setLoading2","sortWorkers","setSortWorkers","newWorkers","setNewWorkers","activWorkers","setActivWorkers","catCount","setCatCount","dayWorkers","setDayWorkers","weekWorkers","setWeekWorkers","monthWorkers","setMonthWorkers","yearWorkers","setYearWorkers","showRenthub","setShowRenthub","showWorkhub","setShowWorkhub","activeKey","setActiveKey","showWidget","setShowWidget","showWidget2","setShowWidget2","showWidget3","setShowWidget3","showWidget4","setShowWidget4","showWidget5","setShowWidget5","showCharts","setShowCharts","showCharts2","setShowCharts2","showCharts3","setShowCharts3","showCharts4","setShowCharts4","showCharts5","setShowCharts5","showNick","setShowNick","tabhub","setTabhub","periodDate1","setPeriodDate1","periodDate2","setPeriodDate2","timerId","setTimerId","widthGrafik","setWdthGrafik","text","setText","chatAdminId","process","useEffect","setTimeout","console","log","current","offsetWidth","filteredData","filter","user","userfamily","username","chatId","toLowerCase","includes","currentMonth","Date","getMonth","arr1","item","createDate","arr2","date","arrClients","fetchData","getAllMessages","messages","map","client","index","userObject","findIndex","manager","tgID","userObject2","find","company","man","companyName","companyCity","city","lastDate","split","d","year","getFullYear","month","String","padStart","day","getDate","newDateActivity","newClientName","allMessages","length","fromAdmin","el","senderId","messagesUsers","arr","message","newObj","avatar","new","registered","TG_ID","phone","usage","Math","round","period","activity","push","filteredClients","clientSort","sort","a","b","arrProjects","project","newProject","start","time_start","created","time_created","teh","openHub","hub","showBlock","ind","clearTimeout","i","setInterval","clientWidth","count_cat","needDate","now","getTime","categories","specData","category","JSON","parse","worklist","work","cat","obj","count","days1","countSpec","arrSpec","getHours","week2","nameDay","getDay","carrentDate","month3","year4","nameMonth","hideCharts","tabs","Suspense","fallback","WidgetsDropdown","WidgetsDropdown2","newUsers","activeUsers","delUsers","ref","cilX","onClick","cursor","Chart","data2","variant","background","active","borderRadius","borderTopRightRadius","xs","textAlign","md","xl","align","hover","responsive","cilPeople","size","avatar2","thin","marginRight","mask","onChange","e","target","inputProps","placeholder","disableUnderline","marginLeft","minWidth","getMinutes","dateborn","from","spec","alignment","caret","cilOptions","disabled","cilArrowBottom"],"sourceRoot":""}