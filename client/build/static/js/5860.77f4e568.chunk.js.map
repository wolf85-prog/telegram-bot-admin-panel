{"version":3,"file":"static/js/5860.77f4e568.chunk.js","mappings":"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","sources":["data/specData.js","views/widgets/WidgetsDropdown3.js","views/widgets/WidgetsDropdown4.js","views/widgets/WidgetsDropdown5.js","pages/Admin.js","views/widgets/WidgetsDropdown.js"],"sourcesContent":["\r\nconst specData = [\r\n    {\r\n        id: 1,\r\n        name: 'Sound',\r\n        icon: 'Звук',\r\n        models: [\r\n            {id: 1, name: 'Звукорежиссер',},\r\n            {id: 2, name: 'RF-Менеджер',},\r\n            {id: 3, name: 'Backline',},\r\n            {id: 4, name: 'Roadie',},\r\n            {id: 5, name: 'Техник по звуку',},\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Light',\r\n        icon: 'Свет',\r\n        models: [\r\n            {id: 1, name: 'Художник по свету',},\r\n            {id: 2, name: 'Оператор световой пушки',},\r\n            {id: 3, name: 'Гафер',},\r\n            {id: 4, name: 'Техник по свету',},\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Video',\r\n        icon: 'Видео',\r\n        models: [\r\n            {id: 1, name: 'Инженер VMix',},\r\n            {id: 2, name: 'Инженер Resolume',},\r\n            {id: 3, name: 'Оператор Zoom',},\r\n            {id: 4, name: 'Оператор [cameraman]',},\r\n            {id: 5, name: 'Техник монтажа',},\r\n            {id: 6, name: 'IT-специалист',},\r\n            {id: 7, name: 'Оператор-постановщик',},\r\n            {id: 8, name: 'Оператор [Cameraman]',},\r\n        ]\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Riggers',\r\n        icon: 'Риггеры',\r\n        models: [\r\n            {id: 1, name: 'Верхний Риггер',},\r\n            {id: 2, name: 'Нижний Риггер',},\r\n        ]\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Stagehands',\r\n        icon: 'Помощники \\/ Грузчики',\r\n        models: [\r\n            {id: 1, name: 'Помощник \\/ Грузчик',},\r\n            {id: 2, name: 'Промоутер',},\r\n        ]\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Stage Ground',\r\n        icon: 'Граунд',\r\n        models: [\r\n            {id: 1, name: 'Риггер [Ground]',},\r\n            {id: 2, name: 'Монтажник [Ground]',},\r\n            {id: 3, name: 'Декоратор',},\r\n        ]\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Trucks',\r\n        icon: 'Водители',\r\n        models: [\r\n            {id: 1, name: 'C личным ТС [B\\/C]',},\r\n            {id: 2, name: 'Без личного ТС [B\\/C]',},\r\n            {id: 3, name: 'С гидролифтом',},\r\n            {id: 4, name: 'Без гидролифта',},\r\n        ]\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Production',\r\n        icon: 'Технический продакшн',\r\n        models: [\r\n            {id: 1, name: 'Мероприятие под ключ',},\r\n            {id: 2, name: 'Отдельные технические задачи',},\r\n        ]\r\n    },\r\n    {\r\n        id: 9,\r\n        name: 'Photo',\r\n        icon: 'Фото',\r\n        models: [\r\n            {id: 1, name: 'Свадебная съемка',},\r\n            {id: 2, name: 'Репортажная съемка',},\r\n            {id: 3, name: 'Портретная съемка',},\r\n            {id: 4, name: 'Предметная съемка',},\r\n            {id: 5, name: 'Документальная съемка',},\r\n        ]\r\n    },\r\n    {\r\n        id: 10,\r\n        name: 'Catering',\r\n        icon: 'Кейтеринг',\r\n        models: [\r\n            {id: 1, name: 'Официант',},\r\n            {id: 2, name: 'Бармен',},\r\n            {id: 3, name: 'Повар',},\r\n            {id: 4, name: 'Хостес',},\r\n            {id: 5, name: 'Банкетный менеджер',},\r\n        ]\r\n    },   \r\n    {\r\n        id: 11,\r\n        name: 'Party',\r\n        icon: 'Артисты',\r\n        models: [\r\n            {id: 1, name: 'Кавер-бенд',},\r\n            {id: 2, name: 'Танцевальный коллектив',},\r\n            {id: 3, name: 'Диджей',},\r\n            {id: 4, name: 'Ведущий',},\r\n            {id: 5, name: 'Певец \\/ певица',},\r\n            {id: 6, name: 'Артист оригинального жанра',},\r\n            {id: 7, name: 'Go-Go',},\r\n        ]\r\n    },\r\n    {\r\n        id: 12,\r\n        name: 'Games',\r\n        icon: 'Игромания',\r\n        models: [\r\n            {id: 1, name: 'Квесты',},\r\n            {id: 2, name: 'Квизы',},\r\n            {id: 3, name: 'Аниматоры',},\r\n            {id: 4, name: 'Настольные игры \\/ игровые автоматы',},\r\n            {id: 5, name: 'Пневмокостюмы \\/ ростовые куклы',},\r\n            {id: 6, name: 'Активности \\/ аттракционы',},\r\n        ]\r\n    },\r\n    {\r\n        id: 13,\r\n        name: 'NoTag',\r\n        icon: 'Вне категории',\r\n        models: [\r\n            {id: 1, name: 'Вне категории',},\r\n        ]\r\n    },\r\n];\r\n\r\nexport default specData;","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nimport Sound from \"./../../assets/images/spec/1_sound.png\";\nimport Video from \"./../../assets/images/spec/5_video.png\";\nimport Light from \"./../../assets/images/spec/6_light.png\";\nimport Stagehands from \"./../../assets/images/spec/7_stagehands.png\";\n\n\nconst WidgetsDropdown3 = ({\n  soundUsers, \n  lightUsers, \n  videoUsers, \n  stagehandsUsers, \n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"primary\"\n          value={\n            <>\n              {soundUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Звук\"}\n          action={<img src={Sound} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [soundUsers, 0, 0, 0, 0, 0, 0], //min: -5, max: 89,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -10,\n                    max: 90,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"info\"\n          value={\n            <>\n              {lightUsers} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Свет\"}\n          action={<img src={Light} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [lightUsers, 0, 0, 0, 0, 0, 0], //min: -5 max: 39\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -10,\n                    max: 90,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"warning\"\n          value={\n            <>\n              {videoUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Видео\"}\n          action={<img src={Video} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [videoUsers, 0, 0, 0, 0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"danger\"\n          value={\n            <>\n              {stagehandsUsers}\n            </>\n          }\n          title={\"Помощники\"}\n          action={<img src={Stagehands} alt='' width={35}/>}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', \n                  'Февраль', \n                  'Март', \n                  'Апрель', \n                  'Май', \n                  'Июнь', \n                  'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [stagehandsUsers, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown3\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nimport Catering from \"./../../assets/images/spec/9_catering.png\";\nimport Photo from \"./../../assets/images/spec/10_photo.png\";\nimport Party from \"./../../assets/images/spec/11_party.png\";\nimport Games from \"./../../assets/images/spec/11_party.png\";\n\nconst WidgetsDropdown4 = ({\n  cateringUsers,\n  photoUsers,\n  partyUsers,\n  gamesUsers,\n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"primary\"\n          value={\n            <>\n              {photoUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Фото\"}\n          action={<img src={Photo} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [photoUsers, 0, 0, 0, 0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -10,\n                    max: 90,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"info\"\n          value={\n            <>\n              {cateringUsers} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Кейтегинг\"}\n          action={<img src={Catering} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [cateringUsers, 0, 0, 0, 0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -10,\n                    max: 90,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"warning\"\n          value={\n            <>\n              {partyUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Артисты\"}\n          action={<img src={Party} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [partyUsers, 0, 0, 0, 0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"danger\"\n          value={\n            <>\n              {gamesUsers}\n            </>\n          }\n          title={\"Игры\"}\n          action={<img src={Games} alt='' width={35}/>}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [gamesUsers, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown4\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nimport Riggers from \"./../../assets/images/spec/2_riggers.png\";\nimport Production from \"./../../assets/images/spec/3_production.png\";\nimport StageGround from \"./../../assets/images/spec/4_stage_ground.png\";\nimport Trucks from \"./../../assets/images/spec/8_trucks.png\";\n\nconst WidgetsDropdown5 = ({\n  riggerUsers,\n  productionUsers,\n  stagegroundUsers,\n  trucksUsers,\n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"primary\"\n          value={\n            <>\n              {riggerUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Риггер\"}\n          action={<img src={Riggers} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [riggerUsers, 0, 0, 0, 0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -10,\n                    max: 90,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"info\"\n          value={\n            <>\n              {productionUsers} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Продакшн\"}\n          action={<img src={Production} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [productionUsers, 0, 0, 0, 0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -10,\n                    max: 90,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"warning\"\n          value={\n            <>\n              {stagegroundUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Граунд\"}\n          action={<img src={StageGround} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [stagegroundUsers, 0, 0, 0, 0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"danger\"\n          value={\n            <>\n              {trucksUsers}\n            </>\n          }\n          title={\"Водители\"}\n          action={<img src={Trucks} alt='' width={35}/>}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Кол-во специалистов',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [trucksUsers, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown5\n","import React, { Suspense, useState, useEffect, useRef } from 'react'\nimport { CContainer, CSpinner } from '@coreui/react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport {\n  CAvatar,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CFormInput,\n  CButton,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilPeople, cilX,\n} from '@coreui/icons'\n\nimport {\n  CWidgetStatsA,\n} from '@coreui/react'\n\nimport avatar2 from 'src/assets/images/avatars/blank-avatar.png'\n\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\nimport { getAllMessages } from './../http/chatAPI.js'\n\nimport WidgetsDropdown from '../views/widgets/WidgetsDropdown'\nimport WidgetsDropdown2 from '../views/widgets/WidgetsDropdown2'\nimport WidgetsDropdown3 from '../views/widgets/WidgetsDropdown3'\nimport WidgetsDropdown4 from '../views/widgets/WidgetsDropdown4'\nimport WidgetsDropdown5 from '../views/widgets/WidgetsDropdown5'\n\nimport InputMask from 'react-input-mask';\n\nimport Chart from './../components/Chart'\nimport specData from 'src/data/specData'\n\nconst Admin = () => {\n\n  const grafik = useRef(null);\n\n  const { users: clients } = useUsersContext();\n  const { managers: zakazchiki } = useUsersContext();\n  const { projects: projs } = useUsersContext();\n  const { companys: comps } = useUsersContext();\n  const { userWorkers: specusers } = useUsersContext();\n  const { workers } = useUsersContext();\n\n  const [contacts, setContacts]= useState([]);\n  const [projects, setProjects]= useState([]);\n  const [newClients, setNewClients]= useState([]);\n  const [oldClients, setOldClients]= useState([]);\n  const [loading, setLoading]= useState(true);\n  const [loading2, setLoading2]= useState(true);\n  const [sortWorkers, setSortWorkers]= useState([]);\n  \n  const [newWorkers, setNewWorkers]= useState([]);\n  const [activWorkers, setActivWorkers]= useState([]);\n\n  const [catCount, setCatCount] = useState([])\n\n  const [dayWorkers, setDayWorkers]= useState([]);\n  const [weekWorkers, setWeekWorkers]= useState([]);\n  const [monthWorkers, setMonthWorkers]= useState([]);\n  const [yearWorkers, setYearWorkers]= useState([]);\n\n  const [showRenthub, setShowRenthub]= useState(false);\n  const [showWorkhub, setShowWorkhub]= useState(true);\n\n  const [activeKey, setActiveKey] = useState(2)\n\n  const [showWidget, setShowWidget] = useState(false)\n  const [showWidget2, setShowWidget2] = useState(true)\n  const [showWidget3, setShowWidget3] = useState(false)\n  const [showWidget4, setShowWidget4] = useState(false)\n  const [showWidget5, setShowWidget5] = useState(false)\n\n  const [showCharts, setShowCharts]= useState(false);\n  const [showCharts2, setShowCharts2]= useState(false);\n  const [showCharts3, setShowCharts3]= useState(false);\n  const [showCharts4, setShowCharts4]= useState(false);\n  const [showCharts5, setShowCharts5]= useState(false);\n\n  const [showNick, setShowNick]= useState(false);\n\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const [tabhub, setTabhub]= useState('');\n\n  const [periodDate1, setPeriodDate1] = useState(\"\")\n  const [periodDate2, setPeriodDate2] = useState(\"\")\n\n  const [timerId, setTimerId] = useState()\n\n  const [widthGrafik, setWdthGrafik] = useState(0);\n\n  const [text, setText]= useState(\"\");\n\n  const chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID\n  const host = process.env.REACT_APP_API_URL\n\n  \n  useEffect(() => {\n    //set tab\n    setTabhub('Workhub')\n\n    //console.log(\"specusers: \", specusers)\n\n    setTimeout(()=> {\n      setShowNick(!showNick)\n    }, 10000)\n  })\n\n  useEffect(() => {\n    //get width\n    console.log('width', grafik.current ? grafik.current.offsetWidth : 0);\n    setWdthGrafik(grafik.current ? grafik.current.offsetWidth - 100 : 0)\n  }, [grafik.current]);\n\n\n  //поиск\n  useEffect(() => {\n\t\tconst filteredData = workers.filter(user=> (user.userfamily+user.username+user.chatId)?.toLowerCase().includes(text.toLowerCase()));\n    setSortWorkers(filteredData);      \n  }, [text]);\n\n\n  //get filter workers\n  useEffect(() => {\n    setSortWorkers(workers)\n\n    const currentDate = new Date()\n    const currentMonth = currentDate.getMonth()\n\n    //массив новых пользователей за текущий месяц\n    const arr1 = workers.filter(item => new Date(item.createDate).getMonth() === currentMonth)\n    setNewWorkers(arr1)\n\n    //массив активных пользователей за текущий месяц\n    const arr2 = workers.filter(item => new Date(item.date).getMonth() === currentMonth) //specusers\n    setActivWorkers(arr2)\n\n  }, [workers])\n\n  //get Contacts\n  useEffect(() => {\n    const arrClients = []\n\n    const fetchData = async() => {\n\n      console.log(\"workers (admin): \", workers)\n      //console.log(\"workersbot (admin): \", specusers.find((user) => user.chatId === '805436270').username)\n      setLoading2(false)\n\n      let messages = await getAllMessages()\n\n      clients.map((client, index) => {\n        \n        const managers = [...zakazchiki];\n        let userIndex = zakazchiki.findIndex((manager) => manager.tgID === client.chatId);  \n        const userObject = managers[userIndex];\n\n        let userObject2 = comps.find((company) => company.managers.find(man => man.id ===  userObject?.id)) //company.managers.map((manager) => manager.id === userObject?.id));  \n\n        const companyName = userObject2?.title\n        const companyCity = userObject2?.city ? userObject2?.city : ''\n\n        const lastDate = client.date ? client.date.split('T') : ''\n        const d = new Date(lastDate[0]);\n\t\t\t\tconst year = d.getFullYear();\n\t\t\t\tconst month = String(d.getMonth()+1).padStart(2, \"0\");\n\t\t\t\tconst day = String(d.getDate()).padStart(2, \"0\");\n\t\t\t\tconst newDateActivity = `${day}.${month}.${year}`\n\n        const newClientName = client.name.includes(\"|\") ? client.name.split(\" | \")[1] : client.name\n\n        const allMessages = messages.length //всего сообщений\n        const fromAdmin = messages.filter(el => el.senderId === chatAdminId);\n        const messagesUsers = messages.filter(el => el.senderId === client.chatId);\n\n        const arr = clients.filter(el => el.message === '');\n        setNewClients(arr)\n\n        const arr2 = clients.filter(el => el.message !== '');\n        setOldClients(arr2)\n        \n        const newObj = {\n          avatar: client.avatar,\n          user: {\n            name: newClientName,\n            new: true,\n            registered: '01.01.2023',\n          },\n          TG_ID: client.chatId,\n          city: companyCity,\n          company: companyName ? companyName : '',\n          phone: userObject?.phone,\n          usage: {\n            value: Math.round(messagesUsers.length * 100 / (allMessages - fromAdmin.length)), \n            period: '01.04.2023 - ' + newDateActivity,\n            color: 'success',\n          },\n          activity: newDateActivity,\n        }\n\n        arrClients.push(newObj)\n      })\n\n      const filteredClients = [...arrClients].filter((el) => el.TG_ID !== chatAdminId); //без админского пользователя  \n      const clientSort = [...filteredClients].sort((a, b) => {       \n\t\t\t\treturn b.usage.value-a.usage.value  //сортировка по убывающей активности  \n\t\t\t}) \n      console.log('userbots: ', clientSort)  \n      setContacts(clientSort)  \n      \n      setTimeout(() => {\n        setLoading(false)\n      }, \"6000\")\n    }\n    \n    fetchData();\n    \n  }, [clients, workers]);\n//---------------------------------------------------------------------------------------------\n//get Projects\n  useEffect(() => {\n    const arrProjects = []\n\n    const fetchData = async () => {\n\t\t\t//let response = await getProjects();\n      projs.map(async (project) => {\n        const newProject = {\n\t\t\t\t\tid: project.id,\n\t\t\t\t\tname: project.title,\n\t\t\t\t\tstart: project.time_start,\n          created: project.time_created,\n          teh: project.teh,\n          manager: project.manager,\n          company: project.company,\n\t\t\t\t}\n        arrProjects.push(newProject)\n      })\n\n      setProjects(arrProjects) \n    }\n\n    fetchData();\n    \n  },[projs])\n\n  const openHub = (hub) => {\n    console.log(hub)\n    if (hub === 'Workhub') { \n      setShowWorkhub(true)\n      setShowRenthub(false)\n      setActiveKey(2)\n      setShowWidget(false)\n      setShowWidget2(true)\n      setTabhub('Workhub')\n    }\n    if (hub === 'Renthub') { \n      setShowWorkhub(false)\n      setShowRenthub(true)\n      setActiveKey(1)\n      setShowWidget(true)\n      setShowWidget2(false)\n      setTabhub('Renthub')\n    }\n  }\n\n  //нажатия на кнопки\n  const showBlock = (ind) => {\n    switch (ind) {\n\n      //за сутки\n      case 1:{\n        console.log(\"Фильтр за сутки: \", ind)\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n\n        //открыть стартовые плашки\n        setShowWidget3(true)\n\n        let i = 0\n        setTimerId(setInterval(() => {\n          if (i % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(true)\n            setShowWidget5(false)\n          }\n          if ((i+1) % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true)\n          }\n          if ((i+2) % 3 === 0) {\n            setShowWidget3(true)\n            setShowWidget4(false)\n            setShowWidget5(false)\n          }\n          i++\n        }, 3000));\n\n        setShowCharts(true)\n        setShowCharts2(false)\n        setShowCharts3(false)\n        setShowCharts4(false)\n        setShowCharts5(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за сутки\n        const carrentDate = Date.now()\n        //console.log(\"carrentDate: \", carrentDate)\n        const needDate = carrentDate - 86400000\n        //console.log(\"needDate: \", needDate)\n        \n        \n        let arr = workers.filter(item => new Date(item.createDate).getTime() > needDate);\n\n        let categories = []\n        let count_cat\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.name)) {\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n\n        setSortWorkers(arr)\n        \n        let days1 = []\n        let countSpec = 0\n\n        arr.map(item => console.log(\"arr: \", new Date(item.createDate)));\n\n        for (let i=0; i<=23; i++) {\n\n          const arrSpec = arr.filter(item => i === new Date(item.createDate).getHours());\n          countSpec = arrSpec.length\n          \n          const newObj= {\n            name: i<10 ? '0'+ i + ':00' : ''+ i + ':00', \n            value: countSpec,\n          }\n\n          days1.push(newObj)\n        }       \n\n        setDayWorkers(days1)\n\n        break;\n      }\n\n      //за неделю\n      case 2:{\n        clearTimeout(timerId);\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n\n        //открыть стартовые плашки\n        setShowWidget3(true)\n\n        let i = 0\n        setTimerId(setInterval(() => {\n          if (i % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(true)\n            setShowWidget5(false)\n          }\n          if ((i+1) % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true)\n          }\n          if ((i+2) % 3 === 0) {\n            setShowWidget3(true)\n            setShowWidget4(false)\n            setShowWidget5(false)\n          }\n          i++\n        }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(true)\n        setShowCharts3(false)\n        setShowCharts4(false)\n        setShowCharts5(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за неделю\n        const carrentDate = Date.now()\n        //console.log(\"carrentDate: \", carrentDate)\n        const needDate = carrentDate - 604800000\n        //console.log(\"needDate: \", needDate)\n        \n        \n        let arr = workers.filter(item => new Date(item.createDate).getTime() > needDate);\n        let categories = []\n        let count_cat\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.name)) {\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n        setSortWorkers(arr)\n\n        let week2 = []\n        let nameDay = ''\n        let countSpec = 0\n        for (let i=1; i<=7; i++) {\n          if (i===1) {\n            nameDay = 'Пн'\n            //let date = new Date(item.createDate);\n            //let dayWeek = [7, 1, 2, 3, 4, 5, 6][date.getDay()];\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===2) {\n            nameDay = 'Вт'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===3) {\n            nameDay = 'Ср'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===4) {\n            nameDay = 'Чт'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===5) {\n            nameDay = 'Пт'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===6) {\n            nameDay = 'Сб'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===7) {\n            nameDay = 'Вс'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]);\n            countSpec = arrSpec.length\n          }\n\n          const newObj= {\n                name: nameDay, \n                value: countSpec,\n              }\n          week2.push(newObj)\n        }  \n        console.log(\"week: \", week2)     \n        setWeekWorkers(week2)\n        break;\n      }\n\n      //за месяц\n      case 3:{\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n\n        //открыть стартовые плашки\n        setShowWidget3(true)\n        let i = 0\n        setTimerId(setInterval(() => {\n          if (i % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(true)\n            setShowWidget5(false)\n          }\n          if ((i+1) % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true)\n          }\n          if ((i+2) % 3 === 0) {\n            setShowWidget3(true)\n            setShowWidget4(false)\n            setShowWidget5(false)\n          }\n          i++\n        }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(false)\n        setShowCharts3(true)\n        setShowCharts4(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за месяц\n        const carrentDate = Date.now()\n        console.log(\"carrentDate: \", carrentDate)\n        const needDate = carrentDate - 2592000000\n        console.log(\"needDate: \", new Date(needDate))\n        \n        \n        let arr = workers.filter(item => new Date(item.createDate).getTime() > needDate);\n        let categories = []\n        let count_cat\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.name)) {\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n        setSortWorkers(arr)\n        //setMonthWorkers(arr)\n\n        let countSpec = 0\n        let month3 = []\n\n        for (let i=1; i<=31; i++) {\n          const arrSpec = arr.filter(item => i === new Date(item.createDate).getDate());\n          countSpec = arrSpec.length\n          const newObj= {\n            name: i<10 ? '0'+ i : ''+ i, \n            value: countSpec,\n          }\n          month3.push(newObj)\n        }  \n        console.log(\"month3: \", month3)     \n        setMonthWorkers(month3)\n        break;\n      }\n\n      //за год\n      case 4:{\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n\n        //открыть стартовые плашки\n        setShowWidget3(true)\n        let i = 0\n        setTimerId(setInterval(() => {\n          if (i % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(true)\n            setShowWidget5(false)\n          }\n          if ((i+1) % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true)\n          }\n          if ((i+2) % 3 === 0) {\n            setShowWidget3(true)\n            setShowWidget4(false)\n            setShowWidget5(false)\n          }\n          i++\n        }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(false)\n        setShowCharts3(false)\n        setShowCharts4(true)\n        setShowCharts5(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за год\n        let arr = workers.filter(item => item.createDate.split('T')[0].split('-')[0] === '2024');\n        let categories = []\n        let count_cat\n\n        console.log(\"arr year: \", arr)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.name)) {\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n        setSortWorkers(arr)\n\n        arr.map((item)=>console.log(\"month: \", new Date(item.createDate).getMonth()+1))\n\n        //график\n        let year4 = []\n        let nameMonth = ''\n        let countSpec = 0\n        for (let i=1; i<=12; i++) {\n          if (i===1) {\n            nameMonth = 'Январь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===2) {\n            nameMonth = 'Февраль'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===3) {\n            nameMonth = 'Март'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===4) {\n            nameMonth = 'Апрель'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===5) {\n            nameMonth = 'Май'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===6) {\n            nameMonth = 'Июнь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===7) {\n            nameMonth = 'Июль'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===8) {\n            nameMonth = 'Август'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===9) {\n            nameMonth = 'Сентябрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===10) {\n            nameMonth = 'Октябрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===11) {\n            nameMonth = 'Ноябрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===12) {\n            nameMonth = 'Декабрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          \n          const newObj= {\n                name: nameMonth, \n                value: countSpec,\n              }\n              year4.push(newObj)\n        }  \n        console.log(\"year4: \", year4)     \n        setYearWorkers(year4)\n        break;\n      }\n\n      //за период\n      case 5:{\n        console.log(\"за период\", periodDate1, periodDate2)\n\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n\n        //открыть стартовые плашки\n        setShowWidget3(true)\n        let i = 0\n        setTimerId(setInterval(() => {\n          if (i % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(true)\n            setShowWidget5(false)\n          }\n          if ((i+1) % 3 === 0) {\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true)\n          }\n          if ((i+2) % 3 === 0) {\n            setShowWidget3(true)\n            setShowWidget4(false)\n            setShowWidget5(false)\n          }\n          i++\n        }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(false)\n        setShowCharts3(false)\n        setShowCharts4(false)\n        setShowCharts5(true)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за период\n        let arr = workers.filter(item => new Date(item.createDate).getTime() > new Date(periodDate1).getTime() && new Date(item.createDate).getTime() < new Date(periodDate2).getTime());\n        setSortWorkers(arr)\n\n        //график\n        //...\n\n        break;\n      }\n    }\n  }\n\n  const changeDate1 = (e) => {\n    setPeriodDate1(e.target.value)\n  }\n\n  const changeDate2 = (e) => {\n    setPeriodDate2(e.target.value)\n  }\n\n\n  const hideCharts = () => {\n    setShowCharts(false)\n    setShowCharts2(false)\n    setShowCharts3(false)\n    setShowCharts4(false)\n    \n    clearTimeout(timerId);\n\n    setShowWidget2(true) //всего\n    setShowWidget3(false) //категория 1\n    setShowWidget4(false) //категория 2\n    setShowWidget5(false) //категория 3\n    \n  }\n  \n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader tabs={tabhub}/>\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n              <Suspense fallback={<CSpinner color=\"primary\" />}>\n\n                <>\n                {showWidget \n                ?<WidgetsDropdown\n                  users={clients.length-1} \n                  projects={projects.length} \n                  companys={comps.length} \n                />\n                :\"\"}\n\n                {showWidget2 \n                ?<WidgetsDropdown2\n                  users={sortWorkers.length}\n                  newUsers={newWorkers.length} \n                  activeUsers={activWorkers.length} \n                  delUsers={0}\n                />\n                :\"\"}\n\n                {showWidget3 \n                ?<WidgetsDropdown3\n                  soundUsers={catCount[0].count}\n                  lightUsers={catCount[1].count}\n                  videoUsers={catCount[2].count}\n                  stagehandsUsers={catCount[4].count}\n                />\n                :\"\"}\n\n                {showWidget4 \n                ?<WidgetsDropdown4\n                  photoUsers={catCount[8].count}\n                  cateringUsers={catCount[9].count}\n                  partyUsers={catCount[10].count}\n                  gamesUsers={catCount[11].count}\n                />\n                : \"\"}\n\n                {showWidget5 \n                ?<WidgetsDropdown5\n                  riggerUsers={catCount[3].count}\n                  stagegroundUsers={catCount[5].count}\n                  productionUsers={catCount[7].count}\n                  trucksUsers={catCount[6].count}\n                />\n                : \"\"}\n                \n\n{/* График Сутки */}\n {showCharts ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title=\"\"\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}} /></>}\n                  chart={            \n                    <Chart \n                      data={dayWorkers} \n                      data2={[]}\n                      // data2={\n                      //   [\n                      //     { name: '0:00', value: 1 },\n                      //     { name: '01:00', value: 0 },\n                      //     { name: '02:00', value: 0 },\n                      //     { name: '03:00', value: 0 },\n                      //     { name: '04:00', value: 0 },\n                      //     { name: '05:00', value: 0 },\n                      //     { name: '06:00', value: 0 },\n                      //     { name: '07:00', value: 1 },\n                      //     { name: '08:00', value: 0 },\n                      //     { name: '09:00', value: 0 },\n                      //     { name: '10:00', value: 0 },\n                      //     { name: '11:00', value: 0 },\n                      //     { name: '12:00', value: 0 },\n                      //     { name: '13:00', value: 0 },\n                      //     { name: '14:00', value: 0 },\n                      //     { name: '15:00', value: 0 },\n                      //     { name: '16:00', value: 0 },\n                      //     { name: '17:00', value: 2 },\n                      //     { name: '18:00', value: 1 },\n                      //     { name: '19:00', value: 0 },\n                      //     { name: '20:00', value: 0 },\n                      //     { name: '21:00', value: 0 },\n                      //     { name: '22:00', value: 0 },\n                      //     { name: '23:00', value: 0 },\n                      //   ]\n                      // }\n                      width={widthGrafik} height={350} \n                    />\n\n                  }\n                />\n: \"\"\n}\n\n{/* График Неделя */}\n{showCharts2 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title=\"\"\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}}/></>}\n                  chart={\n                    <Chart \n                      data={weekWorkers} \n                      data2={[]} //удаленные пользователи\n                      // data2={\n                      //   [\n                      //     { name: 'Пн', value: 0 },\n                      //     { name: 'Вт', value: 0 },\n                      //     { name: 'Ср', value: 0 },\n                      //     { name: 'Чт', value: 0 },\n                      //     { name: 'Пт', value: 0 },\n                      //     { name: 'Сб', value: 0 },\n                      //     { name: 'Вс', value: 0 },\n                      //   ]\n                      // }\n                      width={widthGrafik} height={350} \n                    />\n                  }\n                />\n: \"\"\n}\n\n{/* График Месяц */}\n{showCharts3 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title=\"\"\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}}/></>}\n                  chart={\n                    <Chart \n                      data={monthWorkers} \n                      // data={\n                      //   [\n                      //     { name: '01', value: 1 },\n                      //     { name: '02', value: 0 },\n                      //     { name: '03', value: 0 },\n                      //     { name: '04', value: 0 },\n                      //     { name: '05', value: 0 },\n                      //     { name: '06', value: 0 },\n                      //     { name: '07', value: 0 },\n                      //     { name: '08', value: 0 },\n                      //     { name: '09', value: 0 },\n                      //     { name: '10', value: 0 },\n                      //     { name: '11', value: 0 },\n                      //     { name: '12', value: 1 },\n                      //     { name: '13', value: 1 },\n                      //     { name: '14', value: 0 },\n                      //     { name: '15', value: 0 },\n                      //     { name: '16', value: 0 },\n                      //     { name: '17', value: 0 },\n                      //     { name: '18', value: 0 },\n                      //     { name: '19', value: 0 },\n                      //     { name: '20', value: 0 },\n                      //     { name: '21', value: 0 },\n                      //     { name: '22', value: 0 },\n                      //     { name: '23', value: 0 },\n                      //     { name: '24', value: 1 },\n                      //     { name: '25', value: 1 },\n                      //     { name: '26', value: 0 },\n                      //     { name: '27', value: 0 },\n                      //     { name: '28', value: 0 },\n                      //     { name: '29', value: 0 },\n                      //     { name: '30', value: 0 },\n                      //   ]\n                      // }\n                      data2={[]} //удаленные пользователи\n                      width={widthGrafik} height={350} />\n                  }\n                />\n: \"\"\n}\n\n{/* График Год */}\n{showCharts4 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"dark\"\n                  value={<></>}\n                  title=\"\"\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}} /></>}\n                  chart={\n                    <Chart \n                      data={yearWorkers}\n                      data2={[]} \n                      // data2={\n                      //   [\n                      //     { name: 'Январь', value: 0 },\n                      //     { name: 'Февраль', value: 0 },\n                      //     { name: 'Март', value: 0 },\n                      //     { name: 'Апрель', value: 0 },\n                      //     { name: 'Май', value: 1 },\n                      //     { name: 'Июнь', value: 0 },\n                      //     { name: 'Июль', value: 0 },\n                      //     { name: 'Август', value: 2 },\n                      //     { name: 'Сентябрь', value: 2 },\n                      //     { name: 'Октябрь', value: 0 },\n                      //     { name: 'Ноябрь', value: 0 },\n                      //     { name: 'Декабрь', value: 0 },\n                      //   ]\n                      // }\n                      width={widthGrafik} height={350} \n                    />             \n                  }\n                />\n: \"\"\n}\n\n{/* График Период */}\n{showCharts5 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"success\"\n                  value={<></>}\n                  title=\"\"\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}} /></>}\n                  chart={\n                    <Chart \n                      data={yearWorkers} \n                      data2={[]}  \n                      // data2={\n                      //   [\n                      //     { name: 'Январь', value: 0 },\n                      //     { name: 'Февраль', value: 0 },\n                      //     { name: 'Март', value: 0 },\n                      //     { name: 'Апрель', value: 0 },\n                      //     { name: 'Май', value: 1 },\n                      //     { name: 'Июнь', value: 0 },\n                      //     { name: 'Июль', value: 0 },\n                      //     { name: 'Август', value: 2 },\n                      //     { name: 'Сентябрь', value: 2 },\n                      //     { name: 'Октябрь', value: 0 },\n                      //     { name: 'Ноябрь', value: 0 },\n                      //     { name: 'Декабрь', value: 0 },\n                      //   ]\n                      // }                 \n                      width={widthGrafik} \n                      height={350} \n                    />             \n                  }\n                />\n: \"\"\n}\n\n\n                {/* Вкладки */}\n                <CNav variant=\"tabs\" className='dark-theme'>\n                      <CNavItem>\n                        <CNavLink \n                          style={{background: activeKey !== 2 ? '#08080869' : '', cursor: 'pointer'}} \n                          onClick={() => openHub('Workhub')} \n                          active={activeKey === 2}>\n                            Workhub\n                        </CNavLink>\n                      </CNavItem>\n                      <CNavItem>\n                        <CNavLink \n                          style={{background: activeKey !== 1 ? '#08080869' : '', cursor: 'pointer'}} \n                          onClick={() => openHub('Renthub')} \n                          active={activeKey === 1}>\n                            Renthub\n                        </CNavLink>\n                      </CNavItem>\n                </CNav>\n                \n                <CCard className='rounded-bottom' style={{borderRadius: '0px', borderColor: '#131c21', borderTopRightRadius: '0.375rem'}}>\n                  <CCardBody id=\"Renthub\" style={{display: showRenthub ? 'block' : 'none'}}>\n                    <CRow>\n                      <CCol xs>\n                        <CCard className=\"mb-4\">\n                          <CCardHeader style={{textAlign: 'left'}}>Пользователи бота ({clients.length - 1})</CCardHeader>\n                          <CCardBody>\n                            <CRow>\n                              <CCol xs={12} md={6} xl={6}>\n                                <CRow>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                                      <div className=\"text-medium-emphasis small\">Новые клиенты</div>\n                                      <div className=\"fs-5 fw-semibold\">{newClients.length}</div>\n                                    </div>\n                                  </CCol>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Постоянные клиенты</div>\n                                      <div className=\"fs-5 fw-semibold\">{oldClients.length-1}</div>\n                                    </div>\n                                  </CCol>\n                                </CRow>\n                              </CCol>\n\n                              <CCol xs={12} md={6} xl={6}>\n                                <CRow>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Просмотры</div>\n                                      <div className=\"fs-5 fw-semibold\">-</div>\n                                    </div>\n                                  </CCol>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Другое</div>\n                                      <div className=\"fs-5 fw-semibold\">-</div>\n                                    </div>\n                                  </CCol>\n                                </CRow>\n\n                                <div className=\"mb-5\"></div>\n\n                              </CCol>\n                            </CRow>\n\n                          {loading ? \n                                      \n                            <CSpinner/> :\n\n                            <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                              <CTableHead className='table-dark'>\n                                <CTableRow>\n                                  <CTableHeaderCell style={{width: '30px'}}>№</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>\n                                    <CIcon icon={cilPeople} />\n                                  </CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '160px'}}>Пользователь</CTableHeaderCell>                             \n                                  <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Организация</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Телефон</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '80px'}}>Город</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>TG ID</CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '100px'}}>Использование</CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '100px'}}>Активность</CTableHeaderCell>\n                                </CTableRow>\n                              </CTableHead>\n                              <CTableBody>\n                                {contacts.map((item, index) => (\n                                  <CTableRow v-for=\"item in tableItems\" key={index}>\n                                    <CTableDataCell className=\"text-center\">\n                                      {index+1}\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                        <CAvatar size=\"md\" src={item.avatar ? host + item.avatar : avatar2} alt='' />\n                                    </CTableDataCell>\n                                    <CTableDataCell>\n                                      <div>{item.user.name}</div>\n                                      <div className=\"small text-medium-emphasis\">\n                                      </div>\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      {item.company ? <div>{item.company}</div> : ''}\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      <div>{item.phone}</div>\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      <div>{item.city}</div>\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      <div>{item.TG_ID}</div>\n                                    </CTableDataCell>\n                                    <CTableDataCell>\n                                      <div className=\"clearfix\">\n                                        <div className=\"float-start\">\n                                          <strong>{item.usage.value}%</strong>\n                                        </div>\n                                        <div className=\"float-end\">\n                                          <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                                        </div>\n                                      </div>\n                                      <CProgress thin color={item.usage.color} value={item.usage.value} />\n                                    </CTableDataCell>\n                                    <CTableDataCell>\n                                      <div className=\"small text-medium-emphasis\">Последний вход</div>\n                                      <strong>{item.activity}</strong>\n                                    </CTableDataCell>\n                                  </CTableRow>\n                                ))}\n                              </CTableBody>\n                            </CTable>\n                          }\n                          </CCardBody>\n                        </CCard>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n\n{/*-------------------------------------------------------------------------------------------  */}\n     \n                  <CCardBody id=\"Workhub\" style={{display: showWorkhub ? 'block' : 'none'}}>\n                    <CRow>\n                      <CCol xs>\n                            <CRow>\n                              <CCol md={6} style={{textAlign: 'left'}}>\n                                <CButton color=\"dark\" onClick={()=>showBlock(1)} style={{marginRight: '20px', width: '100px'}}>Сутки</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(2)} style={{marginRight: '20px', width: '100px'}}>Неделя</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(3)} style={{marginRight: '20px', width: '100px'}}>Месяц</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(4)} style={{marginRight: '20px', width: '100px'}}>Год</CButton>\n                              </CCol>\n                              <CCol md={6} style={{textAlign: 'center', display: 'flex'}}>\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate1}\n                                  onChange={changeDate1}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"01.01.2024\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}}    \n                                                  />}\n                                </InputMask>\n\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate2}\n                                  onChange={changeDate2}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"31.12.2024\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}} \n                                                  />}\n                                </InputMask>                             \n                                            \n                                <CButton color=\"dark\" onClick={()=>showBlock(5)} style={{marginLeft: '10px'}}>Применить</CButton>\n                              </CCol>      \n                            </CRow>\n                            \n                            <br/>\n                            <CRow className=\"mb-3\">\n                              <CCol sm={3} >\n                                <CFormInput placeholder=\"Поиск специалиста...\" onChange={(e)=>setText(e.target.value)} aria-label=\"workers\"/>\n                              </CCol>\n                            </CRow>\n                            \n                            <CRow>\n                              <CCol style={{textAlign: 'center'}}>\n                              {loading2 ? \n                                      \n                                <CSpinner/> :\n\n                                <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                                  <CTableHead className='table-light'>\n                                    <CTableRow>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '90px'}}>Дата</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '70px'}}>Время</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '250px'}}>ФИО</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '150px'}}>Город</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Специальность</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '140px'}}>Дата рождения</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '160px'}}>Телефон</CTableHeaderCell>                         \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '120px'}}>Ник</CTableHeaderCell>\n                                    </CTableRow>\n                                  </CTableHead>\n                                  <CTableBody>                                  \n                                    {sortWorkers.map((item, index) => (\n                                      <CTableRow v-for=\"item in tableItems\" key={index}>\n                                        <CTableDataCell className=\"text-center\">\n                                          {String(new Date(item.createDate).getDate()).padStart(2, \"0\")+ \".\"+ String(new Date(item.createDate).getMonth()+1).padStart(2, \"0\") + \".\" +new Date(item.createDate).getFullYear()}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {new Date(item.createDate).getHours() + ' : '+ String(new Date(item.createDate).getMinutes()).padStart(2, \"0\")}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 || item.userfamily === 'Неизвестный' ? '#cd3838' : ''}}>\n                                            {item.userfamily ? item.userfamily : ''} {item.username ? item.username : ''} {item.from ? (item.from === 'Notion' ? \"[N]\" : '')  : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {item.city ? item.city : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{textAlign: 'left'}}>\n                                          <table>\n                                            {item.worklist !== '' ? (JSON.parse(item.worklist)).map((spec, index)=>( \n                                                <tr key={index}>\n                                                  <td>{spec.spec !== '' ? \"- \" + spec.spec : ''}</td>\n                                                </tr>          \n                                            )) : \"\"}\n                                          </table>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 ? 'red' : ''}}>\n                                          {item.dateborn ? item.dateborn : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div>{item.phone ? item.phone : ''}</div>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div>{showNick ? specusers.find((user) => user.chatId === item.chatId)?.username : item.chatId}</div>\n                                        </CTableDataCell> \n                                      </CTableRow>\n                                      ))\n                                    }\n                                </CTableBody>                   \n                              </CTable>\n                              \n                            }\n                            \n                              </CCol>\n                            </CRow>\n                            <CRow>\n                              <CCol>\n                                Всего: {sortWorkers.length}\n                              </CCol>\n                            </CRow>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n                </CCard>\n\n                </>\n\n                </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Admin\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = ({users, projects, companys}) => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              {users} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title=\"Заказчики\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {projects} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title=\"Проекты\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {companys}{' '}\n              {/* <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title=\"Компании\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              44{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Часы [за год]\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n"],"names":["id","name","icon","models","_ref","soundUsers","lightUsers","videoUsers","stagehandsUsers","_jsxs","CRow","children","_jsx","CCol","sm","lg","CWidgetStatsA","className","color","value","_Fragment","title","action","src","Sound","alt","width","chart","CChartLine","style","height","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","Light","Video","fill","Stagehands","CChartBar","barPercentage","drawTicks","cateringUsers","photoUsers","partyUsers","gamesUsers","Photo","Catering","Party","Games","riggerUsers","productionUsers","stagegroundUsers","trucksUsers","Riggers","Production","StageGround","Trucks","grafik","useRef","clients","useUsersContext","users","zakazchiki","managers","projs","projects","comps","companys","specusers","userWorkers","workers","_useState","useState","_useState2","_slicedToArray","contacts","setContacts","_useState3","_useState4","setProjects","_useState5","_useState6","newClients","setNewClients","_useState7","_useState8","oldClients","setOldClients","_useState9","_useState10","loading","setLoading","_useState11","_useState12","loading2","setLoading2","_useState13","_useState14","sortWorkers","setSortWorkers","_useState15","_useState16","newWorkers","setNewWorkers","_useState17","_useState18","activWorkers","setActivWorkers","_useState19","_useState20","catCount","setCatCount","_useState21","_useState22","dayWorkers","setDayWorkers","_useState23","_useState24","weekWorkers","setWeekWorkers","_useState25","_useState26","monthWorkers","setMonthWorkers","_useState27","_useState28","yearWorkers","setYearWorkers","_useState29","_useState30","showRenthub","setShowRenthub","_useState31","_useState32","showWorkhub","setShowWorkhub","_useState33","_useState34","activeKey","setActiveKey","_useState35","_useState36","showWidget","setShowWidget","_useState37","_useState38","showWidget2","setShowWidget2","_useState39","_useState40","showWidget3","setShowWidget3","_useState41","_useState42","showWidget4","setShowWidget4","_useState43","_useState44","showWidget5","setShowWidget5","_useState45","_useState46","showCharts","setShowCharts","_useState47","_useState48","showCharts2","setShowCharts2","_useState49","_useState50","showCharts3","setShowCharts3","_useState51","_useState52","showCharts4","setShowCharts4","_useState53","_useState54","showCharts5","setShowCharts5","_useState55","_useState56","showNick","setShowNick","_useState57","_useState58","_useState59","_useState60","tabhub","setTabhub","_useState61","_useState62","periodDate1","setPeriodDate1","_useState63","_useState64","periodDate2","setPeriodDate2","_useState65","_useState66","timerId","setTimerId","_useState67","_useState68","widthGrafik","setWdthGrafik","_useState69","_useState70","text","setText","chatAdminId","process","useEffect","setTimeout","console","log","current","offsetWidth","filteredData","filter","user","userfamily","username","chatId","toLowerCase","includes","currentMonth","Date","getMonth","arr1","item","createDate","arr2","date","arrClients","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","messages","filteredClients","clientSort","wrap","_context","prev","next","getAllMessages","sent","map","client","index","userObject","_toConsumableArray","findIndex","manager","tgID","userObject2","find","company","man","companyName","companyCity","city","lastDate","split","d","year","getFullYear","month","String","padStart","day","getDate","newDateActivity","concat","newClientName","allMessages","length","fromAdmin","el","senderId","messagesUsers","arr","message","newObj","avatar","new","registered","TG_ID","phone","usage","Math","round","period","activity","push","sort","a","b","stop","apply","arguments","arrProjects","_ref3","_callee3","_context3","_ref4","_callee2","project","newProject","_context2","start","time_start","created","time_created","teh","_x","openHub","hub","showBlock","ind","clearTimeout","i","setInterval","clientWidth","count_cat","needDate","now","getTime","categories","specData","category","JSON","parse","worklist","work","cat","obj","count","days1","countSpec","_loop","_i","arrSpec","getHours","week2","nameDay","_loop2","_i3","getDay","carrentDate","month3","_loop3","_i5","year4","nameMonth","_loop4","_i7","hideCharts","AppSidebar","AppHeader","tabs","CContainer","Suspense","fallback","CSpinner","WidgetsDropdown","WidgetsDropdown2","newUsers","activeUsers","delUsers","WidgetsDropdown3","WidgetsDropdown4","WidgetsDropdown5","ref","CIcon","cilX","onClick","cursor","Chart","data2","CNav","variant","CNavItem","CNavLink","background","active","CCard","borderRadius","borderTopRightRadius","CCardBody","xs","CCardHeader","textAlign","md","xl","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","cilPeople","CTableBody","CTableDataCell","CAvatar","size","avatar2","CProgress","thin","CButton","marginRight","InputMask","mask","onChange","e","target","inputProps","CFormInput","_objectSpread","placeholder","disableUnderline","marginLeft","minWidth","_specusers$find","getMinutes","dateborn","from","spec","AppFooter","CDropdown","alignment","CDropdownToggle","caret","cilOptions","CDropdownMenu","CDropdownItem","disabled","cilArrowBottom"],"sourceRoot":""}