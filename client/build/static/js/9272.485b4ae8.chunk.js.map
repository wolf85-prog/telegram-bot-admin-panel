{"version":3,"file":"static/js/9272.485b4ae8.chunk.js","mappings":"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","sources":["chat-app-new/components/Sidebar/Contact.jsx","chat-app-new/components/Sidebar/index.jsx","chat-app-new/pages/Chat/components/EmojiTray.jsx","chat-app-new/pages/Chat/components/useAutosizeTextArea.ts","chat-app-new/pages/Chat/components/ChatInput.jsx","chat-app-new/pages/Chat/components/Header.jsx","chat-app-new/pages/Chat/components/ChatSidebar.jsx","chat-app-new/pages/Chat/components/Search.jsx","chat-app-new/components/Checkbox/index.jsx","chat-app-new/pages/Chat/components/Profile.jsx","chat-app-new/pages/Chat/components/Convo.jsx","chat-app-new/pages/Chat/index.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport Icon from \"./../../components/Icon\";\nimport { Link } from \"react-router-dom\";\nimport formatTime from \"./../../utils/formatTime\";\nimport { useUsersContext } from \"./../../context/usersContext\";\nimport { AccountContext } from '../../../chat-app-new/context/AccountProvider'\nimport avatarDefault from \"./../../assets/images/no-avatar.png\";\nimport { CSpinner} from '@coreui/react'\n\nconst Contact = ({ contact }) => {\n\t\n\tconst { setPerson } = useContext(AccountContext);\n\tconst host = process.env.REACT_APP_API_URL\n\t\n\t//сделать пользователя непрочитанным\n\tconst { setUserAsUnread, usersOnline, setCountMessage } = useUsersContext();\n\n\tconst status = usersOnline.find(item => item.userId == contact.chatId)\n\n\t//обработка нажатия на пользователя из списка\n    const getUser = async () => {\n        setPerson({\n            name: contact.name, \n            id: contact.chatId, \n\t\t\tavatar: contact.avatar\n        });\n\t\tsetUserAsUnread(contact.chatId)\n\t\tsetCountMessage(0)\n    }\n\n\tconst getLastMessage = () => {\n\t\tconst messageDates = Object.keys(contact.messages);\t\n\t\tlet recentMessageDate\n\t\t\n\t\tmessageDates.length !== 0 \t\n\t\t? recentMessageDate = messageDates[messageDates.length - 1]\n\t\t: recentMessageDate = '2000-01-01'\n\n\t\tlet messages = [];\n\t\tif (JSON.stringify(contact.messages) !== '{}') {\n\t\t\tmessages = [...contact.messages[recentMessageDate]];\n\t\t}\t\n\n\t\tif (messages.length) {\n\t\t\tconst lastMessage = messages.pop();\n\t\t\treturn lastMessage;\n\t\t} \n\t\tconst lastMessage = '';\n\t\treturn lastMessage;\n\t};\n\n\tconst lastMessage = getLastMessage(contact);\n\n\t//const lastMessage =  contact.message ? contact.message : '' //getLastMessage(contact);\n\n\treturn (\n\t\t<Link\n\t\t\tclassName=\"sidebar-contact\"\n\t\t\tonClick={() => getUser()}\n\t\t>\n\t\t\t{/* <div className=\"sidebar-contact__status-wrapper\">\n\t\t\t\t{status \n\t\t\t\t? <img\n\t\t\t\t\tsrc={Status}\n\t\t\t\t\talt=\"status\" \n\t\t\t\t\tclassName=\"status-adm\"\n\t\t\t\t/> \n\t\t\t\t: ''}\n\t\t\t</div> */}\n\t\t\t<div className=\"sidebar-contact__avatar-wrapper\">\n\t\t\t\t{\n\t\t\t\t\tcontact.avatar\n\t\t\t\t\t? <img src={`${host}${contact.avatar}`} alt='' className=\"avatar-adm\" />\n\t\t\t\t\t: <img src={avatarDefault} alt='' className=\"avatar-adm\" />\n\t\t\t\t}\t\t\t\t\n\t\t\t</div>\n\t\t\t<div className=\"sidebar-contact__content\">\n\t\t\t\t<div className=\"sidebar-contact__top-content\">\n\t\t\t\t\t<h2 className=\"sidebar-contact__name\"> {contact.name}</h2>\n\t\t\t\t\t<span className=\"sidebar-contact__time\">\n\t\t\t\t\t\t{/* { lastMessage ? \n\t\t\t\t\t\t\tlastMessage === ''  ? '' : formatTime(lastMessage.time)\n\t\t\t\t\t\t\t:<CSpinner />\n\t\t\t\t\t\t} */}\n\t\t\t\t\t\t{lastMessage === ''  ? '' : formatTime(lastMessage.time)}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"sidebar-contact__bottom-content\">\n\t\t\t\t\t<p className=\"sidebar-contact__message-wrapper\">\n\t\t\t\t\t\t{lastMessage.status && (\n\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\tid={\n\t\t\t\t\t\t\t\t\tlastMessage?.status === \"sent\" ? \"singleTick\" : \"doubleTick\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taria-label={lastMessage?.status}\n\t\t\t\t\t\t\t\tclassName={`sidebar-contact__message-icon ${\n\t\t\t\t\t\t\t\t\tlastMessage?.status === \"read\"\n\t\t\t\t\t\t\t\t\t\t? \"sidebar-contact__message-icon--blue\"\n\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName={`sidebar-contact__message ${\n\t\t\t\t\t\t\t\t!!contact.unread ? \"sidebar-contact__message--unread\" : \"\"\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{contact.typing ? <i> печатает...</i> : lastMessage?.content}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"sidebar-contact__icons\">\n\t\t\t\t\t\t{contact.pinned && (\n\t\t\t\t\t\t\t<Icon id=\"pinned\" className=\"sidebar-contact__icon\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!!contact.unread && (\n\t\t\t\t\t\t\t<span className=\"sidebar-contact__unread\">{contact.unread}</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<button aria-label=\"sidebar-contact__btn\">\n\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\tid=\"downArrow\"\n\t\t\t\t\t\t\t\tclassName=\"sidebar-contact__icon sidebar-contact__icon--dropdown\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Link>\n\t);\n};\n\nexport default Contact;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles/main.css\";\nimport avatar from \"./../../assets/images/logo_chat_admin.png\";\nimport Icon from \"./../../components/Icon\";\nimport Contact from \"./Contact\";\nimport OptionsBtn from \"./../../components/OptionsButton\";\nimport { useUsersContext } from \"./../../context/usersContext\";\nimport { CSpinner} from '@coreui/react'\n\nimport { getContacts, getConversation, getMessages, getLastMessages } from '../../../http/chatAPI'\n\nconst Sidebar = () => {\n\tconst { users: clients, setUsers} = useUsersContext();\n\t//const { users, setUsers, contacts, setContacts} = useUsersContext();\n\n    const chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID \n\n\tconst [contacts, setContacts]= useState([]);\n\tconst [text, setText]= useState(\"\");\n\tconst [loading, setLoading]= useState(true);\n\tconst [users2, setUsers2] = useState([])\n\n\tconst navigate = useNavigate()\n\n\t// useEffect(() => {\n\t// \tconst fetchData = async () => {\n\t// \t\tsetLoading(true)\n\n\t// \t\t\tlet contacts = await getContacts();\n\t// \t\t\tconsole.log(\"contacts size: \", contacts.length)\n\t\t\n\t// \t\t\tconst arrayContact = []\n\t\t\n\t// \t\t\tcontacts.map(async (user, index) => {\n\t\n\t// \t\t\t\tlet first_name = user.firstname != null ? user.firstname : ''\n\t// \t\t\t\tlet last_name = user.lastname != null ? user.lastname : ''\n\t\n\t// \t\t\t\tlet chatName = user.username ? user.username : first_name + ' ' + last_name\n\t\n\t// \t\t\t\tconst newUser = {\n\t// \t\t\t\t\tid: user.id,\n\t// \t\t\t\t\tname: chatName,\n\t// \t\t\t\t\tchatId: user.chatId,\n\t// \t\t\t\t\tavatar: user.avatar,\n\t// \t\t\t\t\tconversationId: '',\n\t// \t\t\t\t\tunread: 0, \n\t// \t\t\t\t\tpinned: false,\n\t// \t\t\t\t\ttyping: false,\n\t// \t\t\t\t\tmessage:  '',\n\t// \t\t\t\t\tdate: '',\n\t// \t\t\t\t\tmessages: '', // { \"01/01/2023\": arrayMessage,\"Сегодня\":[] },\t\n\t// \t\t\t\t}\n\t// \t\t\t\tarrayContact.push(newUser)\n\t// \t\t\t})\n\t\n\t// \t\t\t//подгрузка контактов\n\t// \t\t\tsetTimeout(() => {\n\t\n\t// \t\t\t\tsetUsers(arrayContact)\n\t// \t\t\t\tsetContacts(arrayContact)\n\t\n\t// \t\t\t\tsetLoading(false)\n\n\t// \t\t\t}, 1000)\n\t// \t\t};\n\n\t// \t\t//все сообщения заказчиков\n\t// \t\tfetchData();\n\t\t\t\n\t// }, [])\n\n\t// //подгрузка сообщений\n  \t// useEffect(() => {\n\t// \t//КЭШ браузера\n\t// \tconst retrievedData = localStorage.getItem(\"contacts\");\n\t// \tconst contactsStorage = JSON.parse(retrievedData ? retrievedData : [])\n\n    // \tconst arrayContact = []\n\n\t// \t//если есть кэш браузера\n\t// \tif (contactsStorage.length > 0) {\n\t// \t\tsetUsers2(contactsStorage)\n\t// \t} else {\n\t// \t\tusers.map(async (user, index) => {\n\t// \t\t\tlet conversationId = await getConversation(user.chatId)\n\n\t// \t\t\t//получить последнее сообщение\n\t// \t\t\tlet message = await getLastMessages(conversationId)\n\t\t\t\n\t// \t\t\tlet newMessage = ''\n\t// \t\t\tlet dateMessage = \"2000-01-01T00:00:00\"\n\n\t// \t\t\tif (message) {\n\t// \t\t\t\tdateMessage = message ? message.createdAt : \"2000-01-01T00:00:00\";\t\t\n\n\t// \t\t\t\tconst d = new Date(message?.createdAt);\n\t// \t\t\t\tconst year = d.getFullYear();\n\t// \t\t\t\tconst month = String(d.getMonth()+1).padStart(2, \"0\");\n\t// \t\t\t\tconst day = String(d.getDate()).padStart(2, \"0\");\n\t// \t\t\t\tconst chas = d.getHours();\n\t// \t\t\t\tconst minut = String(d.getMinutes()).padStart(2, \"0\");\n\n\t// \t\t\t\tconst newDateMessage = `${day}.${month}.${year}`\n\n\t// \t\t\t\tnewMessage = {\n\t// \t\t\t\t\tdate: newDateMessage,\n\t// \t\t\t\t\tcontent: message?.text,\n\t// \t\t\t\t\timage: message?.type === 'image' ? true : false,\n\t// \t\t\t\t\tdescript: message?.buttons ? message.buttons : '',\n\t// \t\t\t\t\tsender: message?.senderId,\n\t// \t\t\t\t\ttime: chas + ' : ' + minut,\n\t// \t\t\t\t\tstatus: 'sent',\n\t// \t\t\t\t\tid:message?.messageId,\n\t// \t\t\t\t\treply:message?.replyId,\n\t// \t\t\t\t}\n\t// \t\t\t}\n\n\t// \t\t\tconst newUser = {\n\t// \t\t\t\tid: user.id,\n\t// \t\t\t\tname: user.name,\n\t// \t\t\t\tchatId: user.chatId,\n\t// \t\t\t\tavatar: user.avatar,\n\t// \t\t\t\tconversationId: conversationId,\n\t// \t\t\t\tunread: 0, \n\t// \t\t\t\tpinned: false,\n\t// \t\t\t\ttyping: false,\n\t// \t\t\t\tmessage:  newMessage , //lastMessage,\n\t// \t\t\t\tdate: dateMessage,\n\t// \t\t\t\tmessages: '', // { \"01/01/2023\": arrayMessage,\"Сегодня\":[] },\t\n\t// \t\t\t}\n\t// \t\t\tarrayContact.push(newUser)\n\n\t// \t\t\tsetTimeout(() => {\t\n\t// \t\t\t\tconsole.log(\"arrayContact: \", arrayContact)\t\n\t// \t\t\t\tlocalStorage.setItem('contacts', JSON.stringify(arrayContact));\n\t// \t\t\t\tsetUsers2(arrayContact)\n\t// \t\t\t}, 10000)\n\t// \t\t})\n\t// \t}\n\t// }, [users])\n\n\t// //сортировка\n\t// useEffect(()=> {\n\t// \tconst sortedClients = [...users2].sort((a, b) => {       \n\t// \t\tvar dateA = new Date(a.date), dateB = new Date(b.date) \n\t// \t\treturn dateB-dateA  //сортировка по убывающей дате  \n\t// \t})\n\t\t\t\t\n\t// \tsetContacts(sortedClients)\n\n\t// }, [users2])\n\n\t\n\t\n\t// useEffect(() => {\n\t\n\t// \tconst filteredData = contacts.filter(user=> (user.name)?.toLowerCase().includes(text.toLowerCase()));\n    //     setContacts(filteredData);      \n    // }, [text]);\n\n\n\tuseEffect(() => {\n\t\t//сортировка\n\t\tconst userSort = [...clients].sort((a, b) => {       \n\t\t\tvar dateA = new Date(a.date), dateB = new Date(b.date) \n\t\t\treturn dateB-dateA  //сортировка по убывающей дате  \n\t\t})\n\t\tsetContacts(userSort)\n\n\t\t//console.log(\"clients: \", clients)\n\n\t\tif(clients.length > 0) {\n\t\t\tsetLoading(false)\n\t\t}\n\t},[clients])\n\n\tuseEffect(() => {\n\t\tconst filteredData = clients.filter(user=> (user.name)?.toLowerCase().includes(text.toLowerCase()));\n        setContacts(filteredData);      \n    }, [text]);\n\n\n\n\tconst onSelected = (index) => {\n\t\tswitch(index) {\n\t\t\tcase 0: //данные о контакте\n\t\t\t\tconsole.log('Профиль')\n\t\t\t\tbreak\n\t\t  \n\t\t\tcase 1: \n\t\t\t\tconsole.log('1')\n\t\t\t\tbreak\n\t\t\t\n\t\t\tcase 4: \n\t\t\t\tnavigate(\"/dashboard\");\n\t\t\t\tbreak\n\t\t  \n\t\t\tdefault:\n\t\t\t\tconsole.log(\"В разработке\")\n\t\t\t\tbreak\n\t\t  }\n\t};\n\n\treturn (\n\t\t<aside className=\"sidebarB\">\n\t\t\t{/* Header */}\n\t\t\t<header className=\"headerB\">\n\t\t\t\t<div className=\"sidebar__avatar-wrapper\">\n\t\t\t\t\t<img src={avatar} alt='U.L.E.Y' className=\"avatar-adm\" />\n\t\t\t\t</div>\n\t\t\t\t<div>Менеджеры</div>\n\t\t\t\t<div className=\"sidebar__actions\">\n\t\t\t\t\t<OptionsBtn\n\t\t\t\t\t\tclassName=\"sidebar__action\"\n\t\t\t\t\t\tariaLabel=\"Menu\"\n\t\t\t\t\t\ticonId=\"menu\"\n\t\t\t\t\t\ticonClassName=\"sidebar__action-icon\"\n\t\t\t\t\t\tonSelected={onSelected}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\"Профиль\",\n\t\t\t\t\t\t\t// \"Архив\",\n\t\t\t\t\t\t\t// \"Избранные сообщения\",\n\t\t\t\t\t\t\t// \"Настройки\",\n\t\t\t\t\t\t\t// \"Вернуться в панель управления\",\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t\n\t\t\t{/* Search */}\n\t\t\t<div className=\"search-wrapper\">\n\t\t\t\t<div className=\"search-icons\">\n\t\t\t\t\t<Icon id=\"search\" className=\"search-icon\" />\n\t\t\t\t\t<button className=\"search__back-btn\">\n\t\t\t\t\t\t<Icon id=\"back\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<input \n\t\t\t\t\tclassName=\"search\" \n\t\t\t\t\tplaceholder=\"Поиск менеджера\" \n\t\t\t\t\tonChange={(e)=>setText(e.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t\n\t\t\t{/* Conversations */}\n\t\t\t<div className=\"sidebar__contacts\">\n\t\t\t\t{loading ? \n\t\t\t\t<CSpinner style={{margin: '50%'}}/> :\n\t\t\t\tcontacts.map((contact) => (\n\t\t\t\t\tcontact.chatId !== chatAdminId &&\n                    <>   \n\t\t\t\t\t\t<Contact contact={contact} />\n\t\t\t\t\t</>\n\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t</aside>\n\t);\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport Icon from \"./../../../components/Icon\";\n\nconst emojiTabs = [\n\t{ icon: \"recent\", label: \"Recent emojis\", active: true },\n\t{ icon: \"emojiPeople\", label: \"People emojis\", active: false },\n\t{ icon: \"emojiNature\", label: \"Nature emojis\", active: false },\n\t{ icon: \"emojiFood\", label: \"Food emojis\", active: false },\n\t{ icon: \"emojiActivity\", label: \"Activity emojis\", active: false },\n\t{ icon: \"emojiTravel\", label: \"Travel emojis\", active: false },\n\t{ icon: \"emojiObjects\", label: \"Object emojis\", active: false },\n\t{ icon: \"emojiSymbols\", label: \"Symbol emojis\", active: false },\n\t{ icon: \"emojiFlags\", label: \"Flag emojis\", active: false },\n];\n\nconst EmojiTray = ({ showEmojis, newMessage, setNewMessage }) => {\n\tconst addEmoji = (emoji) => {\n\t\tsetNewMessage(newMessage + emoji);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`emojis__wrapper ${\n\t\t\t\tshowEmojis ? \"emojis__wrapper--active\" : \"\"\n\t\t\t}`}\n\t\t>\n\t\t\t<div className=\"emojis__tabs\">\n\t\t\t\t{emojiTabs.map((tab) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`emojis__tab ${tab.active ? \"emojis__tab--active\" : \"\"}`}\n\t\t\t\t\t\tkey={tab.label}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button aria-label={tab.label} key={tab.icon}>\n\t\t\t\t\t\t\t<Icon id={tab.icon} className=\"emojis__tab-icon\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"emojis__content\">\n\t\t\t\t<input className=\"emojis__search\" placeholder=\"Search Emoji\" />\n\t\t\t\t<h4 className=\"emojis__label\"> Smileys {\"&\"} People </h4>\n\t\t\t\t<div className=\"emojis__grid\">\n\t\t\t\t\t{new Array(6).fill(null).map((_, rowIndex) =>\n\t\t\t\t\t\tnew Array(11).fill(null).map((_, colIndex) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\trole=\"img\"\n\t\t\t\t\t\t\t\taria-label=\"emoji\"\n\t\t\t\t\t\t\t\t// onClick={() => addEmoji(\"emoji\")}\n\t\t\t\t\t\t\t\tkey={`${rowIndex}-${colIndex}`}\n\t\t\t\t\t\t\t\tclassName=\"emoji emojis__emoji\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundPositionX: -3 - 44.2 * colIndex,\n\t\t\t\t\t\t\t\t\tbackgroundPositionY: -6 - 52 * rowIndex,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t))\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<h4 className=\"emojis__label\"> Animals {\"&\"} Nature </h4>\n\t\t\t\t<div className=\"emojis__grid\">\n\t\t\t\t\t{new Array(6).fill(null).map((_, rowIndex) =>\n\t\t\t\t\t\tnew Array(11).fill(null).map((_, colIndex) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\trole=\"img\"\n\t\t\t\t\t\t\t\taria-label=\"emoji\"\n\t\t\t\t\t\t\t\t// onClick={() => addEmoji(\"emoji\")}\n\t\t\t\t\t\t\t\tkey={`${rowIndex}-${colIndex}`}\n\t\t\t\t\t\t\t\tclassName=\"emoji emojis__emoji\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundPositionX: -3 - 44.2 * colIndex,\n\t\t\t\t\t\t\t\t\tbackgroundPositionY: -6 - 52 * rowIndex,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t))\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default EmojiTray;\n","import { useEffect } from \"react\";\n\n// Updates the height of a <textarea> when the value changes.\nconst useAutosizeTextArea = (\n  textAreaRef: HTMLTextAreaElement | null,\n  value: string\n) => {\n  useEffect(() => {\n    if (textAreaRef) {\n      \n        // Нам нужно на мгновение сбросить высоту, чтобы получить правильное значение scrollHeight для текстовой области.\n      textAreaRef.style.height = \"0px\";\n      const scrollHeight = textAreaRef.scrollHeight - 40;\n\n      // Затем мы устанавливаем высоту напрямую, вне цикла рендеринга.\n      // Попытка установить это с помощью состояния или ссылки приведет к неправильному значению.\n      textAreaRef.style.height = scrollHeight + \"px\";\n    }\n  }, [textAreaRef, value]);\n};\n\nexport default useAutosizeTextArea;","import React, {useRef} from \"react\";\nimport Icon from \"./../../../components/Icon\";\n\nimport useAutosizeTextArea from \"./useAutosizeTextArea.ts\";\n\nconst attachButtons = [\n\t// { icon: \"attachContacts\", label: \"Choose contact\", click: \"contact\" },\n\t{ icon: \"attachDocument\", label: \"Choose document\", click: \"doc\" },\n\t{ icon: \"attachImage\", label: \"Choose image\", click: \"image\" },\n];\n\nconst ChatInput = ({\n\tshowAttach,\n\tsetShowAttach,\n\tshowEmojis,\n\tsetShowEmojis,\n\tmess,\n\tsetMess,\n\tsubmitNewMessage,\n\tonFileChange,\n}) => {\n\n\tconst textAreaRef = useRef(null);\n\tuseAutosizeTextArea(textAreaRef.current, mess);\n\n\tconst handleChange = (e) => {\n\t\tconsole.log(e.target.value)\n\t\tsetMess(e.target.value)\n\t};\n\n\tconst detectEnterPress = (e) => {\n\t\tif ((e.key === \"Enter\" && !e.shiftKey) || (e.keyCode === 13 && !e.shiftKey) ) {\n\t\t\tsubmitNewMessage();\n\t\t} \n\t};\n\n\treturn (\n\t\t<div className=\"chat__input-wrapper\">\n\t\t\t{showEmojis && (\n\t\t\t\t<button aria-label=\"Close emojis\" onClick={() => setShowEmojis(false)}>\n\t\t\t\t\t<Icon id=\"cancel\" className=\"chat__input-icon\" />\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<button aria-label=\"Emojis\" onClick={() => setShowEmojis(true)}>\n\t\t\t\t<Icon\n\t\t\t\t\tid=\"smiley\"\n\t\t\t\t\tclassName={`chat__input-icon ${\n\t\t\t\t\t\tshowEmojis ? \"chat__input-icon--highlight\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t/>\n\t\t\t</button>\n\t\t\t{showEmojis && (\n\t\t\t\t<>\n\t\t\t\t\t<button aria-label=\"Choose GIF\">\n\t\t\t\t\t\t<Icon id=\"gif\" className=\"chat__input-icon\" />\n\t\t\t\t\t</button>\n\t\t\t\t\t<button aria-label=\"Choose sticker\">\n\t\t\t\t\t\t<Icon id=\"sticker\" className=\"chat__input-icon\" />\n\t\t\t\t\t</button>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t<div className=\"pos-rel\">\n\t\t\t\t<button aria-label=\"Attach\" onClick={() => setShowAttach(!showAttach)}>\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tid=\"attach\"\n\t\t\t\t\t\tclassName={`chat__input-icon ${\n\t\t\t\t\t\t\tshowAttach ? \"chat__input-icon--pressed\" : \"\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t/>\n\t\t\t\t</button>\n\n\t\t\t\t<div\n\t\t\t\t\tclassName={`chat__attach ${showAttach ? \"chat__attach--active\" : \"\"}`}\n\t\t\t\t>\n\t\t\t\t\t{attachButtons.map((btn) => (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"chat__attach-btn\"\n\t\t\t\t\t\t\taria-label={btn.label}\n\t\t\t\t\t\t\tkey={btn.label}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<label htmlFor='fileInput'>\n\t\t\t\t\t\t\t\t<Icon id={btn.icon} className=\"chat__attach-icon\" />\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\tid=\"fileInput\"\n\t\t\t\t\t\t\t\tname=\"photo\"\n\t\t\t\t\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\t\t\t\t\tonChange={(e) => onFileChange(e)}\n\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<textarea\n\t\t\t\tclassName=\"chat__input\"\n\t\t\t\tplaceholder=\"Введите сообщение\"\n\t\t\t\tvalue={mess} \n\t\t\t\tonChange={handleChange} \n\t\t\t\tref={textAreaRef}\t\t\t\n\t\t\t\trows={1}\n\t\t\t/>\n\n\t\t\t<button aria-label=\"Send message\" onClick={submitNewMessage}>\n\t\t\t\t<Icon id=\"send\" className=\"chat__input-icon\" />\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default ChatInput;\n","import React from \"react\";\nimport Icon from \"./../../../components/Icon\";\nimport OptionsBtn from \"./../../../components/OptionsButton\";\nimport avatarDefault from \"./../../../assets/images/no-avatar.png\";\n\nconst Header = ({ user, openProfileSidebar, openSearchSidebar }) => {\n\n\tconst host = process.env.REACT_APP_API_URL\n\n\tconst onSelected = (index) => {\n\t\tswitch(index) {\n\t\t\tcase 0: //данные о контакте\n\t\t\t\topenProfileSidebar()\n\t\t\t\tbreak\n\t\t  \n\t\t\tcase 1: \n\t\t\t\tconsole.log('1')\n\t\t\t\tbreak\n\t\t  \n\t\t\tdefault:\n\t\t\t\tconsole.log(\"В разработке\")\n\t\t\t\tbreak\n\t\t  }\n\t};\n\n\treturn (\n\t\t<header className=\"headerB chat__header\">\n\t\t\t<div className=\"chat__avatar-wrapper\" onClick={openProfileSidebar}>\n\t\t\t\t{\n\t\t\t\t\tuser.avatar\n\t\t\t\t\t? <img src={`${host}${user.avatar}`} alt={user?.name} className=\"avatar-adm\" />\n\t\t\t\t\t: <img src={avatarDefault} alt={user?.name} className=\"avatar-adm\" />\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<div className=\"chat__contact-wrapper\" onClick={openProfileSidebar}>\n\t\t\t\t<h2 className=\"chat__contact-name\"> {user?.name}</h2>\n\t\t\t\t<p className=\"chat__contact-desc\">\n\t\t\t\t\t{user.typing ? \"печатает...\" : \"данные контакта\"}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"chat__actions\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"chat__action\"\n\t\t\t\t\taria-label=\"Search\"\n\t\t\t\t\tonClick={openSearchSidebar}\n\t\t\t\t>\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tid=\"search\"\n\t\t\t\t\t\tclassName=\"chat__action-icon chat__action-icon--search\"\n\t\t\t\t\t/>\n\t\t\t\t</button>\n\t\t\t\t<OptionsBtn\n\t\t\t\t\tclassName=\"chat__action\"\n\t\t\t\t\tariaLabel=\"Menu\"\n\t\t\t\t\ticonId=\"menu\"\n\t\t\t\t\ticonClassName=\"chat__action-icon\"\n\t\t\t\t\tonSelected={onSelected}\n\t\t\t\t\toptions={[\n\t\t\t\t\t\t\"Данные о контакте\",\n\t\t\t\t\t\t// \"Выбрать сообщения\",\n\t\t\t\t\t\t// \"Отключить уведомления\",\n\t\t\t\t\t\t\"Очистить переписку\",\n\t\t\t\t\t\t\"Удалить чат\",\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","import React from \"react\";\nimport Icon from \"./../../../components/Icon\";\n\nconst ChatSidebar = ({ active, closeSidebar, heading, children }) => {\n\treturn (\n\t\t<aside className={`chat-sidebar ${active ? \"chat-sidebar--active\" : \"\"}`}>\n\t\t\t<header className=\"header chat-sidebar__header\">\n\t\t\t\t<button onClick={closeSidebar}>\n\t\t\t\t\t<Icon id=\"cancel\" className=\"chat-sidebar__header-icon\" />\n\t\t\t\t</button>\n\t\t\t\t<h2 className=\"chat-sidebar__heading\"> {heading}</h2>\n\t\t\t</header>\n\t\t\t<div className=\"chat-sidebar__content\">{children}</div>\n\t\t</aside>\n\t);\n};\n\nexport default ChatSidebar;\n","import Icon from \"./../../../components/Icon\";\nimport React from \"react\";\n\nconst Search = () => {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"search-wrapper\">\n\t\t\t\t<div className=\"search-icons\">\n\t\t\t\t\t<Icon id=\"search\" className=\"search-icon\" />\n\t\t\t\t\t<button className=\"search__back-btn\">\n\t\t\t\t\t\t<Icon id=\"back\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<input className=\"search\" placeholder=\"Поиск...\" />\n\t\t\t</div>\n\t\t\t<div className=\"chat-sidebar__search-results\">\n\t\t\t\t<p> Поиск сообщений в чате</p>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Search;\n","import Icon from \"./../../components/Icon\";\nimport React from \"react\";\nimport \"./styles.css\";\n\nconst Checkbox = ({ inputProps }) => {\n\treturn (\n\t\t<div className=\"checkbox\">\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tid=\"checkbox\"\n\t\t\t\t{...inputProps}\n\t\t\t\tclassName=\"checkbox__input\"\n\t\t\t/>\n\t\t\t<label htmlFor=\"checkbox\" className=\"checkbox__label\">\n\t\t\t\t<Icon id=\"check\" className=\"checkbox__icon\" />\n\t\t\t</label>\n\t\t</div>\n\t);\n};\n\nexport default Checkbox;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport media from \"./../../../assets/images/placeholder.jpeg\";\nimport Checkbox from \"./../../../components/Checkbox\";\nimport Icon from \"./../../../components/Icon\";\nimport { editContact, uploadFile, editContactAvatar } from './../../../../http/chatAPI';\nimport { useUsersContext } from \"./../../../context/usersContext\";\nimport { AccountContext } from './../../../context/AccountProvider';\nimport defaultAvatar from \"./../../../assets/images/no-avatar.png\";\n\nconst Profile = ({ user }) => {\n\tconst [username, setUsername] = useState(\"\")\n\tconst [form, setForm] = useState(false)\n\tconst { addNewName, addNewAvatar } = useUsersContext();\n\tconst { setPerson } = useContext(AccountContext);\n\tconst [img, setImg] = useState(null)\n\tconst [showEdit, setShowEdit] = useState(false)\n\tconst input = React.useRef();\n\n\tconst host = process.env.REACT_APP_API_URL\n\n\tuseEffect(() => {\n\t\tsetImg(`${host}${user.avatar}`)\n\t}, [user]);\n\t\n\n\t//кнопка Изменить\n\tconst changeUsername = () => {\n\t\tsetUsername(user.name);  \n\t\tsetForm(true)\n\t}\n\t\n\tconst handleChange = (e) => {\n\t\te.preventDefault();\n\t\tsetUsername(e.target.value);\n\t}\n\n\tconst getUser = async () => {\n        setPerson({\n            name: user.name, \n            id: user.chatId, \n\t\t\tavatar: user.avatar\n        });\n    }\n\t\n\t//сохранить новое имя\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconst newName = {\n\t\t\tusername, \n\t\t}\n\t\t//сохранить в БД\n\t\tawait editContact(newName, user.chatId)\n\n\t\t//сохранить в контексте\n\t\taddNewName(user.chatId, username);\n\t\tgetUser()\n\n\t\tsetForm(false)\n\t}\n\n\tconst handleAvatar = async (e) => {\n\t\te.preventDefault();\n\t\tsetImg(e.target.files[0])\n\t\tsetShowEdit(true)\n\t}\n\n\t//сохранить новый аватар\n\tconst sendFile = React.useCallback(async () => {\n\t\ttry {\n\t\t\tconst data = new FormData();\n            data.append(\"photo\", img);\n\n            let response = await uploadFile(data);\n\t\t\t//console.log(\"response: \", response.data)\n\t\t\t//setAvatar(response.data.path)\n\n\t\t\tconst newAvatar = {\n\t\t\t\tavatar: response.data.path.split('.team')[1], \n\t\t\t}\n\n\t\t\t//сохранить в БД\n\t\t\tawait editContactAvatar(newAvatar, user.chatId)\n\t\t\t\n\t\t\t//сохранить в контексте\n\t\t\taddNewAvatar(user.chatId, response.data.path.split('.team')[1]);\n\n\t\t\t//получить данные из контекста\n\t\t\tgetUser()\n\n\t\t\tsetShowEdit(false)\n\n\t\t} catch (error) {\n\t\t\t\n\t\t}\n\t}, [img])\n\n\treturn (\n\t\t<div className=\"profile\">\n\t\t\t<div className=\"profile__section profile__section--personal\">\n\t\t\t\t<div className=\"profile__avatar-wrapper upload\">\n\t\t\t\t\t{\n\t\t\t\t\t\tuser.avatar\n\t\t\t\t\t\t\t? <img src={`${host}${user.avatar}`} alt={user?.name} className=\"avatar-adm\" />\n\t\t\t\t\t\t\t: <img src={defaultAvatar} alt={user?.name} className=\"avatar-adm\" />\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"round_adm\">\n\t\t\t\t\t\t<input type=\"file\" name=\"photo\" onChange={handleAvatar}/>\n\t\t\t\t\t\t<i className = \"fa fa-camera\" style={{color: '#fff'}}></i>\n\t\t\t\t\t</div>\t\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t{\n\t\t\t\t\tshowEdit \n\t\t\t\t\t? <button className=\"btn_save\" onClick={sendFile}>Сохранить</button>\n\t\t\t\t\t: \"\"\n\t\t\t\t}\n\n\t\t\t\t\n\n\t\t\t\t<p style={{ color: '#d5d5d5'}}>{user.chatId}</p>\n\t\t\t\t{\n\t\t\t\t\tform ? <form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\t\tvalue={username} \n\t\t\t\t\t\t\t\t\tonChange={handleChange} \n\t\t\t\t\t\t\t\t\tref={input}\n        \t\t\t\t\t\t\tonFocus={() => input.current.select()}\n\t\t\t\t\t\t\t\t\tstyle={{borderBottom: '1px solid #0e892e', color: '#d5d5d5'}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"Сохранить\" style={{ color: '#6a6a6a'}} />\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t: <h2 className=\"profile__name\"> {user.name} </h2> \n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\t!form ? <span onClick={changeUsername} style={{cursor: 'pointer', color: '#6a6a6a'}}>Редактировать</span>\n\t\t\t\t\t: \"\"\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<div className=\"profile__section profile__section--media\">\n\t\t\t\t<div className=\"sb profile__heading-wrapper\">\n\t\t\t\t\t<h2 className=\"profile__heading\"> Медиа, ссылки и документы </h2>\n\t\t\t\t\t<button>\n\t\t\t\t\t\t<Icon id=\"rightArrow\" className=\"profile__heading-icon\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"profile__media-wrapper\">\n\t\t\t\t\t<img src={media} alt=\"media\" className=\"profile__media\" />\n\t\t\t\t\t<img src={media} alt=\"media\" className=\"profile__media\" />\n\t\t\t\t\t<img src={media} alt=\"media\" className=\"profile__media\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<ul className=\"profile__section profile__section--actions\">\n\t\t\t\t<li className=\"profile__action\">\n\t\t\t\t\t<p className=\"profile__action-left\">\n\t\t\t\t\t\t<span className=\"profile__action-text profile__action-text--top\">\n\t\t\t\t\t\t\tОтключить уведомления\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"profile__action-right\">\n\t\t\t\t\t\t<Checkbox />\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"profile__action\">\n\t\t\t\t\t<p className=\"profile__action-left\">\n\t\t\t\t\t\t<span className=\"profile__action-text profile__action-text--top\">\n\t\t\t\t\t\t\tОтмеченные сообщения\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<button className=\"profile__action-right\">\n\t\t\t\t\t\t<Icon id=\"rightArrow\" className=\"profile__heading-icon\" />\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"profile__action\">\n\t\t\t\t\t<p className=\"profile__action-left\">\n\t\t\t\t\t\t<span className=\"profile__action-text profile__action-text--top\">\n\t\t\t\t\t\t\tИсчезающие сообщения\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"profile__action-text profile__action-text--bottom\">\n\t\t\t\t\t\t\tOff\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<button className=\"profile__action-right\">\n\t\t\t\t\t\t<Icon id=\"rightArrow\" className=\"profile__heading-icon\" />{\" \"}\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t</ul>\n\n\t\t\t<div className=\"profile__section profile__section--about\">\n\t\t\t\t<div className=\"sb profile__heading-wrapper\">\n\t\t\t\t\t<h2 className=\"profile__heading\"> О компании и номер телефона </h2>\n\t\t\t\t</div>\n\t\t\t\t<ul>\n\t\t\t\t\t<li className=\"profile__about-item\">\n\t\t\t\t\t\tНесколько слов о компании...\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"profile__about-item\">+7 123-12-12</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\n\n\t\t\t<div className=\"profile__section profile__section--danger\">\n\t\t\t\t<Icon id=\"block\" className=\"profile__danger-icon\" />\n\t\t\t\t<p className=\"profile__danger-text\"> Заблокировать </p>\n\t\t\t</div>\n\n\t\t\t<div className=\"profile__section profile__section--danger\">\n\t\t\t\t<Icon id=\"thumbsDown\" className=\"profile__danger-icon\" />\n\t\t\t\t<p className=\"profile__danger-text\"> Сообщить о контакте </p>\n\t\t\t</div>\n\n\t\t\t<div className=\"profile__section profile__section--danger\">\n\t\t\t\t<Icon id=\"delete\" className=\"profile__danger-icon\" />\n\t\t\t\t<p className=\"profile__danger-text\"> Удалить чат </p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Profile;\n","import Icon from \"./../../../components/Icon\";\nimport React, { useContext, useState, useRef } from \"react\";\n// import pdf from \"./../../../assets/images/PDFicon.png\";\nimport docIcon from \"./../../../assets/images/DOCicon.jpg\";\nimport xlsIcon from \"./../../../assets/images/XLSicon.png\";\nimport formatTime from \"./../../../utils/formatTime\";\nimport { AccountContext } from './../../../context/AccountProvider';\nimport { useUsersContext } from \"./../../../context/usersContext\";\nimport { $host } from './../../../../http/index'\nimport { delMessage } from \"src/http/chatAPI\";\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nconst Convo = ({ lastMsgRef, messages: allMessages }) => {\n\tconst { person } = useContext(AccountContext);\n\tconst dates = Object.keys(allMessages);  //['01/01/2023', 'Сегодня']\n\tconst chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID \n\tconst token = process.env.REACT_APP_TELEGRAM_API_TOKEN\n\n\tconst msgRef = useRef([]);\n\n\tlet replyMessage;\n\t\n\tconst { delMessageContext } = useUsersContext();\n\n\t//прокрутка\n\tconst scrollToMsg = (id) => {\n\t\tconsole.log(id)\n\t\t//alert(id)\n\t\tconsole.log(msgRef.current)\n\t\tmsgRef.current[id].scrollIntoView({transition: \"smooth\"});\n\t};\n\n\tconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n\t\t<button\n\t\t\taria-label=\"Message options\"\n\t\t\tclassName=\"chat__msg-options\"\n\t\t\tref={ref}\n\t\t\tonClick={(e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tonClick(e);\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t\t<Icon id=\"downArrow\" className=\"chat__msg-options-icon\" />\t\t\t\t\t\t\t\t\t\t\t\n\t\t</button>\n\t));\n\n\tCustomToggle.displayName = \"Search\";\n\n\tconst CustomMenu = React.forwardRef(\n\t\t({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n\t\t  const [value, setValue] = useState('');\n\t  \n\t\t  return (\n\t\t\t<div\n\t\t\t  ref={ref}\n\t\t\t  style={{backgroundColor: '#20272b'}}\n\t\t\t  className={className}\n\t\t\t  aria-labelledby={labeledBy}\n\t\t\t>\n\t\t\t  <ul className=\"list-unstyled\">\n\t\t\t\t{React.Children.toArray(children).filter(\n\t\t\t\t  (child) =>\n\t\t\t\t\t!value || child.props.children?.toLowerCase().startsWith(value),\n\t\t\t\t)}\n\t\t\t  </ul>\n\t\t\t</div>\n\t\t  );\n\t\t},\n\t);\n\n\tCustomMenu.displayName = CustomMenu\n\n\tconst change = async (eventkey) => {\n\t\t//alert(`you chosen: ${eventkey}`)\n\t\tconst message = JSON.parse(eventkey);\n\n\t\t//удалить сообщение через сокет\n\t\tdelMessageContext(message.id, message.date, message.chatId)\n\n\t\t//удалить сообщение в базе данных\n\t\tdelMessage(message.id)\n\n\t\tconst url_del_msg = `https://api.telegram.org/bot${token}/deleteMessage?chat_id=${person.id}&message_id=${message.id}`\n\n\t\tconst delToTelegram = await $host.get(url_del_msg);\n\n\t\tconsole.log(\"Удаляемое сообщение: \", message.id)\n\t\tconsole.log(\"Дата сообщения: \", message.date)\n\n\t\t//Выводим сообщение об успешной отправке\n\t\tif (delToTelegram) {\n\t\t\tconsole.log('Ваше сообщение удалено из телеграм! ', delToTelegram);\t\n\t\t}           \n\t\t//А здесь сообщение об ошибке при отправке\n\t\telse {\n\t\t\tconsole.log('Что-то пошло не так. Попробуйте ещё раз.');\n\t\t}\t\t\n\t}\n\n\n\treturn dates.map((date, dateIndex) => {\n\t\tconst messages = allMessages[date];\n\t\t\n\t\treturn (\n\t\t\t<div key={dateIndex}>\n\t\t\t\t<div className=\"chat__date-wrapper\">\n\t\t\t\t\t<span className=\"chat__date\"> {date}</span>\n\t\t\t\t</div>\n\t\t\t\t{dateIndex === 0 && (\n\t\t\t\t\t<p className=\"chat__encryption-msg\">\n\t\t\t\t\t\t<Icon id=\"lock\" className=\"chat__encryption-icon\" />\n\t\t\t\t\t\tСообщения шифруются сквозным шифрованием. Никто за пределами этого чата не может читать или слушать их\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\t\t\t\t<div className=\"chat__msg-group\" >\n\t\t\t\t\t{messages.map((message, msgIndex) => {\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t//получить сообщение по его id\n\t\t\t\t\t\tif (message.content?.includes('_reply_')) {\n\t\t\t\t\t\t\treplyMessage = message?.content.split('_reply_')[0] //messages.find(mess=> mess.id === message.content.split('_reply_')[0])\n\t\t\t\t\t   \t} \n\t\t\t\t\t\t\n\t\t\t\t\t\tconst assignRef = () =>\n\t\t\t\t\t\t\tdateIndex === dates.length - 1 && msgIndex === messages.length - 1\n\t\t\t\t\t\t\t\t? lastMsgRef\n\t\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{message.image ? (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={`chat__msg chat__img-wrapper ${\n\t\t\t\t\t\t\t\t\t\t\tmessage.sender !== chatAdminId ? \"chat__msg--rxd\" : \"chat__msg--sent\"\n\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\tref={assignRef()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{message.content.endsWith('.pdf') ? (<figure>\n\t\t\t\t\t\t\t\t\t\t\t{/* <img src={pdf} width={30}/>\n\t\t\t\t\t\t\t\t\t\t\t<a href={message.content} target=\"_blank\" rel=\"noreferrer\">{message.content}</a>*/}\n\t\t\t\t\t\t\t\t\t\t\t<iframe src={message.content} height=\"235px\" width=\"100%\" title=\"myFramePdf\"/>\n\t\t\t\t\t\t\t\t\t\t</figure>) : \n\t\t\t\t\t\t\t\t\t\t\tmessage.content.endsWith('.xlsx') ? <figure> <img src={xlsIcon} width={30}/>\n\t\t\t\t\t\t\t\t\t\t\t<a href={message.content} target=\"_blank\" rel=\"noreferrer\">{message.content}</a> </figure> : \n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tmessage.content.endsWith('.docx') ? <figure> <img src={docIcon} width={30}/>\n\t\t\t\t\t\t\t\t\t\t\t<a href={message.content} target=\"_blank\" rel=\"noreferrer\">{message.content}</a> </figure> : (\n\t\t\t\t\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t\t\t\t\t<a href={message.content} target=\"_blank\" rel=\"noreferrer\"><img src={message.content} alt=\"\" className=\"chat__img\" /></a>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<figcaption style={{textAlign: 'center', backgroundColor: '#607a7a', borderRadius: '5px'}}>{message.descript}</figcaption>\n\t\t\t\t\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t<span className=\"chat__msg-footer\">\n\t\t\t\t\t\t\t\t\t\t\t<span>{formatTime(message.time)}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{!message.sender && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage?.status === \"sent\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"singleTick\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"doubleTick\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label={message?.status}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`chat__msg-status-icon ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage?.status === \"read\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"chat__msg-status-icon--blue\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t<Dropdown onSelect={change}>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu as={CustomMenu}>\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item eventKey={JSON.stringify({id: message.id, date: message.date, chatId: person.id})}>Удалить сообщение</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t\t\t\t</Dropdown>\t\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : message.sender !== chatAdminId ? (\n\t\t\t\t\t\t\t\t\t<p className=\"chat__msg chat__msg--rxd\" ref={assignRef()}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex-row\" ref={el => msgRef.current[message.id] = el} >\n\t\t\t\t\t\t\t\t\t\t\t{/* пересылаемое сообщение */}\n\t\t\t\t\t\t\t\t\t\t\t{message.content?.includes('_reply_') \n\t\t\t\t\t\t\t\t\t\t\t? <div className=\"chat__msg--reply\" onClick={()=>scrollToMsg(message.reply)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"reply__content\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"reply__full\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"reply__left\"></span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"reply__pad\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"reply__contact\">U.L.E.Y</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"reply__text\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* {replyMessage?.content.endsWith('.pdf') ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe src={message.content} height=\"50px\" width=\"50px\" title=\"myFramePdf\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</figure>) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href={replyMessage?.content} target=\"_blank\" rel=\"noreferrer\"><img src={replyMessage?.content} alt=\"\" width='50px' height='50px' /></a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<figcaption style={{textAlign: 'center', backgroundColor: '#607a7a', borderRadius: '5px'}}></figcaption>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{replyMessage?.startsWith('http') ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href={replyMessage} target=\"_blank\" rel=\"noreferrer\"><img src={replyMessage} alt='' width='50px' height='50px' /></a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: replyMessage\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t: <></>}\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {message.content?.startsWith('http') \n\t\t\t\t\t\t\t\t\t\t\t\t? <a className=\"chat__href\" href={message.content} target=\"_blank\" rel=\"noreferrer\">{message.content}</a> \n\t\t\t\t\t\t\t\t\t\t\t\t: message.content.includes('_reply_') ? message.content.split('_reply_')[1] : message.content}  */}\n\t\t\t\t\t\t\t\t\t\t\t\t{message.content?.includes('_reply_') \n\t\t\t\t\t\t\t\t\t\t\t\t? message.content.split('_reply_')[1] \n\t\t\t\t\t\t\t\t\t\t\t\t: message.content}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"chat__msg-filler\"> </span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"chat__msg-footer\">\n\t\t\t\t\t\t\t\t\t\t\t\t{formatTime(message.time)}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown onSelect={change}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu as={CustomMenu}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item eventKey={JSON.stringify({id: message.id, date: message.date, chatId: person.id})}>Удалить сообщение</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<p className=\"chat__msg chat__msg--sent\" ref={assignRef()}>\n\t\t\t\t\t\t\t\t\t\t<div ref={el => msgRef.current[message.id] = el}>\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t{message.content?.startsWith('http') \n\t\t\t\t\t\t\t\t\t\t\t\t? <a className=\"chat__href\" href={message.content} target=\"_blank\" rel=\"noreferrer\">{message.content}</a> \n\t\t\t\t\t\t\t\t\t\t\t\t: message.content}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"chat__msg-filler\"> </span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"chat__msg-footer\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span> {formatTime(message.time)} </span>\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage?.status === \"sent\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"singleTick\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"doubleTick\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label={message?.status}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`chat__msg-status-icon ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage?.status === \"read\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"chat__msg-status-icon--blue\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown onSelect={change}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu as={CustomMenu}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item eventKey={JSON.stringify({id: message.id, date: message.date, chatId: person.id})}>Удалить сообщение</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t});\n};\n\nexport default Convo;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"./styles/main.css\";\nimport EmojiTray from \"./components/EmojiTray\";\nimport ChatInput from \"./components/ChatInput\";\nimport Header from \"./components/Header\";\nimport ChatSidebar from \"./components/ChatSidebar\";\nimport Icon from \"./../../components/Icon\";\nimport Search from \"./components/Search\";\nimport Profile from \"./components/Profile\";\nimport Convo from \"./components/Convo\";\nimport { useUsersContext } from \"./../../context/usersContext\";\nimport { useContext } from 'react';\nimport { AccountContext } from './../../../chat-app-new/context/AccountProvider';\nimport { newMessage, uploadFile, getMessages, getConversation } from './../../../http/chatAPI';\nimport { $host } from './../../../http/index'\n//import sendSound from './../../assets/sounds/sendmessage.mp3';\nimport { CSpinner} from '@coreui/react'\n\n\nconst chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID\nconst token = process.env.REACT_APP_TELEGRAM_API_TOKEN\nconst host = process.env.REACT_APP_HOST\n\nconst Chat = () => {\n\tconst { users, setUsers, setUserAsUnread, addNewMessage } = useUsersContext();\n\tconst { person } = useContext(AccountContext);\n\tconst { setCountMessage } = useUsersContext();\n\n\tconst chatId = person.id;\n\tlet user = users.filter((user) => user.chatId === chatId.toString())[0];\n\n\tconst lastMsgRef = useRef(null);\n\tconst [showAttach, setShowAttach] = useState(false);\n\tconst [showEmojis, setShowEmojis] = useState(false);\n\tconst [showProfileSidebar, setShowProfileSidebar] = useState(false);\n\tconst [showSearchSidebar, setShowSearchSidebar] = useState(false);\n\tconst [file, setFile] = useState();\n\tconst [image, setImage]= useState(\"\");\n\tconst [mess, setMess] = useState(\"\");\n\n\tconst [messages, setMessages] = useState([]);\n\tconst [loading, setLoading]= useState(false);\n\n\tconst [user2, setUser2] = useState();\n\t\n\n\t//const audio = new Audio(sendSound);\n\n\t// useEffect(() => {\n\t// \tconst fetchData = async () => {\n\t// \t\tsetLoading(true)\n\n\t// \t\tlet conversationId = await getConversation(user.chatId)\n\n\t// \t\tlet messages = await getMessages(conversationId)\n\n\t// \t\tconsole.log(\"messages: \", messages)\n\t\t\t\n\n\t// \t\tconst arrayMessage = []\n\t// \t\tconst allDate = []\n\n\t// \t\t\tmessages.map(message => {\n\t// \t\t\t\t\tconst d = new Date(message.createdAt);\n\t// \t\t\t\t\tconst year = d.getFullYear();\n\t// \t\t\t\t\tconst month = String(d.getMonth()+1).padStart(2, \"0\");\n\t// \t\t\t\t\tconst day = String(d.getDate()).padStart(2, \"0\");\n\t// \t\t\t\t\tconst chas = d.getHours();\n\t// \t\t\t\t\tconst minut = String(d.getMinutes()).padStart(2, \"0\");\n\n\t// \t\t\t\t\tconst newDateMessage = `${day}.${month}.${year}`\n\n\t// \t\t\t\t\tconst newMessage = {\n\t// \t\t\t\t\t\tdate: newDateMessage,\n\t// \t\t\t\t\t\tcontent: message.text,\n\t// \t\t\t\t\t\timage: message.type === 'image' ? true : false,\n\t// \t\t\t\t\t\tdescript: message.buttons ? message.buttons : '',\n\t// \t\t\t\t\t\tsender: message.senderId,\n\t// \t\t\t\t\t\ttime: chas + ' : ' + minut,\n\t// \t\t\t\t\t\tstatus: 'sent',\n\t// \t\t\t\t\t\tid:message.messageId,\n\t// \t\t\t\t\t\treply:message.replyId,\n\t// \t\t\t\t\t}\n\t// \t\t\t\t\tarrayMessage.push(newMessage)\n\t// \t\t\t\t\tallDate.push(newDateMessage)\n\t// \t\t\t})\n\n\t// \t\t\tconst dates = [...allDate].filter((el, ind) => ind === allDate.indexOf(el));\n\n\t// \t\t\tlet obj = {};\n\t// \t\t\tfor (let i = 0; i < dates.length; i++) {\n\t// \t\t\t\tconst arrayDateMessage = []\n\t// \t\t\t\tfor (let j = 0; j < arrayMessage.length; j++) {\n\t// \t\t\t\t\tif (arrayMessage[j].date === dates[i]) {\n\t// \t\t\t\t\t\tarrayDateMessage.push(arrayMessage[j])\t\t\t\t\t\t\t\n\t// \t\t\t\t\t}\n\t// \t\t\t\t}\t\n\t// \t\t\t\tobj[dates[i]] = arrayDateMessage;\n\t// \t\t\t}\n\n\t// \t\t\tsetMessages(obj)\n\n\t// \t\t\tlet userIndex = users.findIndex((user) => user.chatId === chatId.toString());\n\t// \t\t\tconst usersCopy = [...users];\n\t// \t\t\tusersCopy[userIndex].messages = obj;\n\t// \t\t\tsetUsers(usersCopy);\n\n\t// \t\t\tsetUser2(usersCopy[userIndex])\n\t// \t\t\tconsole.log(\"user message: \", usersCopy[userIndex].messages)\n\n\t// \t\t\tsetLoading(false)\n\t// \t}\n\n\t// \tfetchData()\n\t// },[person])\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\tscrollToLastMsg();\n\t\t\tsetUserAsUnread(user.chatId);\n\t\t\tsetCountMessage(0)\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tuser && scrollToLastMsg();\n\t}, [users]);\n\n\t//прокрутка\n\tconst scrollToLastMsg = () => {\n\t\tlastMsgRef.current?.scrollIntoView({transition: \"smooth\"});\n\t};\n\n\tuseEffect(() => {\n        const getImage = async () => {\n            if (file) {\n                const data = new FormData();\n                data.append(\"name\", file.name);\n                data.append(\"photo\", file);\n\n               let response = await uploadFile(data);\n\t\t\t   //console.log(\"response: \", response)\n\n               setImage(response.data.path.split('.team')[1]);\n\t\t\t   //сообщение с ссылкой на файл\n\t\t\t   setMess(host + response.data.path.split('.team')[1])\n            }\n        }\n        getImage();\n    }, [file])\n\n\tconst onFileChange = (e) => {\n        setFile(e.target.files[0]);\n    }\n\n\tconst openSidebar = (cb) => {\n\t\t// close any open sidebar first\n\t\tsetShowProfileSidebar(false);\n\t\tsetShowSearchSidebar(false);\n\n\t\t// call callback fn\n\t\tcb(true);\n\t};\n\n\t//функция отправки сообщения\n\tconst sendText = async () => {\n\t\t//Передаем данные боту\n\t\tlet temp=mess.replace(/\\n/g, '%0A'); //экранирование переноса строки\n\t\ttemp = temp.replace(/#/g, '%23'); \t\t //экранирование решетки\n\t\ttemp = temp.replace(/&/g, '%26'); \t\t //экранирование &\n\t\ttemp = temp.replace(/\\+/g, '%2b'); \t\t //экранирование +\n\t\ttemp = temp.replace(/>/g, '%3e'); \t\t //экранирование >\n\t\ttemp = temp.replace(/</g, '%3c'); \t\t //экранирование <\n        const url_send_msg = `https://api.telegram.org/bot${token}/sendMessage?chat_id=${person.id}&parse_mode=html&text=${temp}`\n\t\tconst sendToTelegram = await $host.get(url_send_msg);\n\n\t\t//Выводим сообщение об успешной отправке\n\t\tif (sendToTelegram) {\n\t\t\tconsole.log('Спасибо! Ваша сообщение отправлено! ', sendToTelegram.data.result.message_id);\n\t\t}           \n\t\t//А здесь сообщение об ошибке при отправке\n\t\telse {\n\t\t\tconsole.log('Что-то пошло не так. Попробуйте ещё раз.');\n\t\t}\n\n\t\tlet message = {};\n        if(!file) {\n            message = {\n                senderId: chatAdminId, \n                receiverId: user.chatId,\n                conversationId: user.conversationId,\n                type: \"text\",\n                text: mess,\n                //isBot: false,\n\t\t\t\tmessageId: sendToTelegram.data.result.message_id,\n            }\n\n\t\t\t//сохранить в контексте\n\t\t\taddNewMessage(user.chatId, mess, 'text', '', user.conversationId, sendToTelegram.data.result.message_id);\n        } else {\n            message = {\n                senderId: chatAdminId, \n                receiverId: user.chatId,\n                conversationId: user.conversationId,\n                type: \"image\",\n                text: host + image,\n                //isBot: '',\n\t\t\t\tmessageId: sendToTelegram.data.result.message_id,\n            }\n\n\t\t\t//сохранить в контексте\n\t\t\taddNewMessage(user.chatId, host + image, 'image', '', user.conversationId, sendToTelegram.data.result.message_id);\n        }\n        //console.log(\"message send button: \", message);\n\n\t\t//сохранение сообщения в базе данных\n\t\tawait newMessage(message)\t\n\t}\n\n\tconst submitNewMessage = () => {\n\t\t//audio.play();\n\t\tsendText();\n\n\t\tsetMess(\"\");\n\t\tscrollToLastMsg();\n\t\tsetFile(\"\");\n        setImage(\"\");\n\t};\n\n\n\treturn (\n\t\t<div className=\"chat\">\n\t\t\t<div className=\"chat__body\">\n\t\t\t\t<div className=\"chat__bg\"></div>\n\n\t\t\t\t<Header\n\t\t\t\t\tuser={person}\n\t\t\t\t\topenProfileSidebar={() => openSidebar(setShowProfileSidebar)}\n\t\t\t\t\topenSearchSidebar={() => openSidebar(setShowSearchSidebar)}\n\t\t\t\t/>\n\t\t\t\t<div className=\"chat__content\">\n\t\t\t\t\t{loading ?\n\t\t\t\t\t\t<CSpinner style={{margin: '50%'}}/>\n\t\t\t\t\t\t :<Convo lastMsgRef={lastMsgRef} messages={user.messages} />\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<footer className=\"chat__footer\">\n\t\t\t\t\t<div className=\"chat__footer-wrapper\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"chat__scroll-btn\"\n\t\t\t\t\t\t\taria-label=\"scroll down\"\n\t\t\t\t\t\t\tonClick={scrollToLastMsg}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<Icon id=\"downArrow\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<EmojiTray\n\t\t\t\t\t\t\tshowEmojis={showEmojis}\n\t\t\t\t\t\t\tmess={mess}\n\t\t\t\t\t\t\tsetMess={setMess}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ChatInput\n\t\t\t\t\t\t\tshowEmojis={showEmojis}\n\t\t\t\t\t\t\tsetShowEmojis={setShowEmojis}\n\t\t\t\t\t\t\tshowAttach={showAttach}\n\t\t\t\t\t\t\tsetShowAttach={setShowAttach}\n\t\t\t\t\t\t\tonFileChange={onFileChange}\n\t\t\t\t\t\t\tmess={mess}\n\t\t\t\t\t\t\tsetMess={setMess}\n\t\t\t\t\t\t\tsubmitNewMessage={submitNewMessage}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t</div>\t\t\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t\t<ChatSidebar\n\t\t\t\theading=\"Поиск сообщения\"\n\t\t\t\tactive={showSearchSidebar}\n\t\t\t\tcloseSidebar={() => setShowSearchSidebar(false)}\n\t\t\t>\n\t\t\t\t<Search />\n\t\t\t</ChatSidebar>\n\n\t\t\t<ChatSidebar\n\t\t\t\theading=\"Данные контакта\"\n\t\t\t\tactive={showProfileSidebar}\n\t\t\t\tcloseSidebar={() => setShowProfileSidebar(false)}\n\t\t\t>\n\t\t\t\t<Profile user={user} />\n\t\t\t</ChatSidebar>\n\n\t\t</div>\n\t);\n};\n\nexport default Chat;\n"],"names":["_ref","contact","setPerson","useContext","AccountContext","_useUsersContext","useUsersContext","setUserAsUnread","usersOnline","setCountMessage","getUser","find","item","userId","chatId","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","name","id","avatar","stop","apply","arguments","lastMessage","recentMessageDate","messageDates","Object","keys","messages","length","JSON","stringify","_toConsumableArray","pop","getLastMessage","_jsxs","Link","className","onClick","children","_jsx","src","concat","process","alt","avatarDefault","formatTime","time","status","Icon","unread","typing","content","pinned","clients","users","_useState","setUsers","useState","_useState2","_slicedToArray","contacts","setContacts","_useState3","_useState4","text","setText","_useState5","_useState6","loading","setLoading","_useState7","_useState8","navigate","useNavigate","useEffect","userSort","sort","a","b","dateA","Date","date","filteredData","filter","user","_user$name","toLowerCase","includes","OptionsBtn","ariaLabel","iconId","iconClassName","onSelected","index","console","log","options","placeholder","onChange","e","target","value","CSpinner","style","margin","map","_Fragment","Contact","emojiTabs","icon","label","active","showEmojis","newMessage","setNewMessage","tab","Array","fill","_","rowIndex","colIndex","role","backgroundPositionX","backgroundPositionY","textAreaRef","height","scrollHeight","attachButtons","click","showAttach","setShowAttach","setShowEmojis","mess","setMess","submitNewMessage","onFileChange","useRef","useAutosizeTextArea","current","btn","htmlFor","type","display","ref","rows","openProfileSidebar","openSearchSidebar","closeSidebar","heading","inputProps","_objectSpread","username","setUsername","form","setForm","addNewName","addNewAvatar","img","setImg","showEdit","setShowEdit","input","React","host","handleSubmit","_ref3","_callee2","newName","_context2","preventDefault","editContact","_x","handleAvatar","_ref4","_callee3","_context3","files","_x2","sendFile","_callee4","data","response","newAvatar","_context4","FormData","append","uploadFile","sent","path","split","editContactAvatar","t0","defaultAvatar","color","onSubmit","onFocus","select","borderBottom","cursor","media","Checkbox","replyMessage","lastMsgRef","allMessages","person","dates","chatAdminId","msgRef","delMessageContext","CustomToggle","displayName","CustomMenu","labeledBy","backgroundColor","toArray","child","_child$props$children","props","startsWith","change","eventkey","message","url_del_msg","delToTelegram","parse","delMessage","$host","get","dateIndex","msgIndex","_message$content","_message$content2","_replyMessage","_message$content3","_message$content4","assignRef","undefined","image","sender","endsWith","width","title","xlsIcon","href","rel","docIcon","textAlign","borderRadius","descript","Dropdown","onSelect","Toggle","as","Menu","Item","eventKey","el","reply","scrollIntoView","transition","addNewMessage","toString","showProfileSidebar","setShowProfileSidebar","showSearchSidebar","setShowSearchSidebar","_useState9","_useState10","file","setFile","_useState11","_useState12","setImage","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","scrollToLastMsg","_lastMsgRef$current","getImage","openSidebar","cb","sendText","temp","url_send_msg","sendToTelegram","replace","result","message_id","senderId","receiverId","conversationId","messageId","Header","Convo","EmojiTray","ChatInput","ChatSidebar","Search","Profile"],"sourceRoot":""}