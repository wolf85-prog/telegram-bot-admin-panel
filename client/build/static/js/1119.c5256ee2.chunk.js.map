{"version":3,"file":"static/js/1119.c5256ee2.chunk.js","mappings":"qPAsHA,UApFoB,WAElB,IAAQA,GAAgBC,EAAAA,EAAAA,KAAhBD,YAER,GAAoCE,EAAAA,EAAAA,UAAS,IAAG,eAAzCC,EAAU,KAAEC,EAAa,KAwBhC,OArBEC,EAAAA,EAAAA,YAAU,WAGR,IAAMC,EAAS,yCAAG,4GAEGC,EAAAA,EAAAA,MAAe,OAA9BC,EAAM,OACVC,QAAQC,IAAI,WAAYF,GAElBG,GAAc,OAAIH,GAAQI,MAAK,SAACC,EAAGC,GAC5C,IAAIC,EAAQF,EAAEG,KACd,OAD4BF,EAAEE,KACjBD,CACd,IAEIX,EAAcO,GAAY,2CAE3B,kBAZc,mCAcfL,GAEF,GAAG,KAGH,iBAAKW,UAAU,aAAY,WACzB,SAAC,KAAU,KACX,iBAAKA,UAAU,gDAA+C,WAC5D,SAAC,KAAS,KACV,gBAAKA,UAAU,wBAAuB,UAElC,SAAC,KAAU,CAACC,IAAE,YACV,UAAC,EAAAC,SAAQ,CAACC,UAAU,SAAC,KAAQ,CAACC,MAAM,YAAa,WAC/C,wBAAI,yHAEJ,UAAC,KAAK,YACJ,SAAC,KAAW,UAAC,0CACb,SAAC,KAAS,WAER,UAAC,KAAM,YACL,SAAC,IAAU,WACT,UAAC,KAAS,YACR,SAAC,KAAgB,CAACC,MAAM,MAAK,SAAC,YAC9B,SAAC,KAAgB,CAACA,MAAM,MAAK,SAAC,8BAC9B,SAAC,KAAgB,CAACA,MAAM,MAAK,SAAC,0CAC9B,SAAC,KAAgB,CAACA,MAAM,MAAK,SAAC,kEAC9B,SAAC,KAAgB,CAACA,MAAM,MAAK,SAAC,+CAGlC,SAAC,KAAU,UACVnB,EAAWoB,KAAI,SAACC,EAAMC,GAAK,OAC1B,UAAC,KAAS,YACR,SAAC,KAAgB,CAACH,MAAM,MAAK,SAAEG,EAAM,KACrC,UAAC,KAAc,WAAE,IAAIC,KAAKC,SAASH,EAAKR,OAAOY,qBAAqB,IAAE,IAAIF,KAAKC,SAASH,EAAKR,OAAOa,qBAAqBC,MAAM,KAAK,GAAG,IAAE,IAAIJ,KAAKC,SAASH,EAAKR,OAAOa,qBAAqBC,MAAM,KAAK,OACvM,SAAC,KAAc,UAAEN,EAAKO,QACtB,SAAC,KAAc,UAAEP,EAAKQ,QACtB,SAAC,KAAc,UAAER,EAAKS,UAAY,mDAAa,qFALjCR,EAMJ,cAQnBzB,EAAYuB,KAAI,SAACC,EAAMC,GAAK,OACzB,yBAAe,KAAGD,IAAVC,EAAmB,YAQzC,SAAC,KAAS,SAIlB,C","sources":["pages/SoundsNotif.js"],"sourcesContent":["import React, { Suspense, useEffect, useState, useContext } from 'react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\nimport { getSoundNotif } from './../http/adminAPI.js'\n\nimport {\n  CContainer, \n  CSpinner,\n  CAvatar,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardTitle,\n  CCardText,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CFormInput,\n  CButton,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst SoundsNotif = () => {  \n\n  const { soundsNotif } = useUsersContext();\n\n  const [soundNotif, setSoundNotif] = useState([]); \n\n    //get Contacts\n    useEffect(() => {\n      //const arrClients = []\n  \n      const fetchData = async() => {\n\n        let notifs = await getSoundNotif()\n        console.log(\"notifs: \", notifs) \n\n        const sortedNotif = [...notifs].sort((a, b) => {       \n\t\t\t\t\tvar dateA = a.date, dateB = b.date \n\t\t\t\t\treturn dateB-dateA  //сортировка по убывающей дате  \n\t\t\t\t})\n\n        setSoundNotif(sortedNotif)  \n\n      }\n      \n      fetchData();\n      \n    }, []);\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n                  <h2>Звуковые уведомления</h2>\n\n                  <CCard>\n                    <CCardHeader>Журнал</CCardHeader>\n                    <CCardBody>\n                      {/* <CCardTitle>Special title treatment</CCardTitle> */}\n                      <CTable>\n                        <CTableHead>\n                          <CTableRow>\n                            <CTableHeaderCell scope=\"col\">№</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Дата</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Проект</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Оповещение</CTableHeaderCell>\n                            <CTableHeaderCell scope=\"col\">Статус</CTableHeaderCell>\n                          </CTableRow>\n                        </CTableHead>\n                        <CTableBody>\n                        {soundNotif.map((item, index) => (\n                          <CTableRow key={index}>\n                            <CTableHeaderCell scope=\"row\">{index+1}</CTableHeaderCell>\n                            <CTableDataCell>{new Date(parseInt(item.date)).toLocaleDateString()} {new Date(parseInt(item.date)).toLocaleTimeString().split(':')[0]}:{new Date(parseInt(item.date)).toLocaleTimeString().split(':')[1]}</CTableDataCell>\n                            <CTableDataCell>{item.name}</CTableDataCell>\n                            <CTableDataCell>{item.text}</CTableDataCell>\n                            <CTableDataCell>{item.delivered ? \"Получено\" : \"Запланировано\"}</CTableDataCell>\n                          </CTableRow>\n                         ))\n                        } \n                        </CTableBody>\n                      </CTable>\n                    </CCardBody>\n                  </CCard>\n                  \n                  {soundsNotif.map((item, index) => (\n                      <p key={index}>- {item}</p>\n                    ))\n                  }\n                  \n                </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default SoundsNotif\n"],"names":["soundsNotif","useUsersContext","useState","soundNotif","setSoundNotif","useEffect","fetchData","getSoundNotif","notifs","console","log","sortedNotif","sort","a","b","dateA","date","className","lg","Suspense","fallback","color","scope","map","item","index","Date","parseInt","toLocaleDateString","toLocaleTimeString","split","name","text","delivered"],"sourceRoot":""}