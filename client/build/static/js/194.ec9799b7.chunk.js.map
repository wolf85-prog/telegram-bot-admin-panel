{"version":3,"file":"static/js/194.ec9799b7.chunk.js","mappings":"8NAcMA,EAAU,CACd,CACIC,KAAM,0DACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIC,IAAI,EACzBC,UAAU,GAEd,CACIJ,KAAM,8FACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIG,KAAK,EAC1BD,UAAU,GAEd,CACIJ,KAAM,mDACNC,SAAU,SAAAC,GAAG,OAAIA,EAAII,UAAU,EAC/BF,UAAU,GAEd,CACIJ,KAAM,mDACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIK,SAAS,EAC9BH,UAAU,GAEd,CACIJ,KAAM,iCACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIM,OAAO,GAEhC,CACIR,KAAM,mDACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIO,QAAQ,EAC7BL,UAAU,IAKVM,EAAe,CACnBC,KAAM,CACFC,MAAO,CACH,GAGRC,UAAW,CACPD,MAAO,CACHE,SAAU,SAKlBC,MAAO,CACHH,MAAO,CAEH,KAKVI,EAAAA,EAAAA,IAAY,YAAa,CACvBC,KAAM,CACJC,QAAS,OACTC,UAAW,WAEbC,WAAY,CACVC,QAAS,WAEXC,QAAS,CACPF,WAAY,UACZH,KAAM,WAERM,QAAS,CACPF,QAAS,aAEXG,OAAQ,CACNC,OAAQ,kBACRC,MAAO,kBACPC,SAAU,oBAEX,QAqGH,UAnGsB,WAEpB,IAAkBC,GAAkBC,EAAAA,EAAAA,KAA5BC,SACUC,GAAeF,EAAAA,EAAAA,KAAzBG,SACUC,GAAUJ,EAAAA,EAAAA,KAApBK,SACAC,GAAkBN,EAAAA,EAAAA,KAAlBM,cAER,GAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCN,EAAQ,KAAEO,EAAW,KAC5B,GAA8BD,EAAAA,EAAAA,WAAS,GAAK,eAArCE,EAAO,KAAEC,EAAU,KAsD1B,OAjDAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,GAEpBN,GAAc,GAEd,IAAMO,EAAS,yCAAG,mFAChBC,QAAQC,IAAI,aAAcX,GAC1BU,QAAQC,IAAI,aAAcb,GAC1BY,QAAQC,IAAI,kBAAmBhB,GAE/BA,EAAciB,IAAG,yCAAC,WAAOC,GAAO,wGAExBC,GAAO,OAAOhB,GAChBiB,EAAajB,EAAWkB,WAAU,SAACC,GAAG,OAAKA,EAAIC,KAAOL,EAAQvC,SAAS,IACrE6C,EAAcL,EAAQC,GACtBK,EAAyB,OAAXD,QAAW,IAAXA,GAAAA,EAAaE,IAAMF,EAAYE,IAAM,GACnDC,EAA0B,OAAXH,QAAW,IAAXA,OAAW,EAAXA,EAAaI,MAE9BC,EAAaxB,EAAMyB,MAAK,SAACC,GAAO,OAAKA,EAAQR,KAAOL,EAAQc,SAAS,IACnEC,EAAwB,OAAVJ,QAAU,IAAVA,OAAU,EAAVA,EAAYpD,MAE1ByD,EAAI,IAAIC,KAAKjB,EAAQkB,WACzBC,EAAOH,EAAEI,cACTC,EAAQC,OAAON,EAAEO,WAAW,GAAGC,SAAS,EAAG,KAC3CC,EAAMH,OAAON,EAAEU,WAAWF,SAAS,EAAG,KACtCG,EAAOX,EAAEY,WACTC,EAAQP,OAAON,EAAEc,cAAcN,SAAS,EAAG,KAC3CO,EAAc,UAAMN,EAAG,YAAIJ,EAAK,YAAIF,EAAI,YAAIQ,EAAI,YAAIE,GAEhDG,EAAa,CACjB3E,KAAM0E,EACNxE,MAAOyC,EAAQ9C,KACfM,WAAYuD,EACZtD,UAAW8C,EACX7C,QAASsC,EAAQiC,IACjBtE,SAAU8C,GAEZd,EAAYuC,KAAKF,GAAW,4CAC7B,mDA5BgB,IA8BjBzC,EAAYI,GAEZF,GAAW,GAAO,2CACnB,kBAtCc,mCAwCfG,GAEF,GAAE,CAACd,KAGD,iBAAKqD,UAAU,aAAY,WACzB,SAAC,KAAU,KACX,iBAAKA,UAAU,gDAA+C,WAC5D,SAAC,KAAS,KACV,gBAAKA,UAAU,wBAAuB,UAElC,SAAC,KAAU,CAACC,IAAE,YACV,UAAC,EAAAC,SAAQ,CAACC,UAAU,SAAC,KAAQ,CAACC,MAAM,YAAa,WAC7C,wBAAI,wEAEJ,SAAC,KAAI,CAACJ,UAAU,OAAM,UACpB,SAAC,KAAI,CAACK,GAAI,EAAE,UACV,SAAC,KAAU,CAACC,YAAY,oCAAW,aAAW,cAIlD,SAAC,KAAS,CACRxF,QAASA,EACTyF,KAAM1D,EACN2D,aAAW,EACXC,YAAU,EACVC,MAAM,YACNC,gBAAiBtD,EACpBuD,mBAAmB,SAAC,KAAQ,IACzBnF,aAAcA,YAM5B,SAAC,KAAS,SAIlB,C","sources":["pages/Notifications.js"],"sourcesContent":["import React, { Suspense, useEffect, useState } from 'react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport { \n  CContainer, \n  CSpinner, \n  CCol,\n  CRow,\n  CFormInput,\n} from '@coreui/react'\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\n\n\n\nconst columns = [\n  {\n      name: 'Дата/время',\n      selector: row => row.date,\n      sortable: true,\n  },\n  {\n      name: 'Название проекта',\n      selector: row => row.title,\n      sortable: true,\n  },\n  {\n      name: 'Заказчик',\n      selector: row => row.receiverId,\n      sortable: true,\n  },\n  {\n      name: 'Менеджер',\n      selector: row => row.managerId,\n      sortable: true,\n  },\n  {\n      name: 'Адрес',\n      selector: row => row.address,\n  },\n  {\n      name: 'Контакты',\n      selector: row => row.contacts,\n      sortable: true,\n  },\n];\n\n//  Internally, customStyles will deep merges your customStyles with the default styling.\nconst customStyles = {\n  rows: {\n      style: {\n          //minHeight: '72px', // override the row height\n      },\n  },\n  headCells: {\n      style: {\n          fontSize: '16px',\n          //paddingLeft: '8px', // override the cell padding for head cells\n          //paddingRight: '8px',\n      },\n  },\n  cells: {\n      style: {\n          //paddingLeft: '8px', // override the cell padding for data cells\n          //paddingRight: '8px',\n      },\n  },\n};\n\ncreateTheme('solarized', {\n  text: {\n    primary: '#fff',\n    secondary: '#2aa198',\n  },\n  background: {\n    default: '#131c21',\n  },\n  context: {\n    background: '#cb4b16',\n    text: '#FFFFFF',\n  },\n  divider: {\n    default: '#ffffff13',\n  },\n  action: {\n    button: 'rgba(0,0,0,.54)',\n    hover: 'rgba(0,0,0,.08)',\n    disabled: 'rgba(0,0,0,.12)',\n  },\n}, 'dark');\n\nconst Notifications = () => {\n\n  const { projects: notifications } = useUsersContext();\n  const { managers: zakazchiki } = useUsersContext();\n  const { companys: comps } = useUsersContext();\n  const { setNewProject } = useUsersContext();\n\n  const [projects, setProjects] = useState([]); \n  const [pending, setPending] = useState(true); \n\n  \n\n  //get Projects\n  useEffect(() => {\n    const arrProjects = []\n\n    setNewProject(false)\n\n    const fetchData = async () => {\n      console.log(\"companys: \", comps)\n      console.log(\"managers: \", zakazchiki)\n      console.log(\"notifications: \", notifications)\n\n      notifications.map(async (project) => {\n\n        const manager = [...zakazchiki];\n        let userIndex2 = zakazchiki.findIndex((man) => man.id === project.managerId);  \n        const userObject2 = manager[userIndex2];\n        const managerName = userObject2?.fio ? userObject2.fio : ''\n        const managerPhone = userObject2?.phone\n        \n        let userObject = comps.find((company) => company.id === project.companyId);  \n        const companyName = userObject?.title\n\n        const d = new Date(project.createdAt);\n\t\t\t\tconst year = d.getFullYear();\n\t\t\t\tconst month = String(d.getMonth()+1).padStart(2, \"0\");\n\t\t\t\tconst day = String(d.getDate()).padStart(2, \"0\");\n\t\t\t\tconst chas = d.getHours();\n\t\t\t\tconst minut = String(d.getMinutes()).padStart(2, \"0\");\n\t\t\t\tconst newDateMessage = `${day}.${month}.${year} ${chas}:${minut}`\n\n        const newProject = {\n          date: newDateMessage,\n          title: project.name,\n          receiverId: companyName,\n          managerId: managerName,\n          address: project.geo,\n          contacts: managerPhone,\n\t\t\t\t}\n        arrProjects.push(newProject)\n      })\n\n      setProjects(arrProjects) \n\n      setPending(false);\n    }\n\n    fetchData();\n    \n  },[notifications])\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n                    <h2>Уведомления</h2>\n                    \n                    <CRow className=\"mb-3\">\n                      <CCol sm={3} >\n                        <CFormInput placeholder=\"Поиск...\" aria-label=\"City\"/>\n                      </CCol>\n                    </CRow>\n\n                    <DataTable\n                      columns={columns}\n                      data={projects}\n                      fixedHeader\n                      pagination\n                      theme=\"solarized\"\n                      progressPending={pending}\n\t\t\t                progressComponent={<CSpinner />}\n                      customStyles={customStyles}\n                    />\n                  </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications\n"],"names":["columns","name","selector","row","date","sortable","title","receiverId","managerId","address","contacts","customStyles","rows","style","headCells","fontSize","cells","createTheme","text","primary","secondary","background","default","context","divider","action","button","hover","disabled","notifications","useUsersContext","projects","zakazchiki","managers","comps","companys","setNewProject","useState","setProjects","pending","setPending","useEffect","arrProjects","fetchData","console","log","map","project","manager","userIndex2","findIndex","man","id","userObject2","managerName","fio","managerPhone","phone","userObject","find","company","companyId","companyName","d","Date","createdAt","year","getFullYear","month","String","getMonth","padStart","day","getDate","chas","getHours","minut","getMinutes","newDateMessage","newProject","geo","push","className","lg","Suspense","fallback","color","sm","placeholder","data","fixedHeader","pagination","theme","progressPending","progressComponent"],"sourceRoot":""}