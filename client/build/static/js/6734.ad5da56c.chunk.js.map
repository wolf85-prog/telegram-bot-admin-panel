{"version":3,"file":"static/js/6734.ad5da56c.chunk.js","mappings":"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","sources":["pages/Notifications.js"],"sourcesContent":["import React, { Suspense, useEffect, useState } from 'react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport { \n  CContainer, \n  CSpinner, \n  CCol,\n  CRow,\n  CFormInput,\n} from '@coreui/react'\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\n\nimport { newCountProjects } from './../http/adminAPI'\n\nconst columns = [\n  {\n      name: 'Дата/время',\n      selector: row => row.date,\n      sortable: true,\n  },\n  {\n      name: 'Название проекта',\n      selector: row => row.title,\n      sortable: true,\n  },\n  {\n      name: 'Заказчик',\n      selector: row => row.receiverId,\n      sortable: true,\n  },\n  {\n      name: 'Менеджер',\n      selector: row => row.managerId,\n      sortable: true,\n  },\n  {\n      name: 'Адрес',\n      selector: row => row.address,\n  },\n  {\n      name: 'Контакты',\n      selector: row => row.contacts,\n      sortable: true,\n  },\n];\n\n//  Internally, customStyles will deep merges your customStyles with the default styling.\nconst customStyles = {\n  rows: {\n      style: {\n          //minHeight: '72px', // override the row height\n      },\n  },\n  headCells: {\n      style: {\n          fontSize: '16px',\n          //paddingLeft: '8px', // override the cell padding for head cells\n          //paddingRight: '8px',\n      },\n  },\n  cells: {\n      style: {\n          //paddingLeft: '8px', // override the cell padding for data cells\n          //paddingRight: '8px',\n      },\n  },\n};\n\ncreateTheme('solarized', {\n  text: {\n    primary: '#fff',\n    secondary: '#2aa198',\n  },\n  background: {\n    default: '#131c21',\n  },\n  context: {\n    background: '#cb4b16',\n    text: '#FFFFFF',\n  },\n  divider: {\n    default: '#ffffff13',\n  },\n  action: {\n    button: 'rgba(0,0,0,.54)',\n    hover: 'rgba(0,0,0,.08)',\n    disabled: 'rgba(0,0,0,.12)',\n  },\n}, 'dark');\n\nconst Notifications = () => {\n\n  const { projects: notifications } = useUsersContext();\n  const { managers: zakazchiki } = useUsersContext();\n  const { companys: comps } = useUsersContext();\n  const { setNewProject, setCountProjects } = useUsersContext();\n\n  const [projects, setProjects] = useState([]); \n  const [pending, setPending] = useState(true); \n\n  const [text, setText]= useState(\"\");\n\n  //поиск\n  useEffect(() => {\n\t\tconst filteredData = [...projects].filter(item=> (item.title + item.id + item.chatId)?.replace(/[её]/g, '(е|ё)').toLowerCase().includes(text.replace(/[её]/g, '(е|ё)').toLowerCase()));\n    //setSortWorkers(text === '' ? workersAll : filteredData); \n    setProjects(text === '' ? projects : filteredData) \n    //setWorkers(text === '' ? workers : filteredData);  \n  }, [text]);\n\n  //get Projects\n  useEffect(async() => {\n    const arrProjects = []\n\n    //setNewProject(false)\n    setCountProjects(0)\n    //await newCountProjects(0)\n\n    const fetchData = async () => {\n      console.log(\"companys: \", comps)\n      console.log(\"managers: \", zakazchiki)\n      console.log(\"notifications: \", notifications)\n\n      notifications.map(async (project) => {\n        //console.log(\"date: \", project.createdAt)\n\n        const manager = [...zakazchiki];\n        let userIndex2 = zakazchiki?.findIndex((man) => man.id === project.managerId);  \n        const userObject2 = manager[userIndex2];\n        const managerName = userObject2?.fio ? userObject2.fio : ''\n        const managerPhone = userObject2?.phone ? userObject2?.phone : ''\n        \n        let userObject = comps?.find((company) => company.id === project.companyId);  \n        const companyName = userObject ? userObject?.title : ''\n\n        const d = new Date(project.createdAt);\n\t\t\t\tconst year = d.getFullYear();\n\t\t\t\tconst month = String(d.getMonth()+1).padStart(2, \"0\");\n\t\t\t\tconst day = String(d.getDate()).padStart(2, \"0\");\n\t\t\t\tconst chas = d.getHours();\n\t\t\t\tconst minut = String(d.getMinutes()).padStart(2, \"0\");\n\t\t\t\tconst newDateMessage = `${day}.${month}.${year} ${chas}:${minut}`\n\n        const newProject = {\n          date: newDateMessage,\n          title: project.name,\n          receiverId: companyName,\n          managerId: managerName,\n          address: project.geo,\n          contacts: managerPhone,\n\t\t\t\t}\n        arrProjects.push(newProject)\n      })\n\n      setProjects(arrProjects) \n\n      setPending(false);\n    }\n\n    fetchData();\n    \n  },[notifications])\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n                    <h2>Уведомления</h2>\n                    \n                    <CRow className=\"mb-3\">\n                      <CCol sm={3} >\n                        <CFormInput placeholder=\"Поиск...\" aria-label=\"City\" onChange={(e)=>setText(e.target.value)}/>\n                      </CCol>\n                    </CRow>\n\n                    <DataTable\n                      columns={columns}\n                      data={projects}\n                      fixedHeader\n                      pagination\n                      theme=\"solarized\"\n                      progressPending={pending}\n\t\t\t                progressComponent={<CSpinner />}\n                      customStyles={customStyles}\n                    />\n                  </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications\n"],"names":["columns","name","selector","row","date","sortable","title","receiverId","managerId","address","contacts","customStyles","rows","style","headCells","fontSize","cells","createTheme","text","primary","secondary","background","default","context","divider","action","button","hover","disabled","notifications","useUsersContext","projects","zakazchiki","managers","comps","companys","_useUsersContext4","setCountProjects","setNewProject","_useState","useState","_useState2","_slicedToArray","setProjects","_useState3","_useState4","pending","setPending","_useState5","_useState6","setText","useEffect","filteredData","_toConsumableArray","filter","item","_ref","id","chatId","replace","toLowerCase","includes","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","arrProjects","fetchData","wrap","_context3","prev","next","_ref3","_callee2","_context2","console","log","map","_ref4","_callee","project","manager","userIndex2","userObject2","managerName","managerPhone","userObject","companyName","d","year","month","day","chas","minut","newDateMessage","newProject","_context","findIndex","man","fio","phone","find","company","companyId","Date","createdAt","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","concat","geo","push","stop","_x","apply","arguments","_jsxs","className","children","_jsx","AppSidebar","AppHeader","CContainer","lg","Suspense","fallback","CSpinner","color","CRow","CCol","sm","CFormInput","placeholder","onChange","e","target","value","DataTable","data","fixedHeader","pagination","theme","progressPending","progressComponent","AppFooter"],"sourceRoot":""}