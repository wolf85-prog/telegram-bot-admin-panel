{"version":3,"file":"static/js/9511.3a29bcb6.chunk.js","mappings":"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","sources":["pages/Notifications.js"],"sourcesContent":["import React, { Suspense, useEffect, useState } from 'react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport { \n  CContainer, \n  CSpinner, \n  CCol,\n  CRow,\n  CFormInput,\n} from '@coreui/react'\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\n\nimport { newCountProjects } from './../http/adminAPI'\n\nconst columns = [\n  {\n      name: 'Дата/время',\n      selector: row => row.date,\n      sortable: true,\n  },\n  {\n      name: 'Название проекта',\n      selector: row => row.title,\n      sortable: true,\n  },\n  {\n      name: 'Заказчик',\n      selector: row => row.receiverId,\n      sortable: true,\n  },\n  {\n      name: 'Менеджер',\n      selector: row => row.managerId,\n      sortable: true,\n  },\n  {\n      name: 'Адрес',\n      selector: row => row.address,\n  },\n  {\n      name: 'Контакты',\n      selector: row => row.contacts,\n      sortable: true,\n  },\n];\n\n//  Internally, customStyles will deep merges your customStyles with the default styling.\nconst customStyles = {\n  rows: {\n      style: {\n          //minHeight: '72px', // override the row height\n      },\n  },\n  headCells: {\n      style: {\n          fontSize: '16px',\n          //paddingLeft: '8px', // override the cell padding for head cells\n          //paddingRight: '8px',\n      },\n  },\n  cells: {\n      style: {\n          //paddingLeft: '8px', // override the cell padding for data cells\n          //paddingRight: '8px',\n      },\n  },\n};\n\ncreateTheme('solarized', {\n  text: {\n    primary: '#fff',\n    secondary: '#2aa198',\n  },\n  background: {\n    default: '#131c21',\n  },\n  context: {\n    background: '#cb4b16',\n    text: '#FFFFFF',\n  },\n  divider: {\n    default: '#ffffff13',\n  },\n  action: {\n    button: 'rgba(0,0,0,.54)',\n    hover: 'rgba(0,0,0,.08)',\n    disabled: 'rgba(0,0,0,.12)',\n  },\n}, 'dark');\n\nconst Notifications = () => {\n\n  const { projects: notifications } = useUsersContext();\n  const { managers: zakazchiki } = useUsersContext();\n  const { companys: comps } = useUsersContext();\n  const { setNewProject, setCountProjects } = useUsersContext();\n\n  const [projects, setProjects] = useState([]); \n  const [pending, setPending] = useState(true); \n\n  const [text, setText]= useState(\"\");\n\n  //поиск\n  useEffect(() => {\n\t\tconst filteredData = [...projects].filter(item=> (item.title + item.id + item.chatId)?.replace(/[её]/g, '(е|ё)').toLowerCase().includes(text.replace(/[её]/g, '(е|ё)').toLowerCase()));\n    //setSortWorkers(text === '' ? workersAll : filteredData); \n    setProjects(text === '' ? projects : filteredData) \n    //setWorkers(text === '' ? workers : filteredData);  \n  }, [text]);\n\n  //get Projects\n  useEffect(() => {\n    const arrProjects = []\n\n    setCountProjects(0)\n\n    const fetchData = async () => {\n      // console.log(\"companys: \", comps)\n      // console.log(\"managers: \", zakazchiki)\n      // console.log(\"notifications: \", notifications)\n\n      notifications.map(async (project) => {\n\n        const manager = [...zakazchiki];\n        let userIndex2 = zakazchiki?.findIndex((man) => man.id === project.managerId);  \n        const userObject2 = manager[userIndex2];\n        const managerName = userObject2?.fio ? userObject2.fio : ''\n        const managerPhone = userObject2?.phone ? userObject2?.phone : ''\n        \n        let userObject = comps?.find((company) => company.id === project.companyId);  \n        const companyName = userObject ? userObject?.title : ''\n\n        const d = new Date(project.createdAt);\n\t\t\t\tconst year = d.getFullYear();\n\t\t\t\tconst month = String(d.getMonth()+1).padStart(2, \"0\");\n\t\t\t\tconst day = String(d.getDate()).padStart(2, \"0\");\n\t\t\t\tconst chas = d.getHours();\n\t\t\t\tconst minut = String(d.getMinutes()).padStart(2, \"0\");\n\t\t\t\tconst newDateMessage = `${day}.${month}.${year} ${chas}:${minut}`\n\n        const newProject = {\n          date: newDateMessage,\n          title: project.name,\n          receiverId: companyName,\n          managerId: managerName,\n          address: project.geo,\n          contacts: managerPhone,\n\t\t\t\t}\n        arrProjects.push(newProject)\n      })\n\n      setProjects(arrProjects) \n\n      setPending(false);\n    }\n\n    fetchData();\n    \n  }, [notifications])\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n                    <h2>Уведомления</h2>\n                    \n                    <CRow className=\"mb-3\">\n                      <CCol sm={3} >\n                        <CFormInput placeholder=\"Поиск...\" aria-label=\"City\" onChange={(e)=>setText(e.target.value)}/>\n                      </CCol>\n                    </CRow>\n\n                    <DataTable\n                      columns={columns}\n                      data={projects}\n                      fixedHeader\n                      pagination\n                      theme=\"solarized\"\n                      progressPending={pending}\n\t\t\t                progressComponent={<CSpinner />}\n                      customStyles={customStyles}\n                    />\n                  </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications\n"],"names":["columns","name","selector","row","date","sortable","title","receiverId","managerId","address","contacts","customStyles","rows","style","headCells","fontSize","cells","createTheme","text","primary","secondary","background","default","context","divider","action","button","hover","disabled","Notifications","projects","notifications","useUsersContext","managers","zakazchiki","companys","comps","setNewProject","setCountProjects","setProjects","useState","pending","setPending","setText","useEffect","filteredData","filter","item","_ref","id","chatId","replace","toLowerCase","includes","arrProjects","async","map","userObject2","findIndex","man","project","managerName","fio","managerPhone","phone","userObject","find","company","companyId","companyName","d","Date","createdAt","year","getFullYear","month","String","getMonth","padStart","newProject","getDate","getHours","getMinutes","geo","push","fetchData","_jsxs","className","children","_jsx","AppSidebar","AppHeader","CContainer","lg","Suspense","fallback","CSpinner","color","CRow","CCol","sm","CFormInput","placeholder","onChange","e","target","value","DataTable","data","fixedHeader","pagination","theme","progressPending","progressComponent","AppFooter"],"sourceRoot":""}