{"version":3,"file":"static/js/470.57b493d0.chunk.js","mappings":"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","sources":["pages/DistributionWPlaner.js"],"sourcesContent":["import React, { Suspense, useState, useEffect, useRef } from 'react'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { \n  CContainer, \n  CSpinner, \n  CButton, \n  CTable, \n  CTableRow, \n  CTableHead,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CFormCheck,\n  CToast,\n  CToastBody,\n  CToaster,\n  CToastClose\n} from '@coreui/react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nimport { getProjectId, newPlan, getPlan, newDistributionW } from 'src/http/adminAPI';\n\nconst DistributionWPlaner = () => {\n  const location = useLocation()\n  const [distributionsWork, setDistributionsWork]= useState([]);\n\n  const projectId= location.state.project\n\n  const [countCol, setCountCol] = useState(6)\n  const [countCol2, setCountCol2] = useState(6)\n  const [countCol3, setCountCol3] = useState(6)\n\n  const d = new Date();\n  const month = String(d.getMonth()+1).padStart(2, \"0\");\n\tconst day = String(d.getDate()).padStart(2, \"0\");\n  const date_str = `${day}.${month}`;\n  \n  d.setDate(d.getDate() + 1);\n  const month2 = String(d.getMonth()+1).padStart(2, \"0\");\n\tconst day2 = String(d.getDate()).padStart(2, \"0\");\n  const date_str2 = `${day2}.${month2}`;\n\n\n  const [dates, setDates] = useState([\n    {date: date_str, time: '06:00', proj: '', save: false},\n    {date: date_str, time: '07:00', proj: '', save: false},\n    {date: date_str, time: '08:00', proj: '', save: false},\n    {date: date_str, time: '09:00', proj: '', save: false},\n    {date: date_str, time: '10:00', proj: '', save: false},\n    {date: date_str, time: '11:00', proj: '', save: false},\n  ])\n\n\n  const [dates1, setDates1] = useState([\n    {date: date_str, time: '12:00', proj: '', save: false},\n    {date: date_str, time: '13:00', proj: '', save: false},\n    {date: date_str, time: '14:00', proj: '', save: false},\n    {date: date_str, time: '15:00', proj: '', save: false},\n    {date: date_str, time: '16:00', proj: '', save: false},\n    {date: date_str, time: '17:00', proj: '', save: false},\n  ])\n\n  const [dates11, setDates11] = useState([\n    {date: date_str, time: '18:00', proj: '', save: false},\n    {date: date_str, time: '19:00', proj: '', save: false},\n    {date: date_str, time: '20:00', proj: '', save: false},\n    {date: date_str, time: '21:00', proj: '', save: false},\n    {date: date_str, time: '22:00', proj: '', save: false},\n    {date: date_str, time: '23:00', proj: '', save: false},\n  ])\n\n//----------------------------------------------------------\n\n  const [projectName, setProjectName] = useState('')\n  const [projectView, setProjectView] = useState(false)\n  const [value1, setValue1] = useState([false, false, false, false, false, false, false])\n  const [value2, setValue2] = useState([false, false, false, false, false, false, false])\n  const [value3, setValue3] = useState([false, false, false, false, false, false, false])\n\n  const [showLoader, setShowLoader] = useState(true)\n\n  const [toast, addToast] = useState(0)\n  const toaster = useRef()\n\n  let arr = []\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let project = await getProjectId(projectId);\n      console.log('Текущий проект: ', project.properties.Name.title[0]?.plain_text)\n      setShowLoader(false)\n      setProjectName(project.properties.Name.title[0]?.plain_text)\n    }\n      fetchData();\n  },[])\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let plan = await getPlan(new Date().toLocaleDateString());\n      console.log(plan)\n\n      if (plan !== null) {\n        const planTimes = JSON.parse(plan.times)\n        console.log(\"planTimes: \", planTimes)\n\n        const ind1 = planTimes.findIndex(date => date.time === '12:00')\n        const ind2 = planTimes.findIndex(date => date.time === '18:00')\n\n        console.log(\"Индекс 1: \", ind1)\n        console.log(\"Индекс 2: \", ind2)\n\n        const times = planTimes.slice(0, ind1);\n        const times2 = planTimes.slice(ind1, ind2);\n        const times3 = planTimes.slice(ind2, planTimes.length);\n\n\n        times.map((time, index)=> {\n          if (time.save) {\n            value1[index] = true\n            setValue1(value1)\n          }\n        })\n\n        times2.map((time, index)=> {\n          if (time.save) {\n            value2[index] = true\n            setValue2(value2)\n          }\n        })\n\n        times3.map((time, index)=> {\n          if (time.save) {\n            value3[index] = true\n            setValue3(value3)\n          }\n        })\n\n        setDates(times)\n        setDates1(times2)\n        setDates11(times3)\n\n        setCountCol(ind1)\n        setCountCol2(ind2 - ind1)\n        setCountCol3(planTimes.length - ind2)\n      }\n      \n    }\n      fetchData();\n  },[])\n\n//поставить галочку Статус\n  const changeStatus = (ind, tab) => {\n    if (tab === 1) {\n      if (dates[ind].save === true) {\n        console.log('true')\n        value1[ind] = false\n        dates[ind].save = false\n        dates[ind].proj = ''\n      } else {\n        console.log('false')\n        value1[ind] = true\n        dates[ind].proj = projectName //location.state.project\n        dates[ind].save = true\n      }\n\n      //console.log('true')\n\n      setDates(dates)\n      setValue1(value1) \n    }\n\n    if (tab === 2) {\n      if (value2[ind]) {\n        value2[ind] = false\n        dates1[ind].proj = ''\n        dates[ind].save = false\n      } else {\n        value2[ind] = true\n        dates1[ind].proj = projectName //location.state.project\n        dates1[ind].save = true\n      } \n\n      setDates1(dates1)\n      setValue2(value2)\n    }\n\n    if (tab === 3) {\n      if (value3[ind]) {\n        value3[ind] = false\n        dates11[ind].proj = ''\n        dates11[ind].save = false\n      } else {\n        value3[ind] = true\n        dates11[ind].proj = projectName //location.state.project\n        dates11[ind].save = true\n      } \n\n      setDates11(dates11)\n      setValue3(value3)\n    }\n    \n\n    projectView ? setProjectView(false) : setProjectView(true)\n  }\n\n  // ---------------------------------------------------------------------\n\n  {/* Показать Добавление времени */}\n  const clickShowEditTime = (t, ind, tab) => {\n\n    if (t === '06:00')  {\n      if (tab === 1) {\n        //обработка нажатия вкл/выкл\n        if (dates[ind+1].time === '07:00') {\n          setCountCol(countCol+1) //для высоту ячейки с датой\n          arr = dates.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '06:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value1[index] = item.save\n          })\n          setValue1(value1)\n\n        } else {\n          if (dates[ind+1].proj === ''){\n            setCountCol(countCol-1)\n            arr = dates.slice(0); \n            arr.splice(ind+1, 1);\n            setDates(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value1[index] = item.save\n            })\n            setValue1(value1)           \n          }        \n        }\n      }\n    }\n\n    if (t === '07:00')  {\n      if (tab === 1) {\n        //обработка нажатия вкл/выкл\n        if (tab === 1) {\n          //обработка нажатия вкл/выкл\n          if (dates[ind+1].time === '08:00') {\n            setCountCol(countCol+1) //для высоту ячейки с датой\n            arr = dates.slice(0); //копируем массив dates\n            const newObj = {\n              date: date_str,\n              time: '07:30',\n              proj: '',\n              save: false\n            }\n            arr.splice(ind+1, 0, newObj);\n            setDates(arr)\n  \n            //изменить чек\n            arr.map((item, index)=> {\n              value1[index] = item.save\n            })\n            setValue1(value1)\n                    \n          } else {\n            if (dates[ind+1].proj === ''){\n              setCountCol(countCol-1)\n              arr = dates.slice(0); \n              arr.splice(ind+1, 1);\n              setDates(arr)\n  \n              //изменить чек\n              arr.map((item, index)=> {\n                value1[index] = item.save\n              })\n              setValue1(value1)           \n            }        \n          }\n        }\n      }\n    }\n\n\n    if (t === '08:00')  {\n      if (tab === 1) {\n        //обработка нажатия вкл/выкл\n        if (tab === 1) {\n          //обработка нажатия вкл/выкл\n          if (dates[ind+1].time === '09:00') {\n            setCountCol(countCol+1) //для высоту ячейки с датой\n            arr = dates.slice(0); //копируем массив dates\n            const newObj = {\n              date: date_str,\n              time: '08:30',\n              proj: '',\n              save: false\n            }\n            arr.splice(ind+1, 0, newObj);\n            setDates(arr)\n  \n            //изменить чек\n            arr.map((item, index)=> {\n              value1[index] = item.save\n            })\n            setValue1(value1)\n                    \n          } else {\n            if (dates[ind+1].proj === ''){\n              setCountCol(countCol-1)\n              arr = dates.slice(0); \n              arr.splice(ind+1, 1);\n              setDates(arr)\n  \n              //изменить чек\n              arr.map((item, index)=> {\n                value1[index] = item.save\n              })\n              setValue1(value1)           \n            }        \n          }\n        }\n      }\n    }\n\n    if (t === '09:00')  {\n      if (tab === 1) {\n        //обработка нажатия вкл/выкл\n        if (tab === 1) {\n          //обработка нажатия вкл/выкл\n          if (dates[ind+1].time === '10:00') {\n            setCountCol(countCol+1) //для высоту ячейки с датой\n            arr = dates.slice(0); //копируем массив dates\n            const newObj = {\n              date: date_str,\n              time: '09:30',\n              proj: '',\n              save: false\n            }\n            arr.splice(ind+1, 0, newObj);\n            setDates(arr)\n  \n            //изменить чек\n            arr.map((item, index)=> {\n              value1[index] = item.save\n            })\n            setValue1(value1)\n                    \n          } else {\n            if (dates[ind+1].proj === ''){\n              setCountCol(countCol-1)\n              arr = dates.slice(0); \n              arr.splice(ind+1, 1);\n              setDates(arr)\n  \n              //изменить чек\n              arr.map((item, index)=> {\n                value1[index] = item.save\n              })\n              setValue1(value1)           \n            }        \n          }\n        }\n      }\n    }\n\n    if (t === '10:00')  {\n      if (tab === 1) {\n        //обработка нажатия вкл/выкл\n        if (tab === 1) {\n          //обработка нажатия вкл/выкл\n          if (dates[ind+1].time === '11:00') {\n            setCountCol(countCol+1) //для высоту ячейки с датой\n            arr = dates.slice(0); //копируем массив dates\n            const newObj = {\n              date: date_str,\n              time: '10:30',\n              proj: '',\n              save: false\n            }\n            arr.splice(ind+1, 0, newObj);\n            setDates(arr)\n  \n            //изменить чек\n            arr.map((item, index)=> {\n              value1[index] = item.save\n            })\n            setValue1(value1)\n                    \n          } else {\n            if (dates[ind+1].proj === ''){\n              setCountCol(countCol-1)\n              arr = dates.slice(0); \n              arr.splice(ind+1, 1);\n              setDates(arr)\n  \n              //изменить чек\n              arr.map((item, index)=> {\n                value1[index] = item.save\n              })\n              setValue1(value1)           \n            }        \n          }\n        }\n      }\n    }\n\n    if (t === '11:00')  {\n      if (tab === 1) {\n        //обработка нажатия вкл/выкл\n          if (dates[ind+1]?.time !== '11:30') {\n            setCountCol(countCol+1) //для высоту ячейки с датой\n            arr = dates.slice(0); //копируем массив dates\n            console.log(arr)\n            const newObj = {\n              date: date_str,\n              time: '11:30',\n              proj: '',\n              save: false\n            }\n            arr.splice(ind+1, 0, newObj);\n            setDates(arr)\n  \n            //изменить чек\n            arr.map((item, index)=> {\n              value1[index] = item.save\n            })\n            setValue1(value1)          \n          } \n          \n          if (dates[ind+1]?.time === '11:30') {\n            if (dates[ind+1].proj === ''){\n              setCountCol(countCol-1)\n              arr = dates.slice(0); \n              arr.splice(ind+1, 1);\n              setDates(arr)\n    \n              //изменить чек\n              arr.map((item, index)=> {\n                value1[index] = item.save\n              })\n              setValue1(value1)           \n            }        \n          }\n      }\n    }\n\n    //12:00 - 17:00\n\n    if (t === '12:00')  {\n      if (tab === 2) {\n        //обработка нажатия вкл/выкл\n        if (dates1[ind+1].time === '13:00') {\n          setCountCol2(countCol2+1) //для высоту ячейки с датой\n          arr = dates1.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '12:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates1(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value2[index] = item.save\n          })\n          setValue2(value2)\n\n        } else {\n          if (dates1[ind+1].proj === ''){\n            setCountCol2(countCol2-1)\n            arr = dates1.slice(0); \n            arr.splice(ind+1, 1);\n            setDates1(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value2[index] = item.save\n            })\n            setValue2(value2)           \n          }        \n        }\n      }\n    }\n\n    if (t === '13:00')  {\n      if (tab === 2) {\n        //обработка нажатия вкл/выкл\n        if (dates1[ind+1].time === '14:00') {\n          setCountCol2(countCol2+1) //для высоту ячейки с датой\n          arr = dates1.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '13:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates1(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value2[index] = item.save\n          })\n          setValue2(value2)\n\n        } else {\n          if (dates1[ind+1].proj === ''){\n            setCountCol2(countCol2-1)\n            arr = dates1.slice(0); \n            arr.splice(ind+1, 1);\n            setDates1(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value1[index] = item.save\n            })\n            setValue1(value1)           \n          }        \n        }\n      }\n    }\n\n    if (t === '14:00')  {\n      if (tab === 2) {\n        //обработка нажатия вкл/выкл\n        if (dates1[ind+1].time === '15:00') {\n          setCountCol2(countCol2+1) //для высоту ячейки с датой\n          arr = dates1.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '14:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates1(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value2[index] = item.save\n          })\n          setValue2(value2)\n\n        } else {\n          if (dates1[ind+1].proj === ''){\n            setCountCol2(countCol2-1)\n            arr = dates1.slice(0); \n            arr.splice(ind+1, 1);\n            setDates1(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value2[index] = item.save\n            })\n            setValue2(value2)           \n          }        \n        }\n      }\n    }\n\n    if (t === '15:00')  {\n      if (tab === 2) {\n        //обработка нажатия вкл/выкл\n        if (dates1[ind+1].time === '16:00') {\n          setCountCol2(countCol2+1) //для высоту ячейки с датой\n          arr = dates1.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '15:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates1(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value2[index] = item.save\n          })\n          setValue2(value2)\n\n        } else {\n          if (dates1[ind+1].proj === ''){\n            setCountCol2(countCol2-1)\n            arr = dates1.slice(0); \n            arr.splice(ind+1, 1);\n            setDates1(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value2[index] = item.save\n            })\n            setValue2(value2)           \n          }        \n        }\n      }\n    }\n\n    if (t === '16:00')  {\n      if (tab === 2) {\n        //обработка нажатия вкл/выкл\n        if (dates1[ind+1].time === '17:00') {\n          setCountCol2(countCol2+1) //для высоту ячейки с датой\n          arr = dates1.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '16:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates1(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value2[index] = item.save\n          })\n          setValue2(value2)\n\n        } else {\n          if (dates1[ind+1].proj === ''){\n            setCountCol2(countCol2-1)\n            arr = dates1.slice(0); \n            arr.splice(ind+1, 1);\n            setDates1(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value2[index] = item.save\n            })\n            setValue2(value2)           \n          }        \n        }\n      }\n    }\n\n    if (t === '17:00')  {\n      if (tab === 2) {\n        //обработка нажатия вкл/выкл\n        if (dates1[ind+1]?.time !== '17:30') {\n          setCountCol2(countCol2+1) //для высоту ячейки с датой\n          arr = dates1.slice(0); //копируем массив dates\n          console.log(arr)\n          const newObj = {\n            date: date_str,\n            time: '17:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates1(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value2[index] = item.save\n          })\n          setValue2(value2)          \n        } \n        \n        if (dates1[ind+1]?.time === '17:30') {\n          if (dates1[ind+1].proj === ''){\n            setCountCol2(countCol2-1)\n            arr = dates1.slice(0); \n            arr.splice(ind+1, 1);\n            setDates1(arr)\n  \n            //изменить чек\n            arr.map((item, index)=> {\n              value2[index] = item.save\n            })\n            setValue2(value2)           \n          }        \n        }\n      }\n    }\n\n//---------------18:00 - 23:00----------------------\n\n    if (t === '18:00')  {\n      if (tab === 3) {\n        //обработка нажатия вкл/выкл\n        if (dates11[ind+1].time === '19:00') {\n          setCountCol3(countCol3+1) //для высоту ячейки с датой\n          arr = dates11.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '18:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates11(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value3[index] = item.save\n          })\n          setValue3(value3)\n\n        } else {\n          if (dates11[ind+1].proj === ''){\n            setCountCol3(countCol3-1)\n            arr = dates11.slice(0); \n            arr.splice(ind+1, 1);\n            setDates11(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value3[index] = item.save\n            })\n            setValue3(value3)           \n          }        \n        }\n      }\n    }\n    \n    if (t === '19:00')  {\n      if (tab === 3) {\n        //обработка нажатия вкл/выкл\n        if (dates11[ind+1].time === '20:00') {\n          setCountCol3(countCol3+1) //для высоту ячейки с датой\n          arr = dates11.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '19:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates11(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value3[index] = item.save\n          })\n          setValue3(value3)\n\n        } else {\n          if (dates11[ind+1].proj === ''){\n            setCountCol3(countCol3-1)\n            arr = dates11.slice(0); \n            arr.splice(ind+1, 1);\n            setDates11(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value3[index] = item.save\n            })\n            setValue3(value3)           \n          }        \n        }\n      }\n    }\n    \n    if (t === '20:00')  {\n      if (tab === 3) {\n        //обработка нажатия вкл/выкл\n        if (dates11[ind+1].time === '21:00') {\n          setCountCol3(countCol3+1) //для высоту ячейки с датой\n          arr = dates11.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '20:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates11(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value3[index] = item.save\n          })\n          setValue3(value3)\n\n        } else {\n          if (dates11[ind+1].proj === ''){\n            setCountCol3(countCol3-1)\n            arr = dates11.slice(0); \n            arr.splice(ind+1, 1);\n            setDates11(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value3[index] = item.save\n            })\n            setValue3(value3)           \n          }        \n        }\n      }\n    }\n    \n    if (t === '21:00')  {\n      if (tab === 3) {\n        //обработка нажатия вкл/выкл\n        if (dates11[ind+1].time === '22:00') {\n          setCountCol3(countCol3+1) //для высоту ячейки с датой\n          arr = dates11.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '21:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates11(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value3[index] = item.save\n          })\n          setValue3(value3)\n\n        } else {\n          if (dates11[ind+1].proj === ''){\n            setCountCol3(countCol3-1)\n            arr = dates11.slice(0); \n            arr.splice(ind+1, 1);\n            setDates11(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value3[index] = item.save\n            })\n            setValue3(value3)           \n          }        \n        }\n      }\n    }\n    \n    if (t === '22:00')  {\n      if (tab === 3) {\n        //обработка нажатия вкл/выкл\n        if (dates11[ind+1].time === '23:00') {\n          setCountCol3(countCol3+1) //для высоту ячейки с датой\n          arr = dates11.slice(0); //копируем массив dates\n          const newObj = {\n            date: date_str,\n            time: '22:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates11(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value3[index] = item.save\n          })\n          setValue3(value3)\n\n        } else {\n          if (dates11[ind+1].proj === ''){\n            setCountCol3(countCol3-1)\n            arr = dates11.slice(0); \n            arr.splice(ind+1, 1);\n            setDates11(arr)\n\n            //изменить чек\n            arr.map((item, index)=> {\n              value3[index] = item.save\n            })\n            setValue3(value3)           \n          }        \n        }\n      }\n    }\n    \n    if (t === '23:00')  {\n      if (tab === 3) {\n        //обработка нажатия вкл/выкл\n        if (dates11[ind+1]?.time !== '23:30') {\n          setCountCol3(countCol3+1) //для высоту ячейки с датой\n          arr = dates11.slice(0); //копируем массив dates\n          console.log(arr)\n          const newObj = {\n            date: date_str,\n            time: '23:30',\n            proj: '',\n            save: false\n          }\n          arr.splice(ind+1, 0, newObj);\n          setDates11(arr)\n\n          //изменить чек\n          arr.map((item, index)=> {\n            value3[index] = item.save\n          })\n          setValue3(value3)          \n        } \n        \n        if (dates11[ind+1]?.time === '23:30') {\n          if (dates11[ind+1].proj === ''){\n            setCountCol3(countCol3-1)\n            arr = dates11.slice(0); \n            arr.splice(ind+1, 1);\n            setDates11(arr)\n  \n            //изменить чек\n            arr.map((item, index)=> {\n              value3[index] = item.save\n            })\n            setValue3(value3)           \n          }        \n        }\n      }\n    }\n\n  }\n\n  const exampleToast = (\n    <CToast autohide={false} visible={true} color=\"success\" className=\"text-white align-items-center\">\n      <div className=\"d-flex\">\n        <CToastBody>Планирование успешно сохранено!</CToastBody>\n        <CToastClose className=\"me-2 m-auto\" white />\n      </div>\n    </CToast>\n  )\n\n  const savePlan = async() => {\n    addToast(exampleToast)\n\n    const newArray = [].concat(dates, dates1, dates11);\n    const planer_str = JSON.stringify(newArray) \n\n    const d_str = new Date().toLocaleDateString()\n    const newObj = {\n      \"datestart\": d_str,\n      \"times\": planer_str\n    }\n    await newPlan(newObj);\n\n    //новая рассылка\n    const message = {\n      //name: 'Рассылка', \n      text: '', \n      image: '', \n      project: projectName, \n      projectId: projectId, \n      receivers: \"\", \n      datestart: Date.now(), \n      delivered: 'false',        \n    }\n\n    //console.log(message)\n\n    //сохранение рассылки в базе данных\n    await newDistributionW(message)\n\n    setTimeout(() => backPage(), 1000);\n    //backPage()\n  }\n\n  const navigate = useNavigate();\n  const backPage = () => {\n       navigate('/distributionw');\n  } \n\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n                  <>\n                    <h2>Планирование рассылок</h2>\n                      <br />\n                      <CRow>\n                        <CCol xs>\n                          <CCard className=\"mb-4\">\n                            <CCardHeader>График рассылок</CCardHeader>\n                            <CCardBody>\n\n                            <p style={{color: '#fff'}}>Текущий проект: &laquo;{projectName}&raquo;</p>\n                            {\n                              showLoader ? <div style={{textAlign:'center'}}><CSpinner/></div>\n                              :\n                              <>\n                              <CRow>\n                              <CCol xs>                                   \n                                <div style={{float: \"left\", display: 'flex'}}>\n                                  <CTable align=\"middle\" className=\"mb-0 border\" hover responsive bordered style={{float: 'left'}}>   \n                                    <CTableHead className='table-dark' >\n                                      <CTableRow>\n                                        <CTableHeaderCell className=\"text-center\" style={{width: '70px'}}>Дата</CTableHeaderCell>\n                                      </CTableRow>\n                                    </CTableHead>\n                                    <CTableBody>\n                                      <CTableRow v-for=\"item in tableItems\">\n                                        <CTableDataCell className=\"text-center\" style={{width: '50px', height: `${41*countCol}px`}} >\n                                          <div>{date_str}</div> \n                                        </CTableDataCell>\n                                      </CTableRow>\n                                    </CTableBody>\n                                  </CTable>\n\n                                  <CTable align=\"middle\" className=\"mb-0 border\" hover responsive bordered>\n                                    <CTableHead className='table-dark' >\n                                      <CTableRow>\n                                        {/* <CTableHeaderCell className=\"text-center\">Дата</CTableHeaderCell> */}\n                                        <CTableHeaderCell className=\"text-center\">Время</CTableHeaderCell>\n                                        <CTableHeaderCell className=\"text-center\">Проект</CTableHeaderCell>   \n                                        <CTableHeaderCell className=\"text-center\">Статус</CTableHeaderCell>\n                                      </CTableRow>\n                                    </CTableHead>\n                                    <CTableBody>\n                                    {dates.map((item, index) => (\n                                        <CTableRow v-for=\"item in tableItems\" key={index}>   \n                                          <CTableDataCell className=\"text-center\" style={{width: '50px'}} >\n                                            <div style={{display: 'flex', alignItems: 'center', cursor: 'pointer'}}>\n                                              <div onClick={()=>clickShowEditTime(`${item.time}`, index, 1)} >{item.time}</div>\n                                              {/* <div style={{display: showEditTime ? \"block\" : \"none\", fontSize: '12px', paddingLeft: '8px'}}>\n                                                <div onClick={changeTimePlus}>\n                                                  &#9650;\n                                                </div>\n                                                <div onClick={changeTimeMinus}>          \t\n                                                  &#9660;\n                                                </div>\n                                              </div>    */}\n                                            </div>\n                                          </CTableDataCell>\n                                          <CTableDataCell style={{width: '180px'}}>\n                                            <div style={{display: item.proj ? \"block\": \"none\"}}>{item.proj}</div>\n                                          </CTableDataCell>\n                                          <CTableDataCell className=\"text-center\" style={{width: '50px'}}>\n                                            <CFormCheck \n                                              id=\"rowCheckTab1\"\n                                              checked={value1[index]}\n                                              onChange={()=>changeStatus(index, 1)}\n                                              disabled={(projectName === item.proj || item.proj === '')  ? '' : 'disabled'}\n                                            />\n                                          </CTableDataCell>\n                                        </CTableRow>\n                                    ))}\n                                    </CTableBody>\n                                  </CTable>\n                                  </div>\n                                </CCol>\n{/* -----------------------------12:00----------------------------------------------------------------------------------- */}\n                                <CCol xs>                                   \n                                <div style={{float: \"left\", display: 'flex'}}>\n                                  <CTable align=\"middle\" className=\"mb-0 border\" hover responsive bordered style={{float: 'left'}}>   \n                                    <CTableHead className='table-dark' >\n                                      <CTableRow>\n                                        <CTableHeaderCell className=\"text-center\" style={{width: '70px'}}>Дата</CTableHeaderCell>\n                                      </CTableRow>\n                                    </CTableHead>\n                                    <CTableBody>\n                                      <CTableRow v-for=\"item in tableItems\">\n                                        <CTableDataCell className=\"text-center\" style={{width: '50px', height: `${41*countCol2}px`}} >\n                                          <div>{date_str}</div> \n                                        </CTableDataCell>\n                                      </CTableRow>\n                                    </CTableBody>\n                                  </CTable>\n\n                                  <CTable align=\"middle\" className=\"mb-0 border\" hover responsive bordered>\n                                    <CTableHead className='table-dark' >\n                                      <CTableRow>\n                                        {/* <CTableHeaderCell className=\"text-center\">Дата</CTableHeaderCell> */}\n                                        <CTableHeaderCell className=\"text-center\">Время</CTableHeaderCell>\n                                        <CTableHeaderCell className=\"text-center\">Проект</CTableHeaderCell>   \n                                        <CTableHeaderCell className=\"text-center\">Статус</CTableHeaderCell>\n                                      </CTableRow>\n                                    </CTableHead>\n                                    <CTableBody>\n                                    {dates1.map((item, index) => (\n                                        <CTableRow v-for=\"item in tableItems\" key={index}>   \n                                          <CTableDataCell className=\"text-center\" style={{width: '50px'}} >\n                                            <div style={{display: 'flex', alignItems: 'center', cursor: 'pointer'}}>\n                                              <div onClick={()=>clickShowEditTime(`${item.time}`, index, 2)} >{item.time}</div>\n                                              {/* <div style={{display: showEditTime ? \"block\" : \"none\", fontSize: '12px', paddingLeft: '8px'}}>\n                                                <div onClick={changeTimePlus}>\n                                                  &#9650;\n                                                </div>\n                                                <div onClick={changeTimeMinus}>          \t\n                                                  &#9660;\n                                                </div>\n                                              </div>    */}\n                                            </div>\n                                          </CTableDataCell>\n                                          <CTableDataCell style={{width: '180px'}}>\n                                            <div style={{display: item.proj ? \"block\": \"none\"}}>{item.proj}</div>\n                                          </CTableDataCell>\n                                          <CTableDataCell className=\"text-center\" style={{width: '50px'}}>\n                                            <CFormCheck \n                                              id=\"rowCheckTab2\"\n                                              checked={value2[index]}\n                                              onChange={()=>changeStatus(index, 2)}\n                                              disabled={(projectName === item.proj || item.proj === '')  ? '' : 'disabled'}\n                                            />\n                                          </CTableDataCell>\n                                        </CTableRow>\n                                    ))}\n                                    </CTableBody>\n                                  </CTable>\n                                  </div>\n                                </CCol>\n\n{/* ----------------------------18:00------------------------------------------------------------------------------------ */}\n                                <CCol xs>\n                                <div style={{float: \"left\", display: 'flex'}}>\n                                  <CTable align=\"middle\" className=\"mb-0 border\" hover responsive bordered style={{float: 'left'}}>   \n                                    <CTableHead className='table-dark' >\n                                      <CTableRow>\n                                        <CTableHeaderCell className=\"text-center\" style={{width: '70px'}}>Дата</CTableHeaderCell>\n                                      </CTableRow>\n                                    </CTableHead>\n                                    <CTableBody>\n                                      <CTableRow v-for=\"item in tableItems\">\n                                        <CTableDataCell className=\"text-center\" style={{width: '70px', height: `${41*countCol3}px`}} >\n                                          <div>{date_str}</div> \n                                        </CTableDataCell>\n                                      </CTableRow>\n                                    </CTableBody>\n                                  </CTable>\n\n                                  <CTable align=\"middle\" className=\"mb-0 border\" hover responsive bordered>\n                                    <CTableHead className='table-dark' >\n                                      <CTableRow>\n                                        {/* <CTableHeaderCell className=\"text-center\">Дата</CTableHeaderCell> */}\n                                        <CTableHeaderCell className=\"text-center\">Время</CTableHeaderCell>\n                                        <CTableHeaderCell className=\"text-center\">Проект</CTableHeaderCell>   \n                                        <CTableHeaderCell className=\"text-center\">Статус</CTableHeaderCell>\n                                      </CTableRow>\n                                    </CTableHead>\n                                    <CTableBody>\n                                    {dates11.map((item, index) => (\n                                        <CTableRow v-for=\"item in tableItems\" key={index}>   \n                                          <CTableDataCell className=\"text-center\" style={{width: '50px'}} >\n                                            <div style={{display: 'flex', alignItems: 'center', cursor: 'pointer'}}>\n                                              <div onClick={()=>clickShowEditTime(`${item.time}`, index, 3)} >{item.time}</div>\n                                            </div>\n                                          </CTableDataCell>\n                                          <CTableDataCell style={{width: '180px'}}>\n                                            <div>{item.proj}</div>\n                                          </CTableDataCell>\n                                          <CTableDataCell className=\"text-center\" style={{width: '50px'}}>\n                                            <CFormCheck \n                                              id=\"rowCheckTab3\"\n                                              checked={value3[index]}\n                                              onChange={()=>changeStatus(index, 3)}\n                                              disabled={(projectName === item.proj || item.proj === '')  ? '' : 'disabled'}\n                                            />\n                                          </CTableDataCell>\n                                        </CTableRow>\n                                    ))}\n                                    </CTableBody>\n                                  </CTable>\n                                  </div>\n                                </CCol>\n                              </CRow>\n\n                            <div style={{display: 'flex', justifyContent: 'space-between', marginTop: '15px'}}>\n                              <div style={{marginRight: '16px'}}>\n                                <Link to={'/distributionw_add'}>\n                                  <CButton color=\"secondary\" style={{width: '130px'}}>Назад</CButton>\n                                </Link>\n                              </div>\n                              <div>\n                                <CButton color=\"primary\" onClick={savePlan} style={{width: '130px'}}>Сохранить</CButton>\n                                {/* <CButton onClick={() => addToast(exampleToast)}>Send a toast</CButton> */}\n                                <CToaster ref={toaster} push={toast} placement=\"top-end\" />  \n                              </div>\n                            </div>\n                             </>  \n                            }                        \n                            </CCardBody>\n                          </CCard>\n                        </CCol>\n                      </CRow>\n                  </>\n                </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DistributionWPlaner\n"],"names":["location","useLocation","useState","projectId","state","project","countCol","setCountCol","countCol2","setCountCol2","countCol3","setCountCol3","d","Date","month","String","getMonth","padStart","day","getDate","date_str","setDate","month2","day2","date","time","proj","save","dates","setDates","dates1","setDates1","dates11","setDates11","projectName","setProjectName","projectView","setProjectView","value1","setValue1","value2","setValue2","value3","setValue3","showLoader","setShowLoader","toast","addToast","toaster","useRef","arr","useEffect","fetchData","getProjectId","console","log","properties","Name","title","plain_text","getPlan","toLocaleDateString","plan","planTimes","JSON","parse","times","ind1","findIndex","ind2","slice","times2","times3","length","map","index","changeStatus","ind","tab","clickShowEditTime","t","newObj","splice","item","exampleToast","autohide","visible","color","className","white","savePlan","newArray","concat","planer_str","stringify","d_str","newPlan","message","text","image","receivers","datestart","now","delivered","newDistributionW","setTimeout","backPage","navigate","useNavigate","lg","Suspense","fallback","xs","style","textAlign","float","display","align","hover","responsive","bordered","width","height","alignItems","cursor","onClick","id","checked","onChange","disabled","justifyContent","marginTop","marginRight","to","ref","push","placement"],"sourceRoot":""}