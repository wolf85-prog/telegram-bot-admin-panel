{"version":3,"file":"static/js/5313.1e2bf3d5.chunk.js","mappings":"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","sources":["assets/images/arrowDown.svg","data/specData.js","views/widgets/WidgetsDropdown3.js","views/widgets/WidgetsDropdown4.js","views/widgets/WidgetsDropdown5.js","views/widgets/WidgetsDropdown6.js","components/Chart2.js","pages/Admin.js","views/widgets/WidgetsDropdown.js","views/widgets/WidgetsDropdown2.js"],"sourcesContent":["var _metadata, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowDown(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 256 256\",\n    enableBackground: \"new 0 0 256 256\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _metadata || (_metadata = /*#__PURE__*/React.createElement(\"metadata\", null, \" Svg Vector Icons : http://www.onlinewebfonts.com/icon \")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000000\",\n    d: \"M128,10C62.9,10,10,62.9,10,128c0,65.1,52.9,118,118,118c65.1,0,118-52.9,118-118C246,62.9,193.1,10,128,10z M173.8,148.4l-37,31.4c-2.5,2.1-5.6,3.2-8.7,3.2s-6.2-1.1-8.7-3.2l-37-31.4c-5.7-4.8-6.4-13.3-1.5-19c4.8-5.7,13.3-6.4,19-1.5l14.9,12.6V86.4c0-7.4,6-13.5,13.5-13.5s13.5,6,13.5,13.5v54.2l14.9-12.6c5.7-4.8,14.2-4.1,19,1.5C180.1,135.1,179.4,143.6,173.8,148.4z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowDown);\nexport default __webpack_public_path__ + \"static/media/arrowDown.4f7021c2d42a26d0369da8983c53315a.svg\";\nexport { ForwardRef as ReactComponent };","\nconst specData = [\n    {\n        id: 1,\n        name: 'Звук',\n        icon: 'Sound',\n        models: [\n            {id: 1, name: 'Звукорежиссер',},\n            {id: 2, name: 'Системный инженер',},\n            {id: 3, name: 'RF-Менеджер',},\n            {id: 4, name: 'Backline',},\n            {id: 5, name: 'Roadie',},\n            {id: 6, name: 'Техник по звуку',},\n            {id: 7, name: 'Микрофонный техник'},\n        ]\n    },\n    {\n        id: 2,\n        name: 'Свет',\n        icon: 'Light',\n        models: [\n            {id: 1, name: 'Художник по свету',},\n            {id: 2, name: 'Оператор световой пушки',},\n            {id: 3, name: 'Гафер',},\n            {id: 4, name: 'Техник по свету',},\n            {id: 5, name: 'Электрик',},\n        ]\n    },\n    {\n        id: 3,\n        name: 'Видео',\n        icon: 'Video',\n        models: [\n            {id: 1, name: 'Инженер VMix',},\n            {id: 2, name: 'Инженер Resolume',},\n            {id: 3, name: 'Оператор',},\n            {id: 4, name: 'Оператор Zoom-конференций',},\n            {id: 5, name: 'Оператор Action-съемки',},\n            {id: 6, name: 'Оператор-постановщик',},\n            {id: 7, name: 'Режиссер эфиров',},\n            {id: 8, name: 'Техник по монтажу экранов',}, \n        ]\n    },\n    {\n        id: 4,\n        name: 'Фото',\n        icon: 'Photo',\n        models: [\n            {id: 1, name: 'Документальная съемка',},\n            {id: 2, name: 'Репортажная съемка',},\n            {id: 3, name: 'Свадебная съемка',}, \n            {id: 4, name: 'Портретная съемка',},\n            {id: 5, name: 'Предметная съемка',},\n            \n        ]\n    },\n    {\n        id: 5,\n        name: 'Кино / Театр',\n        icon: 'Kino',\n        models: [\n            {id: 1, name: 'Режиссер', color: '#fff'},\n            {id: 2, name: 'Оператор-постановщик', color: '#fff'},\n            {id: 3, name: 'Стедикам', color: '#fff'},\n            {id: 4, name: 'Оператор крана', color: '#fff'},\n            {id: 5, name: 'Оператор Action-съемки', color: '#fff'},\n            {id: 6, name: 'Гафер', color: '#fff'},\n            {id: 7, name: 'Актер', color: '#fff'},\n            {id: 8, name: 'Гример', color: '#fff'},\n            {id: 9, name: 'Костюмер', color: '#fff'},\n        ]\n    },\n    {\n        id: 6,\n        name: 'Промо',\n        icon: 'Promo',\n        models: [\n            {id: 1, name: 'Модель',},\n            {id: 2, name: 'Промоутер',},         \n            {id: 3, name: 'Визажист',},\n            {id: 4, name: 'Костюмер',},\n        ]\n    },\n    {\n        id: 7,\n        name: 'Кейтеринг',\n        icon: 'Catering',\n        models: [\n            {id: 1, name: 'Банкетный менеджер',},  \n            {id: 2, name: 'Повар',}, \n            {id: 3, name: 'Хостес',},  \n            {id: 4, name: 'Бармен',},\n            {id: 5, name: 'Официант',},      \n        ]\n    },  \n    {\n        id: 8,\n        name: 'Помощники',\n        icon: 'Stagehands',\n        models: [\n            {id: 1, name: 'Помощник \\/ Грузчик',},\n        ]\n    },\n    {\n        id: 9,\n        name: 'Риггеры \\/ Сцена',\n        icon: 'Riggers \\/ Ground',\n        models: [\n            {id: 1, name: 'Верхний Риггер',},\n            {id: 2, name: 'Нижний Риггер',},\n            {id: 3, name: 'Монтаж конструктива сцены',},\n            {id: 4, name: 'Монтаж шатров',},\n        ]\n    }, \n    {\n        id: 10,\n        name: 'Декорации',\n        icon: 'Decor',\n        models: [\n            {id: 1, name: 'Декоратор',},\n            {id: 2, name: 'Флорист оформитель',},\n            {id: 3, name: 'Монтаж мебели',},\n            {id: 3, name: 'Монтаж выставочных стендов',},\n            {id: 3, name: 'Напольные покрытия',},\n        ]\n    },\n    {\n        id: 11,\n        name: 'Грузоперевозки',\n        icon: 'Trucks',\n        models: [\n            {id: 1, name: 'С гидролифтом',},\n            {id: 2, name: 'Без гидролифта',},\n            {id: 3, name: 'C личным ТС [B\\/C]',},\n            {id: 4, name: 'Без личного ТС [B\\/C]',},\n            {id: 5, name: 'Мотокурьер',},  \n        ]\n    },\n    {\n        id: 12,\n        name: 'Артисты',\n        icon: 'Party',\n        models: [\n            {id: 1, name: 'Кавер-бенд',},\n            {id: 2, name: 'Танцевальный коллектив',},\n            {id: 3, name: 'Диджей',},\n            {id: 4, name: 'Ведущий',},\n            {id: 5, name: 'Певец \\/ певица',},\n            {id: 6, name: 'Артист оригинального жанра',},\n            {id: 7, name: 'Фаир-шоу',},\n            {id: 8, name: 'Go-Go',},\n        ]\n    },\n    {\n        id: 13,\n        name: 'Игры',\n        icon: 'Games',\n        models: [\n            {id: 1, name: 'Квест',},\n            {id: 2, name: 'Квиз',},\n            {id: 3, name: 'Аниматор',},\n            {id: 4, name: 'Пневмокостюм \\/ ростовая кукла',},\n            {id: 5, name: 'Настольные игры \\/ игровые автоматы',},\n            {id: 6, name: 'Активности \\/ аттракционы',},\n        ]\n    },\n    {\n        id: 14,\n        name: 'Продакшн',\n        icon: 'Production',\n        models: [\n            {id: 1, name: 'Мероприятие под ключ',},\n            {id: 2, name: 'Отдельные технические задачи',},\n            {id: 3, name: 'Event-менеджер',},\n        ]\n    },\n    {\n        id: 15,\n        name: 'Менеджер «U.L.E.Y»',\n        icon: 'Менеджер «U.L.E.Y»',\n        models: [\n            {id: 1, name: 'Менеджер «U.L.E.Y»',},\n        ]\n    },\n    \n];\n\nexport default specData;","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nimport Sound from \"./../../assets/images/spec/1_sound.png\";\nimport Light from \"./../../assets/images/spec/2_light.png\";\nimport Video from \"./../../assets/images/spec/3_video.png\";\nimport Photo from \"./../../assets/images/spec/4_photo.png\";\n\n\nconst WidgetsDropdown3 = ({\n  soundUsers, \n  lightUsers, \n  videoUsers, \n  photoUsers,\n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"primary\"\n          value={\n            <>\n              {soundUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Звук\"}\n          action={<img src={Sound} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      Math.floor((soundUsers+2)*100/soundUsers), \n                      Math.floor((soundUsers+3)*100/soundUsers), \n                      Math.floor((soundUsers+1)*100/soundUsers), \n                      Math.floor((soundUsers+3)*100/soundUsers), \n                      0, 0, 0], //min: -5, max: 89,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"info\"\n          value={\n            <>\n              {lightUsers} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Свет\"}\n          action={<img src={Light} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      Math.floor((lightUsers-30)*100/lightUsers), \n                      Math.floor((lightUsers-20)*100/lightUsers), \n                      Math.floor((lightUsers-10)*100/lightUsers), \n                      Math.floor((lightUsers-10)*100/lightUsers), \n                      0, 0, 0], //min: -5 max: 39\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"warning\"\n          value={\n            <>\n              {videoUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Видео\"}\n          action={<img src={Video} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      Math.floor((videoUsers-30)*100/videoUsers), \n                      Math.floor((videoUsers-30)*100/videoUsers), \n                      Math.floor((videoUsers-30)*100/videoUsers), \n                      Math.floor((videoUsers-30)*100/videoUsers), \n                      0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"danger\"\n          value={\n            <>\n              {photoUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Фото\"}\n          action={<img src={Photo} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      Math.floor((photoUsers-10)*100/photoUsers), \n                      Math.floor((photoUsers-5)*100/photoUsers), \n                      Math.floor((photoUsers-10)*100/photoUsers), \n                      Math.floor((photoUsers-10)*100/photoUsers), \n                      0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown3\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nimport Promo from \"./../../assets/images/spec/6_catering.png\";\nimport Catering from \"./../../assets/images/spec/6_catering.png\";\nimport Stagehands from \"./../../assets/images/spec/7_stagehands.png\";\nimport Riggers from \"./../../assets/images/spec/8_riggers.png\";\n\nconst WidgetsDropdown4 = ({\n  promoUsers,\n  cateringUsers,\n  stagehandsUsers, \n  riggerUsers,\n  \n}) => {\n\n  return (\n    <CRow>\n      {/* Promo */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"primary\"\n          value={\n            <>\n              {promoUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Промо / Кастинг\"}\n          action={<img src={Promo} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      (promoUsers-10)*100/promoUsers, \n                      (promoUsers-10)*100/promoUsers, \n                      (promoUsers-10)*100/promoUsers, \n                      (promoUsers-10)*100/promoUsers, \n                      0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Catering */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"info\"\n          value={\n            <>\n              {cateringUsers} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Кейтеринг\"}\n          action={<img src={Catering} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      Math.floor((cateringUsers-10)*100/cateringUsers), \n                      Math.floor((cateringUsers-10)*100/cateringUsers), \n                      Math.floor((cateringUsers-10)*100/cateringUsers), \n                      Math.floor((cateringUsers-10)*100/cateringUsers), \n                      0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Stagehands */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"warning\"\n          value={\n            <>\n              {stagehandsUsers}\n            </>\n          }\n          title={\"Помощники / Грузчики\"}\n          action={<img src={Stagehands} alt='' width={35}/>}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', \n                  'Февраль', \n                  'Март', \n                  'Апрель', \n                  'Май', \n                  'Июнь', \n                  'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      Math.floor((stagehandsUsers-30)*100/stagehandsUsers), \n                      Math.floor((stagehandsUsers-30)*100/stagehandsUsers), \n                      Math.floor((stagehandsUsers-30)*100/stagehandsUsers), \n                      Math.floor((stagehandsUsers-30)*100/stagehandsUsers), \n                      0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Rigger */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"danger\"\n          value={\n            <>\n              {riggerUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Риггер / Граунд\"}\n          action={<img src={Riggers} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      (riggerUsers-10)*100/riggerUsers, \n                      (riggerUsers-10)*100/riggerUsers, \n                      (riggerUsers-10)*100/riggerUsers, \n                      (riggerUsers-10)*100/riggerUsers, \n                      0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown4\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nimport Trucks from \"./../../assets/images/spec/9_trucks.png\";          //9\nimport Party from \"./../../assets/images/spec/10_party.png\";           //10\nimport Games from \"./../../assets/images/spec/11_stage_ground.png\";           //11\nimport Production from \"./../../assets/images/spec/12_production.png\"; //12\n\n\nconst WidgetsDropdown5 = ({\n  trucksUsers,\n  partyUsers,\n  gamesUsers,\n  productionUsers,\n  \n}) => {\n\n  return (\n    <CRow>\n      {/* Trucks */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"primary\"\n          value={\n            <>\n              {trucksUsers}\n            </>\n          }\n          title={\"Водители\"}\n          action={<img src={Trucks} alt='' width={35}/>}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Кол-во специалистов',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      (trucksUsers-10)*100/trucksUsers, \n                      (trucksUsers-10)*100/trucksUsers, \n                      (trucksUsers-10)*100/trucksUsers, \n                      (trucksUsers-10)*100/trucksUsers, \n                      0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Party */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"info\"\n          value={\n            <>\n              {partyUsers} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Артисты\"}\n          action={<img src={Party} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      Math.floor((partyUsers-10)*100/partyUsers), \n                      Math.floor((partyUsers-10)*100/partyUsers), \n                      Math.floor((partyUsers-10)*100/partyUsers), \n                      Math.floor((partyUsers-10)*100/partyUsers), \n                      0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Games */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"warning\"\n          value={\n            <>\n              {gamesUsers}\n            </>\n          }\n          title={\"Игры\"}\n          action={<img src={Games} alt='' width={35}/>}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [\n                      Math.floor((gamesUsers-10)*100/gamesUsers), \n                      Math.floor((gamesUsers-10)*100/gamesUsers), \n                      Math.floor((gamesUsers-10)*100/gamesUsers), \n                      Math.floor((gamesUsers-10)*100/gamesUsers), \n                      0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n\n      {/* Production */}\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4 box-top\"\n          color=\"danger\"\n          value={\n            <>\n              {productionUsers} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Продакшн\"}\n          action={<img src={Production} alt='' width={35}/>}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      Math.floor((productionUsers-10)*100/productionUsers), \n                      Math.floor((productionUsers-10)*100/productionUsers), \n                      Math.floor((productionUsers-10)*100/productionUsers), \n                      Math.floor((productionUsers-10)*100/productionUsers), \n                      0, 0, 0],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 0,\n                    max: 500,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol> \n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown5\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nconst WidgetsDropdown6 = ({\n  users, \n  newUsers, \n  activeUsers, \n  delUsers, \n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              {users.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Всего\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      (users.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/users.length-5, \n                     0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {newUsers.length} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Новые\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/newUsers.length-5, \n                      0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {activeUsers.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Активные\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [activeUsers, 0, 0, 0, 0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              {delUsers.length}\n            </>\n          }\n          title={\"Удаленные\"}\n          action={\"\"}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', \n                  'Февраль', \n                  'Март', \n                  'Апрель', \n                  'Май', \n                  'Июнь', \n                  'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [delUsers, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown6\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nconst Chart2 = ({ data, data2, width, height, range }) => {\n  const [activeIndex, setActiveIndex] = React.useState(null);\n\n  const scaleColor = d3.scaleSequential(d3.interpolateViridis);\n  const scaleHeight = d3.scaleLinear();\n  const scaleWidth = d3.scaleBand().padding(0.1);\n  \n  const getX = d3.scaleBand()\n    .domain(data.map(item => item.name))\n    .range([0, width]);\n\n  const getY = d3.scaleLinear()\n    .domain([0, range])\n    .range([height, 0]);\n  \n  const getYAxis = ref => {\n    const yAxis = d3.axisLeft(getY)\n      .tickSize(-width)\n      .tickPadding(7);\n    d3.select(ref).call(yAxis);\n  };\n\n  const getXAxis = ref => {\n    const xAxis = d3.axisBottom(getX);\n    d3.select(ref).call(xAxis);\n  };\n\n  // const linePath = d3.line()\n  //   .x(d => getX(d.name) + getX.bandwidth() / 2)\n  //   .y(d => getY(d.value))\n  //   .curve(d3.curveMonotoneX)(data)\n\n  // const linePath2 = d3.line()\n  //   .x(d => getX(d.name) + getX.bandwidth() / 2)\n  //   .y(d => getY(d.value))\n  //   .curve(d3.curveMonotoneX)(data2)\n\n  const areaPath = d3.area()\n    .x(d => getX(d.name) + getX.bandwidth() / 2)\n    .y0(d => getY(d.value))\n    .y1(() => getY(0))\n    .curve(d3.curveMonotoneX)(data);\n\n  const handleMouseMove = (e) => {\n    const x = e.nativeEvent.offsetX;\n    const index = Math.floor(x / getX.step());\n    setActiveIndex(index);\n  };\n\n  const handleMouseLeave = () => {\n    setActiveIndex(null);\n  };\n  \n  return (\n    <div className=\"wrapper-chart\">\n      <svg\n        className=\"svg\"\n        width={width}\n        height={height}\n        onMouseMove={handleMouseMove}\n        onMouseLeave={handleMouseLeave}\n      >\n        {/* ось y */}\n        {/* <g className=\"axis\" ref={getYAxis} /> */}\n\n        {/* ось x */}\n        <g\n          className=\"axis xAxis\"\n          ref={getXAxis}\n          transform={`translate(0,${getY(0)})`}\n        />\n        <path\n          fill=\"#4b0082\"\n          d={areaPath}\n          opacity={0}\n        />\n\n        {/* {data.map((item, index) => {\n          return (\n            <g key={index}>\n              <circle\n                cx={getX(item.name) + getX.bandwidth() / 2}\n                cy={getY(item.value)}\n                r={index === activeIndex ? 6 : 4}\n                fill=\"#7cb5ec\"\n                strokeWidth={index === activeIndex ? 2 : 0}\n                stroke=\"#fff\"\n                style={{ transition: `ease-out .1s` }}\n              />\n              <text\n                fill=\"#fff\"\n                x={getX(item.name) + getX.bandwidth() / 2}\n                y={getY(item.value) - 10}\n                textAnchor=\"middle\"\n              >\n                {item.value}\n              </text>\n            </g>\n          );\n        })}\n        {data2.map((item, index) => {\n          return (\n            <g key={index}>\n              <circle\n                cx={getX(item.name) + getX.bandwidth() / 2}\n                cy={getY(item.value)}\n                r={index === activeIndex ? 6 : 4}\n                fill=\"#7cb5ec\"\n                strokeWidth={index === activeIndex ? 2 : 0}\n                stroke=\"#fff\"\n                style={{ transition: `ease-out .1s` }}\n              />\n              <text\n                fill=\"#fff\"\n                x={getX(item.name) + getX.bandwidth() / 2}\n                y={getY(item.value) - 10}\n                textAnchor=\"middle\"\n              >\n                {item.value}\n              </text>\n            </g>\n          );\n        })} */}\n        { data.map((item, index) => {\n          return (\n            <g key={index}>\n              <rect key={index}\n                width={40}\n                height={height - getY(item.value)}\n                x={getX(item.name) + getX.bandwidth() / 2 - 20}\n                y={getY(item.value)}\n                fill='#4b0082'\n                rx=\"2\" ry=\"2\"\n              />\n              <text\n                fill=\"#fff\"\n                x={getX(item.name) + getX.bandwidth() / 2}\n                y={getY(item.value) - 10}\n                textAnchor=\"middle\"\n              >\n                {item.value ? item.value : ''}\n              </text>\n            </g>\n          );\n        })}\n\n      </svg>\n    </div>\n  );\n};\n\n\nexport default Chart2","import React, { Suspense, useState, useEffect, useRef } from 'react'\nimport { CContainer, CSpinner } from '@coreui/react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport {\n  CAvatar,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CFormInput,\n  CButton,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CCollapse,\n  CToast,\n  CToastBody,\n  CToastClose,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilPeople, cilX,\n} from '@coreui/icons'\n\nimport {\n  CWidgetStatsA,\n} from '@coreui/react'\n\nimport avatar2 from 'src/assets/images/avatars/blank-avatar.png'\nimport arrowDown from 'src/assets/images/arrowDown.svg'\n\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\nimport { getAllMessages, getMessages } from './../http/chatAPI.js'\nimport { getAllWMessages, getWorkersCount } from './../http/workerAPI.js'\n\nimport WidgetsDropdown from '../views/widgets/WidgetsDropdown'\nimport WidgetsDropdown2 from '../views/widgets/WidgetsDropdown2'\nimport WidgetsDropdown3 from '../views/widgets/WidgetsDropdown3'\nimport WidgetsDropdown4 from '../views/widgets/WidgetsDropdown4'\nimport WidgetsDropdown5 from '../views/widgets/WidgetsDropdown5'\nimport WidgetsDropdown6 from '../views/widgets/WidgetsDropdown6'\n\nimport InputMask from 'react-input-mask';\n\nimport Chart from './../components/Chart'\nimport ChartBar from './../components/Chart2'\nimport specData from 'src/data/specData'\n\nconst Admin = () => {\n\n  const grafik = useRef(null);\n\n  const { users: clients } = useUsersContext();\n  const { managers: zakazchiki } = useUsersContext();\n  const { projects: projs } = useUsersContext();\n  const { companys: comps } = useUsersContext();\n  const { userWorkers: specusers } = useUsersContext();\n  const { workersAll, workers, setWorkers, managers, setManagers } = useUsersContext();\n\n  const [contacts, setContacts] = useState([]);\n  const [contacts2, setContacts2] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [newClients, setNewClients] = useState([]);\n  const [oldClients, setOldClients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [loading3, setLoading3] = useState(true);\n  const [loading4, setLoading4] = useState(true);\n  \n  const [sortWorkers, setSortWorkers] = useState([]);\n  const [newWorkers, setNewWorkers] = useState([]);\n  const [activWorkers, setActivWorkers] = useState([]);\n  const [delWorkers, setDelWorkers] = useState([]);\n\n  const [sortDelWorkers, setSortDelWorkers] = useState([]);\n\n  const [sortWorkers2, setSortWorkers2] = useState([]);\n  const [newWorkers2, setNewWorkers2] = useState([]);\n  const [activWorkers2, setActivWorkers2]= useState([]);\n  const [delWorkers2, setDelWorkers2]= useState([]);\n\n  const [catCount, setCatCount] = useState([])\n\n  const [dayWorkers, setDayWorkers]= useState([]);\n  const [weekWorkers, setWeekWorkers]= useState([]);\n  const [monthWorkers, setMonthWorkers]= useState([]);\n  const [yearWorkers, setYearWorkers]= useState([]);\n  const [periodWorkers, setPeriodWorkers]= useState([]);\n\n  const [showRenthub, setShowRenthub]= useState(false);\n  const [showRenthub2, setShowRenthub2]= useState(false);\n  const [showWorkhub, setShowWorkhub]= useState(true);\n  const [showDeleted, setShowDeleted]= useState(false);\n\n  const [activeKey, setActiveKey] = useState(2)\n\n  const [showWidget, setShowWidget] = useState(false)\n  const [showWidget2, setShowWidget2] = useState(true)\n  const [showWidget3, setShowWidget3] = useState(false)\n  const [showWidget4, setShowWidget4] = useState(false)\n  const [showWidget5, setShowWidget5] = useState(false)\n  const [showWidget6, setShowWidget6] = useState(false)\n\n  const [showCharts, setShowCharts]= useState(false);\n  const [showCharts2, setShowCharts2]= useState(false);\n  const [showCharts3, setShowCharts3]= useState(false);\n  const [showCharts4, setShowCharts4]= useState(false);\n  const [showCharts5, setShowCharts5]= useState(false);\n\n  const [showCountAll, setShowCountAll] = useState(false);\n  const [showNick, setShowNick]= useState(false);\n\n  const [tabhub, setTabhub]= useState('');\n\n  const [periodDate1, setPeriodDate1] = useState(\"\")\n  const [periodDate2, setPeriodDate2] = useState(\"\")\n\n  const [startWeek, setStartWeek] = useState(\"\")\n  const [timerId, setTimerId] = useState()\n  const [widthGrafik, setWdthGrafik] = useState(0);\n  const [text, setText]= useState(\"\");\n  const [textDelete, setTextDelete]= useState(\"\");\n  const [showTable, setShowTable] = useState([])\n\n  const chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID\n  const host = process.env.REACT_APP_API_URL\n  \n  useEffect(() => {\n    //set tab\n    setTabhub('Workhub')\n\n    //console.log(\"specusers: \", specusers)\n\n    setTimeout(()=> {\n      setShowNick(!showNick)\n    }, 10000)\n  })\n\n  useEffect(() => {\n    //get width\n    setWdthGrafik(grafik.current ? grafik.current.offsetWidth - 100 : 0)\n  }, [grafik.current]);\n//--------------------------------------------------------------------------------------------------\n\n  //поиск\n  useEffect(() => {\n\t\tconst filteredData = workersAll.filter(user=> (user.userfamily + user.username + user.chatId)?.replace(/[её]/g, '(е|ё)').toLowerCase().includes(text.replace(/[её]/g, '(е|ё)').toLowerCase()));\n    setSortWorkers(text === '' ? workersAll : filteredData); \n    setWorkers(text === '' ? workers : filteredData);  \n  }, [text]);\n\n  //поиск удаленных специалистов\n  useEffect(() => {\n\t\tconst filteredData = delWorkers.filter(user=> (user.userfamily + user.username + user.chatId)?.replace(/[её]/g, '(е|ё)').toLowerCase().includes(textDelete.replace(/[её]/g, '(е|ё)').toLowerCase()));\n    setSortDelWorkers(textDelete === '' ? delWorkers : filteredData);  \n  }, [textDelete]);\n\n\n  //get filter workers\n  useEffect(() => {\n    //setSortWorkers(workers)\n    console.log(\"workersAll: \", workersAll)\n\n    const currentDate = new Date()\n    const currentMonth = currentDate.getMonth()\n\n    //массив новых пользователей за текущий месяц\n    const arr1 = workersAll.filter(item => new Date(item.createDate).getMonth() === currentMonth && item.chatId !== null)\n    setNewWorkers(arr1)\n\n    //массив удаленных пользователей\n    const arrDel = workersAll.filter(item => item.deleted === true && item.chatId !== null)\n    setDelWorkers(arrDel)\n    setSortDelWorkers(arrDel)\n\n  }, [workersAll])\n//--------------------------------------------------------------------------------------------------\n\n//get workers active\nuseEffect(() => {\n  const arrClients = []\n\n  const fetchData = async() => {\n\n    let messages = await getAllWMessages()\n\n    workersAll.map((client, index) => {\n\n      const allMessages = messages ? messages.length : [] //всего сообщений\n      const currentMonth = new Date().getMonth()\n      const messagesUser = messages.find(el => el.senderId === client.chatId  && new Date(el.createdAt).getMonth() === currentMonth);\n      //массив активных пользователей за текущий месяц\n      if (messagesUser !== undefined) {\n        arrClients.push(messagesUser)\n      }  \n    })\n    setActivWorkers(arrClients)\n  }\n  \n  fetchData();\n  \n}, [workersAll]);\n//---------------------------------------------------------------------------------------------------------\n\n  //get Contacts\n  useEffect(() => {\n    const arrClients = []\n    const arrClients2 = []\n\n    const fetchData = async() => {\n\n      //console.log(\"workers (admin): \", workers.length)\n      setLoading2(false)\n      setLoading3(false)\n      setLoading4(false)\n\n      let messages = await getAllMessages()\n\n      //const managers = [...zakazchiki];\n      //console.log(\"zakazchiki: \", zakazchiki)\n\n      clients.map((client, index) => {\n        \n        // let userIndex = zakazchiki?.findIndex((manager) => manager.tgID === client.chatId);  \n        // const userObject = managers[userIndex];\n\n        //let userObject2 = comps.find((company) => company.managers.find(man => man.id ===  userObject?.id)) //company.managers.map((manager) => manager.id === userObject?.id));  \n\n        // const companyName = userObject2?.title\n        // const companyCity = userObject2?.city ? userObject2?.city : ''\n\n        const lastDate = client.date ? client.date.split('T') : ''\n        const d = new Date(lastDate[0]);\n\t\t\t\tconst year = d.getFullYear();\n\t\t\t\tconst month = String(d.getMonth()+1).padStart(2, \"0\");\n\t\t\t\tconst day = String(d.getDate()).padStart(2, \"0\");\n\t\t\t\tconst newDateActivity = `${day}.${month}.${year}`\n\n        const newClientName = client.name.includes(\"|\") ? client.name.split(\" | \")[1] : client.name\n         \n        const allMessages = messages ? messages.length : [] //всего сообщений\n        const fromAdmin = messages ? messages.filter(el => el.senderId === chatAdminId) : [];\n        const messagesUsers = messages ? messages.filter(el => el.senderId === client.chatId) : [];\n\n        const arr = clients.filter(el => el.message === '');\n        setNewClients(arr)\n\n        const arr2 = clients.filter(el => el.message !== '');\n        setOldClients(arr2)\n        \n        const newObj = {\n          avatar: client.avatar,\n          user: {\n            name: newClientName,\n            new: true,\n            registered: '01.01.2023',\n          },\n          TG_ID: client.chatId,\n          //city: companyCity,\n          //company: companyName ? companyName : '',\n          // phone: userObject?.phone,\n          usage: {\n            value: Math.round(messagesUsers.length * 100 / (allMessages - fromAdmin.length)), \n            period: '01.04.2023 - ' + newDateActivity,\n            color: 'success',\n          },\n          activity: newDateActivity,\n        }\n\n        arrClients.push(newObj)\n\n\n        const newObj2 = {\n          user: {\n            name: newClientName,\n            new: true,\n            registered: '01.01.2023',\n          },\n          createDate: client.createdAt,\n          TG_ID: client.chatId,\n          //city: companyCity,\n          //company: companyName ? companyName : '',\n          // phone: userObject?.phone,\n        }\n\n        arrClients2.push(newObj2)\n      })\n\n      const filteredClients = [...arrClients].filter((el) => el.TG_ID !== chatAdminId || el.TG_ID !== null); //без админского пользователя  \n      const clientSort = [...filteredClients].sort((a, b) => {       \n        return b.usage.value-a.usage.value  //сортировка по убывающей активности  \n      }) \n      \n      setContacts(clientSort)  \n\n\n\n      // const filteredClients2 = [...arrClients2].filter((el) => el.TG_ID !== chatAdminId && el.TG_ID !== ''); //без админского пользователя  \n      // console.log(\"filteredClients2: \", filteredClients2)\n      // setContacts2(filteredClients2)\n      \n      setTimeout(() => {\n        setLoading(false)\n      }, \"6000\")\n    }\n    \n    fetchData();\n    \n  }, [clients, workersAll]);\n//---------------------------------------------------------------------------------------------\n\n//get Projects\n  useEffect(() => {\n    const arrProjects = []\n\n    const fetchData = async () => {\n\t\t\t\n      projs.map(async (project) => {\n        const newProject = {\n\t\t\t\t\tid: project.id,\n\t\t\t\t\tname: project.title,\n\t\t\t\t\tstart: project.time_start,\n          created: project.time_created,\n          teh: project.teh,\n          manager: project.manager,\n          company: project.company,\n\t\t\t\t}\n        arrProjects.push(newProject)\n      })\n\n      setProjects(arrProjects) \n    }\n\n    fetchData();\n    \n  },[projs])\n\n//-----------------------------------------------------------------------------------------------\n\n  const openHub = (hub) => {\n    if (hub === 'Workhub') { \n      setShowWorkhub(true)\n      setShowRenthub(false)\n      setShowRenthub2(false)\n      setShowDeleted(false)\n      setActiveKey(2)\n      setShowWidget(false)\n      setShowWidget2(true)\n      setTabhub('Workhub')\n    }\n    if (hub === 'Renthub') { \n      setShowWorkhub(false)\n      setShowRenthub(true)\n      setShowRenthub2(false)\n      setShowDeleted(false)\n      setActiveKey(1)\n      setShowWidget(true)\n      setShowWidget2(false)\n      setTabhub('Renthub')\n    }\n    if (hub === 'Renthub2') { \n      setShowWorkhub(false)\n      setShowRenthub(false)\n      setShowRenthub2(true)\n      setShowDeleted(false)\n      setActiveKey(3)\n      setShowWidget(true)\n      setShowWidget2(false)\n      setTabhub('Renthub 2.0')\n    }\n    if (hub === 'Удаленные') { \n      setShowWorkhub(false)\n      setShowRenthub(false)\n      setShowRenthub2(false)\n      setShowDeleted(true)\n      setActiveKey(4)\n      // setShowWidget(true)\n      // setShowWidget2(false)\n      setTabhub('Удаленные')\n    }\n  }\n\n  //нажатия на кнопки\n  const showBlock = (ind) => {\n    setShowCountAll(true)\n    switch (ind) {\n\n      //за сутки\n      case 1:{\n        console.log(\"Фильтр за сутки: \", ind)\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n        setShowWidget6(false)\n\n        //открыть стартовые плашки\n        setShowWidget6(true)\n\n        let i = 0\n        setTimerId(setInterval(() => {\n          if ((i) % 4 === 0) {\n            setShowWidget2(true) //2\n            setShowWidget3(false) \n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+1) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(true) //3\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false) \n          }\n          if ((i+2) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(true) //4\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+3) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true) //5\n            setShowWidget6(false)\n          }  \n          if ((i+4) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(true) //6\n          }\n          i++\n        }, 3000));\n\n        setShowCharts(true)\n        setShowCharts2(false)\n        setShowCharts3(false)\n        setShowCharts4(false)\n        setShowCharts5(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за сутки\n        const carrentDate = Date.now()\n\n        //кол-во часов\n        const currentChas = new Date().getHours()\n        console.log(\"currentChas: \", currentChas)\n        \n        //за несколько часов\n        const needDate = carrentDate - currentChas*3600000\n\n        let arr = workersAll.filter(item => new Date(item.createDate).getTime() > needDate);\n\n        let categories = []\n        let count_cat\n\n        //console.log(\"arr1: \", arr)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.icon)) { //category.name\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        //console.log(\"categories: \", categories)\n        setCatCount(categories)\n\n        //всего пользователей\n        setSortWorkers(arr)\n        setWorkers(arr)\n\n        //массив новых пользователей за сутки\n        const arrNew = workersAll.filter(item => new Date(item.createDate).getTime() > needDate)\n        setNewWorkers2(arrNew)\n\n        //массив активных пользователей\n        // const arrActiv = activWorkers2.filter(item => new Date(item.createDate).getTime() > needDate)\n        // setActivWorkers2(arrActiv)\n\n        //массив удаленных пользователей\n        const arrDel = delWorkers.filter(item => item.deleted === true && new Date(item.createDate).getTime() > needDate)\n        setDelWorkers2(arrDel)\n        \n        let days1 = []\n        let countSpec = 0\n\n        //arr.map(item => console.log(\"arr: \", new Date(item.createDate)));\n\n        for (let i=0; i<=23; i++) {\n\n          const arrSpec = arr.filter(item => i === new Date(item.createDate).getHours() && i <= new Date().getHours());\n          countSpec = arrSpec.length\n          \n          const newObj= {\n            name: i<10 ? '0'+ i + ':00' : ''+ i + ':00', \n            value: countSpec,\n          }\n\n          days1.push(newObj)\n        }       \n\n        setDayWorkers(days1)\n\n        break;\n      }\n\n      //за неделю\n      case 2:{\n        clearTimeout(timerId);\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n        setShowWidget6(false)\n\n         //открыть стартовые плашки\n         setShowWidget6(true)\n\n         let i = 0\n         setTimerId(setInterval(() => {\n            if ((i) % 4 === 0) {\n              setShowWidget2(true) //2\n              setShowWidget3(false) \n              setShowWidget4(false)\n              setShowWidget5(false)\n              setShowWidget6(false)\n            }\n            if ((i+1) % 4 === 0) {\n              setShowWidget2(false)\n              setShowWidget3(true) //3\n              setShowWidget4(false)\n              setShowWidget5(false)\n              setShowWidget6(false) \n            }\n            if ((i+2) % 4 === 0) {\n              setShowWidget2(false)\n              setShowWidget3(false)\n              setShowWidget4(true) //4\n              setShowWidget5(false)\n              setShowWidget6(false)\n            }\n            if ((i+3) % 4 === 0) {\n              setShowWidget2(false)\n              setShowWidget3(false)\n              setShowWidget4(false)\n              setShowWidget5(true) //5\n              setShowWidget6(false)\n            }  \n            if ((i+4) % 4 === 0) {\n              setShowWidget2(false)\n              setShowWidget3(false)\n              setShowWidget4(false)\n              setShowWidget5(false)\n              setShowWidget6(true) //6\n            }\n            i++\n          }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(true)\n        setShowCharts3(false)\n        setShowCharts4(false)\n        setShowCharts5(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за неделю\n        const carrentDate = Date.now()\n        //console.log(\"carrentDate: \", carrentDate)\n\n        const dayNumber = [7, 1, 2, 3, 4, 5, 6][new Date().getDay()] -1\n\n        const needDate = carrentDate - 86400000*dayNumber //604800000\n        setStartWeek(new Date(needDate).toLocaleDateString())\n        //console.log(\"needDate: \", needDate)\n        \n        \n        let arr = workersAll.filter(item => new Date(item.createDate).getTime() > needDate);\n        let categories = []\n        let count_cat\n\n        console.log(\"arr2: \", arr)\n        console.log(\"specData: \", specData)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.icon)) { //category.name\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n\n        setSortWorkers(arr)\n        setWorkers(arr)\n\n        //массив новых пользователей за неделю\n        const arrNew = workersAll.filter(item => new Date(item.createDate).getTime() > needDate)\n        setNewWorkers2(arrNew)\n\n        //массив активных пользователей\n        // const arrActiv = workersAll.filter(item => new Date(item.createDate).getTime() > needDate)\n        // setActivWorkers2(arrActiv)\n\n        //массив удаленных пользователей\n        const arrDel = delWorkers.filter(item => item.deleted === true && new Date(item.createDate).getTime() > needDate)\n        setDelWorkers2(arrDel)\n\n        let week2 = []\n        let nameDay = ''\n        let countSpec = 0\n        for (let i=1; i<=7; i++) {\n          if (i===1) {\n            nameDay = 'Пн'\n            //let date = new Date(item.createDate);\n            //let dayWeek = [7, 1, 2, 3, 4, 5, 6][date.getDay()];\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===2) {\n            nameDay = 'Вт'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===3) {\n            nameDay = 'Ср'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===4) {\n            nameDay = 'Чт'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===5) {\n            nameDay = 'Пт'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===6) {\n            nameDay = 'Сб'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()]  && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n          if (i===7) {\n            nameDay = 'Вс'\n            const arrSpec = arr.filter(item => i === [7, 1, 2, 3, 4, 5, 6][new Date(item.createDate).getDay()] && i <= [7, 1, 2, 3, 4, 5, 6][new Date().getDay()]);\n            countSpec = arrSpec.length\n          }\n\n          const newObj= {\n                name: nameDay, \n                value: countSpec,\n              }\n          week2.push(newObj)\n        }  \n        console.log(\"week: \", week2)     \n        setWeekWorkers(week2)\n        break;\n      }\n\n      //за месяц\n      case 3:{\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n        setShowWidget6(false)\n\n         //открыть стартовые плашки\n         setShowWidget6(true)\n\n         let i = 0\n         setTimerId(setInterval(() => {\n          if ((i) % 4 === 0) {\n            setShowWidget2(true) //2\n            setShowWidget3(false) \n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+1) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(true) //3\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false) \n          }\n          if ((i+2) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(true) //4\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+3) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true) //5\n            setShowWidget6(false)\n          }  \n          if ((i+4) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(true) //6\n          }\n           i++\n         }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(false)\n        setShowCharts3(true)\n        setShowCharts4(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за месяц\n        const carrentDate = Date.now()\n        //console.log(\"carrentDate: \", carrentDate)\n\n        const dayNumber = new Date().getDate() - 1\n        \n        const needDate = carrentDate - dayNumber*86400000 //2592000000\n        //console.log(\"needDate: \", new Date(needDate))\n        \n        //кол-во специалистов за период на начало месяца по текущее число\n        let arr = workersAll.filter(item => new Date(item.createDate).getTime() > needDate);\n        let categories = []\n        let count_cat\n\n        console.log(\"arr3: \", arr)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.icon)) { //category.name\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n\n        setSortWorkers(arr)\n        //setMonthWorkers(arr)\n        setWorkers(arr)\n\n        //массив новых пользователей за месяц\n        const arrNew = workersAll.filter(item => new Date(item.createDate).getTime() > needDate)\n        setNewWorkers2(arrNew)\n\n        //массив активных пользователей\n        // const arrActiv = activWorkers2.filter(item => new Date(item.createDate).getTime() > needDate)\n        // setActivWorkers2(arrActiv)\n\n        //массив удаленных пользователей\n        const arrDel = delWorkers.filter(item => item.deleted === true && new Date(item.createDate).getTime() > needDate)\n        setDelWorkers2(arrDel)\n\n        let countSpec = 0\n        let month3 = []\n\n        for (let i=1; i<=31; i++) {\n          const arrSpec = arr.filter(item => i === new Date(item.createDate).getDate() && new Date().getMonth() === new Date(item.createDate).getMonth());\n          countSpec = arrSpec.length\n          const newObj= {\n            name: i<10 ? '0'+ i : ''+ i, \n            value: countSpec > 0 ? countSpec : '',\n          }\n          month3.push(newObj)\n        }  \n        console.log(\"month3: \", month3)     \n        setMonthWorkers(month3)\n        break;\n      }\n\n      //за год\n      case 4:{\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n        setShowWidget6(false)\n\n         //открыть стартовые плашки\n         setShowWidget6(true)\n\n         let i = 0\n         setTimerId(setInterval(() => {\n          if ((i) % 4 === 0) {\n            setShowWidget2(true) //2\n            setShowWidget3(false) \n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+1) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(true) //3\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false) \n          }\n          if ((i+2) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(true) //4\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+3) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true) //5\n            setShowWidget6(false)\n          }  \n          if ((i+4) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(true) //6\n          }\n           i++\n         }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(false)\n        setShowCharts3(false)\n        setShowCharts4(true)\n        setShowCharts5(false)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        //фильтрация таблицы за год\n        let arr = workersAll.filter(item => item.createDate.split('T')[0].split('-')[0] === '2025');\n        let categories = []\n        let count_cat\n\n        console.log(\"arr year: \", arr)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.icon)) { //category.name\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n\n        setSortWorkers(arr)\n        setWorkers(arr)\n\n        //массив новых пользователей\n\n         //массив новых пользователей за год\n         const arrNew = workersAll.filter(item => item.createDate.split('T')[0].split('-')[0] === '2025')\n         setNewWorkers2(arrNew)\n\n        //массив удаленных пользователей\n        const arrDel = delWorkers.filter(item => item.deleted === true && item.createDate.split('T')[0].split('-')[0] === '2025')\n        setDelWorkers2(arrDel)\n\n        arr.map((item)=>console.log(\"month: \", new Date(item.createDate).getMonth()+1))\n\n        //график\n        let year4 = []\n        let nameMonth = ''\n        let countSpec = 0\n        for (let i=1; i<=12; i++) {\n          if (i===1) {\n            nameMonth = 'Январь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===2) {\n            nameMonth = 'Февраль'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===3) {\n            nameMonth = 'Март'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===4) {\n            nameMonth = 'Апрель'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===5) {\n            nameMonth = 'Май'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===6) {\n            nameMonth = 'Июнь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===7) {\n            nameMonth = 'Июль'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===8) {\n            nameMonth = 'Август'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===9) {\n            nameMonth = 'Сентябрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===10) {\n            nameMonth = 'Октябрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===11) {\n            nameMonth = 'Ноябрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          if (i===12) {\n            nameMonth = 'Декабрь'\n            const arrSpec = arr.filter(item => i === new Date(item.createDate).getMonth()+1);\n            countSpec = arrSpec.length\n          }\n          \n          const newObj= {\n                name: nameMonth, \n                value: countSpec > 0 ? countSpec : '',\n              }\n              year4.push(newObj)\n        }  \n        console.log(\"year4: \", year4)     \n        setYearWorkers(year4)\n        break;\n      }\n\n      //за период\n      case 5:{\n        console.log(\"за период\", periodDate1, periodDate2)\n\n        clearTimeout(timerId);\n\n        //закрыть все плашки\n        setShowWidget2(false)\n        setShowWidget3(false)\n        setShowWidget4(false)\n        setShowWidget5(false)\n        setShowWidget6(false)\n\n        //открыть стартовые плашки\n        setShowWidget6(true)\n\n         let i = 0\n        setTimerId(setInterval(() => {\n          if ((i) % 4 === 0) {\n            setShowWidget2(true) //2\n            setShowWidget3(false) \n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+1) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(true) //3\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(false) \n          }\n          if ((i+2) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(true) //4\n            setShowWidget5(false)\n            setShowWidget6(false)\n          }\n          if ((i+3) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(true) //5\n            setShowWidget6(false)\n          }  \n          if ((i+4) % 4 === 0) {\n            setShowWidget2(false)\n            setShowWidget3(false)\n            setShowWidget4(false)\n            setShowWidget5(false)\n            setShowWidget6(true) //6\n          }\n           i++\n        }, 3000));\n\n        setShowCharts(false)\n        setShowCharts2(false)\n        setShowCharts3(false)\n        setShowCharts4(false)\n        setShowCharts5(true)\n\n        //установить ширину графика\n        setTimeout(() =>setWdthGrafik(grafik.current ? grafik.current.clientWidth - 100 : 0), 2000 )\n\n        let nextDay = new Date(periodDate1.split('.')[2], periodDate1.split('.')[1]-1, periodDate1.split('.')[0])\n        let endDay = new Date(periodDate2.split('.')[2], periodDate2.split('.')[1]-1, periodDate2.split('.')[0])\n\n        //фильтрация таблицы за период\n        let arr5 = workersAll.filter(item => new Date(item.createDate) > nextDay && new Date(item.createDate) < endDay);\n        setSortWorkers(arr5)\n\n\n        //массив новых пользователей за период\n        const arrNew = workersAll.filter(item => new Date(item.createDate) > nextDay && new Date(item.createDate) < endDay)\n        setNewWorkers2(arrNew)\n\n        //массив активных пользователей\n\n        //массив удаленных пользователей\n        const arrDel = delWorkers.filter(item => new Date(item.createDate) > nextDay && new Date(item.createDate) < endDay)\n        setDelWorkers2(arrDel)\n\n        let categories = []\n        let count_cat\n\n        console.log(\"arr5 period: \", arr5)\n\n        specData.map((category)=> {\n          count_cat = 0;\n\n          arr5.map((item)=> {\n            if (JSON.parse(item.worklist).find(work => work.cat === category.icon)) { //category.name\n              count_cat++\n            }\n          })\n\n          const obj = {\n            cat: category.name,\n            count: count_cat\n          }\n          categories.push(obj)\n        })\n\n        console.log(\"categories: \", categories)\n        setCatCount(categories)\n        setSortWorkers(arr5)\n        setWorkers(arr5)\n\n        //arr5.map((item)=>console.log(\"period: \", item))\n\n        //график\n        let period5 = []\n        let countSpec = 0\n\n        while (nextDay.getTime() < endDay.getTime()) { // выводит 0, затем 1, затем 2\n          const arrSpec = arr5.filter(item => nextDay.toLocaleDateString() === new Date(item.createDate).toLocaleDateString());\n          countSpec = arrSpec.length\n          const newObj= {\n            name: nextDay.getDate().toString().length < 2 ? '0'+nextDay.getDate() : nextDay.getDate().toString(), \n            value: countSpec > 0 ? countSpec : '',\n          }\n          period5.push(newObj)\n          //nextDay = nextDay + j\n          nextDay.setDate(nextDay.getDate() + 1);\n        }\n        \n        console.log(\"period5: \", period5)     \n        setPeriodWorkers(period5)\n\n        break;\n      }\n    }\n  }\n\n  const changeDate1 = (e) => {\n    setPeriodDate1(e.target.value)\n  }\n\n  const changeDate2 = (e) => {\n    setPeriodDate2(e.target.value)\n  }\n\n\n  const hideCharts = () => {\n    setShowCharts(false)\n    setShowCharts2(false)\n    setShowCharts3(false)\n    setShowCharts4(false)\n    \n    clearTimeout(timerId);\n\n    setShowWidget2(true) //всего\n    setShowWidget3(false) //категория 1\n    setShowWidget4(false) //категория 2\n    setShowWidget5(false) //категория 3\n    setShowWidget6(false) //категория 3\n    \n  }\n\n  const handleClick = (ind) => {\n    console.log(ind, showTable[ind])\n\n    setShowTable(prevShownTable => ({\n        ...prevShownTable,\n        [ind]: !prevShownTable[ind]\n      }));\n  }\n\n  const clickNext = async() => {\n\n    //1 все специалисты\n\t\tlet response = await getWorkersCount(100, workers.length);\n    console.log(\"workers size: \", workers.length)\n\n    const arrayWorker = []\n\t\t\n\t\t\tresponse.reverse().map(async (user) => {\n\t\t\t\tconst newWorker = {\n\t\t\t\t  id: user.id,\n\t\t\t\t  userfamily: user.userfamily,\n\t\t\t\t  username: user.username,\n\t\t\t\t  phone: user.phone,\n\t\t\t\t  dateborn: user.dateborn,\n\t\t\t\t  city: user.city, \n\t\t\t\t  companys: user.companys,\n\t\t\t\t  stag: user.stag,\n\t\t\t\t  worklist:  user.worklist,\n\t\t\t\t  chatId: user.chatId,\n\t\t\t\t  createDate: user.createdAt,\n\t\t\t\t  avatar: user.avatar,\n\t\t\t\t  from: user.from,\n\t\t\t\t  promoId: user.promoId,\n\t\t\t\t  block: user.block,\n\t\t\t\t  deleted: user.deleted,\n\t\t\t\t}\n\t\t\n\t\t\t\tarrayWorker.push(newWorker)\n\t\t\t})    \n\n      console.log(\"Всего сейчас: \", arrayWorker.length)\n\t\t\t\n      setWorkers(arrayWorker)\t\n      console.log(\"Ещё: \", arrayWorker.length)\n  }\n  \n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader tabs={tabhub}/>\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n              <Suspense fallback={<CSpinner color=\"primary\" />}>\n\n                <>\n                {showWidget \n                ?<WidgetsDropdown\n                  users={clients.length-1} \n                  projects={projects.length} \n                  companys={comps.length} \n                />\n                :\"\"}\n\n                {showWidget2 \n                ?<WidgetsDropdown2\n                  users={workersAll}\n                  newUsers={newWorkers} \n                  activeUsers={activWorkers} \n                  delUsers={delWorkers}\n                />\n                :\"\"}\n\n                {showWidget3 \n                ?<WidgetsDropdown3\n                  soundUsers={catCount[0].count}\n                  lightUsers={catCount[1].count}\n                  videoUsers={catCount[2].count}\n                  photoUsers={catCount[3].count}\n                />\n                :\"\"}\n\n                {showWidget4 \n                ?<WidgetsDropdown4                \n                  promoUsers={catCount[4].count}\n                  cateringUsers={catCount[5].count}\n                  stagehandsUsers={catCount[6].count}\n                  riggerUsers={catCount[7].count}\n                />\n                : \"\"}\n\n                {showWidget5 \n                ?<WidgetsDropdown5\n                  trucksUsers={catCount[8].count}\n                  partyUsers={catCount[9].count}\n                  gamesUsers={catCount[10].count}\n                  productionUsers={catCount[11].count}\n                />\n                : \"\"}\n\n                {showWidget6 \n                ?<WidgetsDropdown6\n                  users={workersAll}\n                  newUsers={newWorkers2} \n                  activeUsers={activWorkers} \n                  delUsers={delWorkers2}\n                />\n                :\"\"}\n                \n\n{/* График Сутки */}\n {showCharts ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"gray\"\n                  value={<></>}\n                  title={new Date().toLocaleDateString()}\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}} /></>}\n                  chart={            \n                    <ChartBar\n                      range={8}\n                      data={dayWorkers} \n                      data2={[]}\n                      // data2={\n                      //   [\n                      //     { name: '0:00', value: 1 },\n                      //     { name: '01:00', value: 0 },\n                      //     { name: '02:00', value: 0 },\n                      //     { name: '03:00', value: 0 },\n                      //     { name: '04:00', value: 0 },\n                      //     { name: '05:00', value: 0 },\n                      //     { name: '06:00', value: 0 },\n                      //     { name: '07:00', value: 1 },\n                      //     { name: '08:00', value: 0 },\n                      //     { name: '09:00', value: 0 },\n                      //     { name: '10:00', value: 0 },\n                      //     { name: '11:00', value: 0 },\n                      //     { name: '12:00', value: 0 },\n                      //     { name: '13:00', value: 0 },\n                      //     { name: '14:00', value: 0 },\n                      //     { name: '15:00', value: 0 },\n                      //     { name: '16:00', value: 0 },\n                      //     { name: '17:00', value: 2 },\n                      //     { name: '18:00', value: 1 },\n                      //     { name: '19:00', value: 0 },\n                      //     { name: '20:00', value: 0 },\n                      //     { name: '21:00', value: 0 },\n                      //     { name: '22:00', value: 0 },\n                      //     { name: '23:00', value: 0 },\n                      //   ]\n                      // }\n                      width={widthGrafik} height={350} \n                    />\n\n                  }\n                />\n: \"\"\n}\n\n{/* График Неделя */}\n{showCharts2 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"gray\"\n                  value={<></>}\n                  title={startWeek + ' - ' + new Date(new Date(startWeek.split('.')[2], startWeek.split('.')[1]-1, startWeek.split('.')[0]).setDate(new Date(startWeek.split('.')[2], startWeek.split('.')[1]-1, startWeek.split('.')[0]).getDate() + 6)).toLocaleDateString()}\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}}/></>}\n                  chart={\n                    <ChartBar \n                      range={40}\n                      data={weekWorkers} \n                      data2={[]} //удаленные пользователи\n                      // data2={\n                      //   [\n                      //     { name: 'Пн', value: 0 },\n                      //     { name: 'Вт', value: 0 },\n                      //     { name: 'Ср', value: 0 },\n                      //     { name: 'Чт', value: 0 },\n                      //     { name: 'Пт', value: 0 },\n                      //     { name: 'Сб', value: 0 },\n                      //     { name: 'Вс', value: 0 },\n                      //   ]\n                      // }\n                      width={widthGrafik} height={350} \n                    />\n                  }\n                />\n: \"\"\n}\n\n{/* График Месяц */}\n{showCharts3 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"gray\"\n                  value={<></>}\n                  title={new Date().toLocaleString('default', { month: 'long' })}\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}}/></>}\n                  chart={\n                    <Chart \n                      range={20}\n                      data={monthWorkers} \n                      // data={\n                      //   [\n                      //     { name: '01', value: 1 },\n                      //     { name: '02', value: 0 },\n                      //     { name: '03', value: 0 },\n                      //     { name: '04', value: 0 },\n                      //     { name: '05', value: 0 },\n                      //     { name: '06', value: 0 },\n                      //     { name: '07', value: 0 },\n                      //     { name: '08', value: 0 },\n                      //     { name: '09', value: 0 },\n                      //     { name: '10', value: 0 },\n                      //     { name: '11', value: 0 },\n                      //     { name: '12', value: 1 },\n                      //     { name: '13', value: 1 },\n                      //     { name: '14', value: 0 },\n                      //     { name: '15', value: 0 },\n                      //     { name: '16', value: 0 },\n                      //     { name: '17', value: 0 },\n                      //     { name: '18', value: 0 },\n                      //     { name: '19', value: 0 },\n                      //     { name: '20', value: 0 },\n                      //     { name: '21', value: 0 },\n                      //     { name: '22', value: 0 },\n                      //     { name: '23', value: 0 },\n                      //     { name: '24', value: 1 },\n                      //     { name: '25', value: 1 },\n                      //     { name: '26', value: 0 },\n                      //     { name: '27', value: 0 },\n                      //     { name: '28', value: 0 },\n                      //     { name: '29', value: 0 },\n                      //     { name: '30', value: 0 },\n                      //   ]\n                      // }\n                      data2={[]} //удаленные пользователи\n                      width={widthGrafik} height={350} />\n                  }\n                />\n: \"\"\n}\n\n{/* График Год */}\n{showCharts4 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"gray\"\n                  value={<></>}\n                  title={new Date().getFullYear()}\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}} /></>}\n                  chart={\n                    <Chart \n                      range={800}\n                      data={yearWorkers}\n                      data2={[]} \n                      // data2={\n                      //   [\n                      //     { name: 'Январь', value: 0 },\n                      //     { name: 'Февраль', value: 0 },\n                      //     { name: 'Март', value: 0 },\n                      //     { name: 'Апрель', value: 0 },\n                      //     { name: 'Май', value: 1 },\n                      //     { name: 'Июнь', value: 0 },\n                      //     { name: 'Июль', value: 0 },\n                      //     { name: 'Август', value: 2 },\n                      //     { name: 'Сентябрь', value: 2 },\n                      //     { name: 'Октябрь', value: 0 },\n                      //     { name: 'Ноябрь', value: 0 },\n                      //     { name: 'Декабрь', value: 0 },\n                      //   ]\n                      // }\n                      width={widthGrafik} height={350} \n                    />             \n                  }\n                />\n: \"\"\n}\n\n{/* График Период */}\n{showCharts5 ?  <CWidgetStatsA\n                  ref={grafik}\n                  className=\"mb-4 box\"\n                  color=\"gray\"\n                  value={<></>}\n                  title={periodDate1 + ' - ' + periodDate2}\n                  action={<><CIcon icon={cilX} onClick={hideCharts} className=\"text-high-emphasis-inverse\" style={{cursor: 'pointer'}} /></>}\n                  chart={\n                    <Chart \n                      range={800}\n                      data={periodWorkers} \n                      data2={[]}                  \n                      width={widthGrafik} \n                      height={350} \n                    />             \n                  }\n                />\n: \"\"\n}\n\n                <CRow className=\"mb-12\">\n                  {/* Вкладки */}\n                  <CCol sm={6}>\n                    {/* Renthub Workhub */} \n                    <CNav variant=\"tabs\" className='dark-theme'>\n                          <CNavItem>\n                            <CNavLink \n                              style={{background: activeKey !== 2 ? '#08080869' : '', cursor: 'pointer'}} \n                              onClick={() => openHub('Workhub')} \n                              active={activeKey === 2}>\n                                Workhub\n                            </CNavLink>\n                          </CNavItem>\n                          <CNavItem>\n                            <CNavLink \n                              style={{background: activeKey !== 1 ? '#08080869' : '', cursor: 'pointer'}} \n                              onClick={() => openHub('Renthub')} \n                              active={activeKey === 1}>\n                                Renthub\n                            </CNavLink>\n                          </CNavItem>\n                          <CNavItem>\n                            <CNavLink \n                              style={{background: activeKey !== 3 ? '#08080869' : '', cursor: 'pointer'}} \n                              onClick={() => openHub('Renthub2')} \n                              active={activeKey === 3}>\n                                Renthub 2.0\n                            </CNavLink>\n                          </CNavItem>\n                    </CNav>\n                  </CCol>\n\n                  <CCol sm={6}>\n                    {/* Удаленные */} \n                    <CNav variant=\"tabs\" className='dark-theme' style={{justifyContent: 'flex-end'}}>\n                          <CNavItem>\n                            <CNavLink \n                              style={{background: activeKey !== 4 ? '#08080869' : '', cursor: 'pointer'}} \n                              onClick={() => openHub('Удаленные')} \n                              active={activeKey === 4}>\n                                Удаленные\n                            </CNavLink>\n                          </CNavItem>\n                    </CNav>\n                  </CCol> \n                </CRow>\n                \n\n                <CCard className='rounded-bottom' style={{borderRadius: '0px', borderColor: '#131c21', borderTopRightRadius: '0.375rem'}}>\n\n{/*---------------------------------------- Renthub ------------------------------------  */} \n                  <CCardBody id=\"Renthub\" style={{display: showRenthub ? 'block' : 'none'}}>\n                    <CRow>\n                      <CCol xs>\n                        <CCard className=\"mb-4\">\n                          <CCardHeader style={{textAlign: 'left'}}>Пользователи бота ({clients.length - 1})</CCardHeader>\n                          <CCardBody>\n                            <CRow>\n                              <CCol xs={12} md={6} xl={6}>\n                                <CRow>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                                      <div className=\"text-medium-emphasis small\">Новые клиенты</div>\n                                      <div className=\"fs-5 fw-semibold\">{newClients.length}</div>\n                                    </div>\n                                  </CCol>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Постоянные клиенты</div>\n                                      <div className=\"fs-5 fw-semibold\">{oldClients.length-1}</div>\n                                    </div>\n                                  </CCol>\n                                </CRow>\n                              </CCol>\n\n                              <CCol xs={12} md={6} xl={6}>\n                                <CRow>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Просмотры</div>\n                                      <div className=\"fs-5 fw-semibold\">-</div>\n                                    </div>\n                                  </CCol>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Другое</div>\n                                      <div className=\"fs-5 fw-semibold\">-</div>\n                                    </div>\n                                  </CCol>\n                                </CRow>\n\n                                <div className=\"mb-5\"></div>\n\n                              </CCol>\n                            </CRow>\n\n                          {loading ? \n                                      \n                            <CSpinner/> :\n\n                            <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                              <CTableHead className='table-dark'>\n                                <CTableRow>\n                                  <CTableHeaderCell style={{width: '30px'}}>№</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>\n                                    <CIcon icon={cilPeople} />\n                                  </CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '160px'}}>Пользователь</CTableHeaderCell>                             \n                                  <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Организация</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Телефон</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '80px'}}>Город</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>TG ID</CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '100px'}}>Использование</CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '100px'}}>Активность</CTableHeaderCell>\n                                </CTableRow>\n                              </CTableHead>\n                              <CTableBody>\n                                {contacts.map((item, index) => (\n                                  <CTableRow v-for=\"item in tableItems\" key={index}>\n                                    <CTableDataCell className=\"text-center\">\n                                      {index+1}\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                        <CAvatar size=\"md\" src={item.avatar ? host + item.avatar : avatar2} alt='' />\n                                    </CTableDataCell>\n                                    <CTableDataCell>\n                                      <div>{item.user.name}</div>\n                                      <div className=\"small text-medium-emphasis\">\n                                      </div>\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      {/* {item.company ? <div>{item.company}</div> : ''} */}\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      {/* <div>{item.phone}</div> */}\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      <div>{item.city}</div>\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center\">\n                                      <div>{item.TG_ID}</div>\n                                    </CTableDataCell>\n                                    <CTableDataCell>\n                                      <div className=\"clearfix\">\n                                        <div className=\"float-start\">\n                                          <strong>{item.usage.value}%</strong>\n                                        </div>\n                                        <div className=\"float-end\">\n                                          <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                                        </div>\n                                      </div>\n                                      <CProgress thin color={item.usage.color} value={item.usage.value} />\n                                    </CTableDataCell>\n                                    <CTableDataCell>\n                                      <div className=\"small text-medium-emphasis\">Последний вход</div>\n                                      <strong>{item.activity}</strong>\n                                    </CTableDataCell>\n                                  </CTableRow>\n                                ))}\n                              </CTableBody>\n                            </CTable>\n                          }\n                          </CCardBody>\n                        </CCard>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n\n{/*----------------------------------------- Workhub ----------------------------------------  */}\n                  <CCardBody id=\"Workhub\" style={{display: showWorkhub ? 'block' : 'none'}}>\n                    <CRow>\n                      <CCol xs>\n                            <CRow>\n                              <CCol md={6} style={{textAlign: 'left'}}>\n                                <CButton color=\"dark\" onClick={()=>showBlock(1)} style={{marginRight: '20px', width: '100px'}}>Сутки</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(2)} style={{marginRight: '20px', width: '100px'}}>Неделя</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(3)} style={{marginRight: '20px', width: '100px'}}>Месяц</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(4)} style={{marginRight: '20px', width: '100px'}}>Год</CButton>\n                              </CCol>\n                              <CCol md={6} style={{textAlign: 'center', display: 'flex'}}>\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate1}\n                                  onChange={changeDate1}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"01.01.2025\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}}    \n                                                  />}\n                                </InputMask>\n\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate2}\n                                  onChange={changeDate2}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"31.12.2025\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}} \n                                                  />}\n                                </InputMask>                             \n                                            \n                                <CButton color=\"dark\" onClick={()=>showBlock(5)} style={{marginLeft: '10px'}}>Применить</CButton>\n                              </CCol>      \n                            </CRow>\n                            \n                            <br/>\n                            <CRow className=\"mb-3\">\n                              <CCol sm={3} >\n                                <CFormInput placeholder=\"Поиск специалиста...\" onChange={(e)=>setText(e.target.value)} aria-label=\"workers\"/>\n                              </CCol>\n                              <CCol sm={6}></CCol>\n\n                              <CCol sm={3} style={{textAlign: 'right', position: 'absolute', top: '-538px', right: '0', marginRight: '35px'}}>\n                                {/* {showCountAll ? sortWorkers.length : ''} */}\n                              </CCol>\n                            </CRow>\n                            \n                            <CRow>\n                              <CCol style={{textAlign: 'center'}}>\n                              {loading2 ? \n                                      \n                                <CSpinner/> :\n\n                                <CTable align=\"middle\" className=\"mb-0 border\" hover responsive style={{fontSize: '14px'}}>\n                                  <CTableHead className='table-light'>\n                                    <CTableRow>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '90px'}}>Дата</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '70px'}}>Время</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '240px'}}>ФИО</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '130px'}}>Город</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" >Специальность</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '90px'}}>Дата</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '160px'}}>Телефон</CTableHeaderCell>                         \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '200px'}}>{ showNick ? 'Ник' : 'ID' }</CTableHeaderCell>\n                                    </CTableRow>\n                                  </CTableHead>\n                                  <CTableBody>                                  \n                                    {workers.map((item, index) => (\n                                      <CTableRow v-for=\"item in tableItems\" key={index} style={{lineHeight: '14px'}}>\n                                        <CTableDataCell className=\"text-center\">\n                                          {String(new Date(item.createDate).getDate()).padStart(2, \"0\")+ \".\"+ String(new Date(item.createDate).getMonth()+1).padStart(2, \"0\") + \".\" +new Date(item.createDate).getFullYear()}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {new Date(item.createDate).getHours() + ' : '+ String(new Date(item.createDate).getMinutes()).padStart(2, \"0\")}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 || item.userfamily === 'Неизвестный' ? 'red' : ''}}>\n                                            {item.userfamily ? (item.userfamily !== item.username ? item.userfamily : '') : ''} {item.username ? item.username : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {item.city ? item.city : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{textAlign: 'left'}}>\n                                          <div onClick={()=>handleClick(index)} style={{cursor: 'pointer', textAlign: 'center'}}>{!showTable[index] ? 'Посмотреть' : <br/>}</div>\n                                          <CCollapse visible={showTable[index]}>\n                                            <table>\n                                              <tbody>\n                                                {item.worklist !== null && JSON.parse(item.worklist).length > 0 ? (JSON.parse(item.worklist)).map((spec, index)=>( \n                                                    <tr key={index}>\n                                                      <td>{spec.spec !== '' ? \"- \" + spec.spec : ''}</td>\n                                                    </tr>          \n                                                )) : \"\"}\n                                              </tbody> \n                                            </table>\n                                          </CCollapse>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 ? 'red' : ''}}>\n                                          {item.dateborn ? new Date(item.dateborn).toLocaleString().split(',')[0] : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div>{item.phone ? item.phone : ''}</div>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div style={{fontSize: showNick ? '12px' : '14px'}}>{showNick ? specusers.find((user) => user.chatId === item.chatId)?.username : item.chatId}</div>\n                                        </CTableDataCell> \n                                      </CTableRow>\n                                      ))\n                                    }\n                                    {/* <CTableRow>\n                                      <CTableDataCell className=\"text-center\">\n                                        <CButton color=\"dark\" onClick={()=>clickNext()} style={{width: '100px'}}>Ещё</CButton>\n                                      </CTableDataCell>\n                                    </CTableRow> */}\n                                </CTableBody>                   \n                              </CTable>\n                              \n                            }\n                            \n                              </CCol>\n                            </CRow>\n                            <div style={{display: 'flex', justifyContent: 'center' }}>\n                              <img src={arrowDown} alt='' onClick={()=>clickNext()} style={{width: '50px', marginTop: '15px', cursor: 'pointer'}}></img>\n                            </div>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n\n{/*----------------------------------------- Renthub 2.0 ----------------------------------------  */}\n                  <CCardBody id=\"Renthub2\" style={{display: showRenthub2 ? 'block' : 'none'}}>\n                    <CRow>\n                      <CCol xs>\n                            <CRow>\n                              <CCol md={6} style={{textAlign: 'left'}}>\n                                <CButton color=\"dark\" onClick={()=>showBlock(1)} style={{marginRight: '20px', width: '100px'}}>Сутки</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(2)} style={{marginRight: '20px', width: '100px'}}>Неделя</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(3)} style={{marginRight: '20px', width: '100px'}}>Месяц</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(4)} style={{marginRight: '20px', width: '100px'}}>Год</CButton>\n                              </CCol>\n                              <CCol md={6} style={{textAlign: 'center', display: 'flex'}}>\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate1}\n                                  onChange={changeDate1}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"01.01.2025\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}}    \n                                                  />}\n                                </InputMask>\n\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate2}\n                                  onChange={changeDate2}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"31.12.2025\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}} \n                                                  />}\n                                </InputMask>                             \n                                            \n                                <CButton color=\"dark\" onClick={()=>showBlock(5)} style={{marginLeft: '10px'}}>Применить</CButton>\n                              </CCol>      \n                            </CRow>\n                            \n                            <br/>\n                            <CRow className=\"mb-3\">\n                              <CCol sm={3} >\n                                <CFormInput placeholder=\"Поиск менеджера...\" onChange={(e)=>setText(e.target.value)} aria-label=\"workers\"/>\n                              </CCol>\n                              <CCol sm={6}></CCol>\n\n                              <CCol sm={3} style={{textAlign: 'right', position: 'absolute', top: '-538px', right: '0', marginRight: '35px'}}>\n                                {/* {showCountAll ? sortWorkers.length : ''} */}\n                              </CCol>\n                            </CRow>\n                            \n                            <CRow>\n                              <CCol style={{textAlign: 'center'}}>\n                              {loading3 ? \n                                      \n                                <CSpinner/> :\n\n                                <CTable align=\"middle\" className=\"mb-0 border\" hover responsive style={{fontSize: '14px'}}>\n                                  <CTableHead className='table-light'>\n                                    <CTableRow>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '90px'}}>Дата</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '70px'}}>Время</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '240px'}}>ФИО</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '130px'}}>Город</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" >Проекты</CTableHeaderCell>  \n                                      {/* <CTableHeaderCell className=\"text-center\" style={{minWidth: '90px'}}>Дата</CTableHeaderCell> */}\n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '160px'}}>Телефон</CTableHeaderCell>                         \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '200px'}}>{ showNick ? 'Ник' : 'ID' }</CTableHeaderCell>\n                                    </CTableRow>\n                                  </CTableHead>\n                                  <CTableBody>                                  \n                                    {contacts2.length > 0 ? contacts2.map((item, index) => (\n                                      <CTableRow v-for=\"item in tableItems\" key={index}>\n                                        <CTableDataCell className=\"text-center\">\n                                          {String(new Date(item.createDate).getDate()).padStart(2, \"0\")+ \".\"+ String(new Date(item.createDate).getMonth()+1).padStart(2, \"0\") + \".\" +new Date(item.createDate).getFullYear()}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {new Date(item.createDate).getHours() + ' : '+ String(new Date(item.createDate).getMinutes()).padStart(2, \"0\")}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.userfamily === 'Неизвестный' ? 'red' : ''}}>\n                                            {item.user ? item.user.name : ''} \n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {item.city ? item.city : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{textAlign: 'left'}}>\n                                          <div onClick={()=>handleClick(index)} style={{cursor: 'pointer', textAlign: 'center'}}>{!showTable[index] ? 'Посмотреть' : <br/>}</div>\n                                          <CCollapse visible={showTable[index]}>\n                                            <table>\n                                              <tbody>\n                                                {/* {item.worklist !== '' ? (JSON.parse(item.worklist)).map((spec, index)=>( \n                                                    <tr key={index}>\n                                                      <td>{spec.spec !== '' ? \"- \" + spec.spec : ''}</td>\n                                                    </tr>          \n                                                )) : \"\"} */}\n                                              </tbody> \n                                            </table>\n                                          </CCollapse>\n                                        </CTableDataCell>\n                                        {/* <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 ? 'red' : ''}}>\n                                          {item.dateborn ? item.dateborn : ''}\n                                        </CTableDataCell> */}\n                                        <CTableDataCell className=\"text-center\">\n                                          <div>{item.phone ? item.phone : ''}</div>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div style={{fontSize: showNick ? '12px' : '14px'}}>{showNick ? specusers.find((user) => user.chatId === item.chatId)?.username : item.TG_ID}</div>\n                                        </CTableDataCell> \n                                      </CTableRow>\n                                      ))\n                                      : <CTableRow><CTableDataCell colSpan=\"8\" className=\"text-center\">Список менеджеров пуст</CTableDataCell></CTableRow>\n                                    }\n                                    {/* <CTableRow>\n                                      <CTableDataCell className=\"text-center\">\n                                        <CButton color=\"dark\" onClick={()=>clickNext()} style={{width: '100px'}}>Ещё</CButton>\n                                      </CTableDataCell>\n                                    </CTableRow> */}\n                                </CTableBody>                   \n                              </CTable>\n                              \n                            }\n                            \n                              </CCol>\n                            </CRow>\n                            <div style={{display: 'flex', justifyContent: 'center' }}>\n                              <img src={arrowDown} alt='' onClick={()=>clickNext()} style={{width: '50px', marginTop: '15px', cursor: 'pointer'}}></img>\n                            </div>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n\n{/*----------------------------------------- Удаленные -----------------------------------------  */}  \n                  <CCardBody id=\"Deleted\" style={{display: showDeleted ? 'block' : 'none'}}>\n                    <CRow>\n                      <CCol xs>\n                            <CRow>\n                              <CCol md={6} style={{textAlign: 'left'}}>\n                                <CButton color=\"dark\" onClick={()=>showBlock(1)} style={{marginRight: '20px', width: '100px'}}>Сутки</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(2)} style={{marginRight: '20px', width: '100px'}}>Неделя</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(3)} style={{marginRight: '20px', width: '100px'}}>Месяц</CButton>\n                                <CButton color=\"dark\" onClick={()=>showBlock(4)} style={{marginRight: '20px', width: '100px'}}>Год</CButton>\n                              </CCol>\n                              <CCol md={6} style={{textAlign: 'center', display: 'flex'}}>\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate1}\n                                  onChange={changeDate1}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"01.01.2025\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}}    \n                                                  />}\n                                </InputMask>\n\n                                <InputMask \n                                  mask=\"99.99.9999\"\n                                  value={periodDate2}\n                                  onChange={changeDate2}>\n                                  {(inputProps) => <CFormInput \n                                                    {...inputProps} \n                                                    placeholder=\"31.12.2025\" \n                                                    disableUnderline\n                                                    aria-label=\"sm input example\"\n                                                    style={{marginLeft: '10px'}} \n                                                  />}\n                                </InputMask>                             \n                                            \n                                <CButton color=\"dark\" onClick={()=>showBlock(5)} style={{marginLeft: '10px'}}>Применить</CButton>\n                              </CCol>      \n                            </CRow>\n                            \n                            <br/>\n                            <CRow className=\"mb-3\">\n                              <CCol sm={3} >\n                                <CFormInput placeholder=\"Поиск специалиста...\" onChange={(e)=>setTextDelete(e.target.value)} aria-label=\"workers\"/>\n                              </CCol>\n                              <CCol sm={6}></CCol>\n\n                              <CCol sm={3} style={{textAlign: 'right', position: 'absolute', top: '-538px', right: '0', marginRight: '35px'}}>\n                                {showCountAll ? sortWorkers.length : ''}\n                              </CCol>\n                            </CRow>\n                            \n                            <CRow>\n                              <CCol style={{textAlign: 'center'}}>\n                              {loading4 ? \n                                      \n                                <CSpinner/> :\n\n                                <CTable align=\"middle\" className=\"mb-0 border\" hover responsive style={{fontSize: '14px'}}>\n                                  <CTableHead className='table-light'>\n                                    <CTableRow>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '90px'}}>Дата</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '70px'}}>Время</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '240px'}}>ФИО</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '130px'}}>Город</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" >Специальность</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '90px'}}>Дата</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '160px'}}>Телефон</CTableHeaderCell>                         \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '200px'}}>{ showNick ? 'Ник' : 'ID' }</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '50px'}}></CTableHeaderCell>   \n                                    </CTableRow>\n                                  </CTableHead>\n                                  <CTableBody>                                  \n                                    {sortDelWorkers.map((item, index) => (\n                                      <CTableRow v-for=\"item in tableItems\" key={index}>\n                                        <CTableDataCell className=\"text-center\">\n                                          {String(new Date(item.createDate).getDate()).padStart(2, \"0\")+ \".\"+ String(new Date(item.createDate).getMonth()+1).padStart(2, \"0\") + \".\" +new Date(item.createDate).getFullYear()}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {new Date(item.createDate).getHours() + ' : '+ String(new Date(item.createDate).getMinutes()).padStart(2, \"0\")}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 || item.userfamily === 'Неизвестный' ? 'red' : ''}}>\n                                            {item.userfamily ? item.userfamily : ''} {item.username ? item.username : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          {item.city ? item.city : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell style={{textAlign: 'left'}}>\n                                          <div onClick={()=>handleClick(index)} style={{cursor: 'pointer', textAlign: 'center'}}>{!showTable[index] ? 'Посмотреть' : <br/>}</div>\n                                          <CCollapse visible={showTable[index]}>\n                                            <table>\n                                              <tbody>\n                                                {item.worklist !== '' ? (JSON.parse(item.worklist)).map((spec, index)=>( \n                                                    <tr key={index}>\n                                                      <td>{spec.spec !== '' ? \"- \" + spec.spec : ''}</td>\n                                                    </tr>          \n                                                )) : \"\"}\n                                              </tbody> \n                                            </table>\n                                          </CCollapse>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\" style={{color: item.dateborn >= 2005 ? 'red' : ''}}>\n                                          {item.dateborn ? item.dateborn : ''}\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div>{item.phone ? item.phone : ''}</div>\n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center\">\n                                          <div style={{fontSize: showNick ? '12px' : '14px'}}>{showNick ? specusers.find((user) => user.chatId === item.chatId)?.username : item.chatId}</div>\n                                        </CTableDataCell> \n                                        <CTableDataCell className=\"text-center\">\n                                          <CButton size=\"sm\" color=\"dark\">Восстановить</CButton>\n                                        </CTableDataCell> \n                                      </CTableRow>\n                                      ))\n                                    }\n                                </CTableBody>                   \n                              </CTable>\n                              \n                            }\n                            \n                              </CCol>\n                            </CRow>\n                            <CRow>\n                              {/* <CCol>\n                                Всего: {sortWorkers.length}\n                              </CCol> */}\n                            </CRow>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n\n                </CCard>\n\n                </>\n\n                </Suspense>\n            </CContainer>\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Admin\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = ({users, projects, companys}) => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              {users} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title=\"Заказчики\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {projects} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title=\"Проекты\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {companys}{' '}\n              {/* <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title=\"Компании\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              44{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Часы [за год]\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n\nconst WidgetsDropdown2 = ({\n  users, \n  newUsers, \n  activeUsers, \n  delUsers, \n}) => {\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              {users.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Всего\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [\n                      (users.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/users.length-5, \n                      (users.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/users.length-5, \n                     0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {newUsers.length} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title={\"Новые\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [\n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 0)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 1)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 2)).length*100/newUsers.length-5, \n                      (newUsers.filter(item => new Date(item.createDate).getMonth() === 3)).length*100/newUsers.length-5, \n                      0, 0, 0\n                    ],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -5,\n                    max: 95,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {activeUsers.length} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title={\"Активные\"}\n          action={\"\"}\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [activeUsers, 0, 0, 0, 0, 0, 0],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              {delUsers.length}\n            </>\n          }\n          title={\"Удаленные\"}\n          action={\"\"}\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'Январь', \n                  'Февраль', \n                  'Март', \n                  'Апрель', \n                  'Май', \n                  'Июнь', \n                  'Июль',\n                  'Август',\n                  'Сентябрь',\n                  'Октябрь',\n                  'Ноябрь',\n                  'Декабрь',\n                ],\n                datasets: [\n                  {\n                    label: 'Специалисты',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [delUsers, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown2\n"],"names":["id","name","icon","models","color","soundUsers","lightUsers","videoUsers","photoUsers","sm","lg","className","value","title","action","src","alt","width","chart","style","height","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","Math","floor","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","fill","Photo","promoUsers","cateringUsers","stagehandsUsers","riggerUsers","Promo","Catering","barPercentage","drawTicks","trucksUsers","partyUsers","gamesUsers","productionUsers","Party","users","newUsers","activeUsers","delUsers","length","filter","item","Date","createDate","getMonth","data2","range","React","setActiveIndex","getX","d3","padding","domain","map","getY","areaPath","d","bandwidth","y0","y1","curve","onMouseMove","e","nativeEvent","offsetX","index","step","onMouseLeave","ref","xAxis","call","transform","opacity","rx","ry","textAnchor","grafik","useRef","useUsersContext","clients","managers","projs","projects","comps","companys","specusers","userWorkers","workersAll","workers","setWorkers","setManagers","useState","contacts","setContacts","contacts2","setProjects","newClients","setNewClients","oldClients","setOldClients","loading","setLoading","loading2","setLoading2","loading3","setLoading3","loading4","setLoading4","sortWorkers","setSortWorkers","newWorkers","setNewWorkers","activWorkers","setActivWorkers","delWorkers","setDelWorkers","sortDelWorkers","setSortDelWorkers","newWorkers2","setNewWorkers2","delWorkers2","setDelWorkers2","catCount","setCatCount","dayWorkers","setDayWorkers","weekWorkers","setWeekWorkers","monthWorkers","setMonthWorkers","yearWorkers","setYearWorkers","periodWorkers","setPeriodWorkers","showRenthub","setShowRenthub","showRenthub2","setShowRenthub2","showWorkhub","setShowWorkhub","showDeleted","setShowDeleted","activeKey","setActiveKey","showWidget","setShowWidget","showWidget2","setShowWidget2","showWidget3","setShowWidget3","showWidget4","setShowWidget4","showWidget5","setShowWidget5","showWidget6","setShowWidget6","showCharts","setShowCharts","showCharts2","setShowCharts2","showCharts3","setShowCharts3","showCharts4","setShowCharts4","showCharts5","setShowCharts5","showCountAll","setShowCountAll","showNick","setShowNick","tabhub","setTabhub","periodDate1","setPeriodDate1","periodDate2","setPeriodDate2","startWeek","setStartWeek","timerId","setTimerId","widthGrafik","setWdthGrafik","text","setText","textDelete","setTextDelete","showTable","setShowTable","chatAdminId","process","useEffect","setTimeout","current","offsetWidth","filteredData","user","userfamily","username","chatId","replace","toLowerCase","includes","console","log","currentMonth","arr1","arrDel","deleted","arrClients","fetchData","getAllWMessages","messages","client","messagesUser","find","el","senderId","createdAt","undefined","push","arrClients2","getAllMessages","lastDate","date","split","year","getFullYear","month","String","padStart","day","getDate","newDateActivity","newClientName","allMessages","fromAdmin","messagesUsers","arr","message","arr2","newObj","avatar","new","registered","TG_ID","usage","round","period","activity","newObj2","filteredClients","clientSort","sort","a","b","arrProjects","project","newProject","start","time_start","created","time_created","teh","manager","company","openHub","hub","showBlock","ind","clearTimeout","i","setInterval","clientWidth","carrentDate","now","currentChas","getHours","count_cat","needDate","getTime","categories","specData","category","JSON","parse","worklist","work","cat","obj","count","arrNew","days1","countSpec","arrSpec","getDay","toLocaleDateString","week2","nameDay","month3","year4","nameMonth","nextDay","endDay","arr5","period5","toString","setDate","changeDate1","target","changeDate2","hideCharts","handleClick","prevShownTable","clickNext","getWorkersCount","response","arrayWorker","reverse","newWorker","phone","dateborn","city","stag","from","promoId","block","tabs","Suspense","fallback","WidgetsDropdown","WidgetsDropdown2","cilX","onClick","cursor","toLocaleString","Chart","variant","background","active","justifyContent","borderRadius","borderTopRightRadius","xs","textAlign","md","xl","align","hover","responsive","cilPeople","size","avatar2","thin","marginRight","mask","onChange","inputProps","placeholder","disableUnderline","marginLeft","position","top","right","fontSize","minWidth","lineHeight","getMinutes","visible","spec","arrowDown","marginTop","colSpan","alignment","caret","cilOptions","disabled","cilArrowBottom"],"sourceRoot":""}